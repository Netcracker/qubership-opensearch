{
    "$schema": "http://json-schema.org/schema#",
    "type": "object",
    "properties": {
        "curator": {
            "type": "object",
            "properties": {
                "affinity": {
                    "type": "object",
                    "default": {},
                    "$id": "#/properties/curator/properties/affinity",
                    "title": "The curator.affinity schema",
                    "description": "The affinity scheduling rules in `JSON` format"
                },
                "backupSchedule": {
                    "type": "string",
                    "default": "",
                    "$id": "#/properties/curator/properties/backupSchedule",
                    "title": "The curator.backupSchedule schema",
                    "description": "The schedule time in cron format (value must be within quotes)"
                },
                "customLabels": {
                    "type": "object",
                    "default": {},
                    "$id": "#/properties/curator/properties/customLabels",
                    "title": "The curator.customLabels schema",
                    "description": "The custom labels for the OpenSearch curator pod"
                },
                "dockerImage": {
                    "type": "string",
                    "default": "artifactorycn.netcracker.com:17008/product/prod.platform.elasticstack_docker-elastic-curator:master_latest",
                    "$id": "#/properties/curator/properties/dockerImage",
                    "title": "The curator.dockerImage schema",
                    "description": "The docker image of OpenSearch curator"
                },
                "dockerIndicesCleanerImage": {
                    "type": "string",
                    "default": "artifactorycn.netcracker.com:17008/product/prod.platform.elasticstack_docker-elastic-curator:master_latest_elasticsearch_indices_cleaner",
                    "$id": "#/properties/curator/properties/dockerIndicesCleanerImage",
                    "title": "The curator.dockerIndicesCleanerImage schema",
                    "description": "The docker image of OpenSearch indices cleaner"
                },
                "enabled": {
                    "type": "boolean",
                    "default": false,
                    "$id": "#/properties/curator/properties/enabled",
                    "title": "The curator.enabled schema",
                    "description": "Whether the installation of OpenSearch curator is to be enabled"
                },
                "evictionPolicy": {
                    "type": "string",
                    "default": "",
                    "$id": "#/properties/curator/properties/evictionPolicy",
                    "title": "The curator.evictionPolicy schema",
                    "description": "The eviction policy for snapshots"
                },
                "imagePullPolicy": {
                    "type": "string",
                    "default": "",
                    "$id": "#/properties/curator/properties/imagePullPolicy",
                    "title": "The curator.imagePullPolicy schema",
                    "description": "The image pull policy for OpenSearch curator container"
                },
                "indicesCleanerConfiguration": {
                    "type": "array",
                    "default": [],
                    "$id": "#/properties/curator/properties/indicesCleanerConfiguration",
                    "title": "The curator.indicesCleanerConfiguration schema",
                    "description": "The list of YAML key-value pair configurations in `opensearch-indices-cleaner-configuration` config map"
                },
                "indicesCleanerConfigurationKey": {
                    "type": "string",
                    "default": "patterns_to_delete",
                    "$id": "#/properties/curator/properties/indicesCleanerConfigurationKey",
                    "title": "The curator.indicesCleanerConfigurationKey schema",
                    "description": "The key for YAML key-value pair in `opensearch-indices-cleaner-configuration` config map"
                },
                "indicesCleanerSchedulerUnit": {
                    "type": "string",
                    "default": "",
                    "$id": "#/properties/curator/properties/indicesCleanerSchedulerUnit",
                    "title": "The curator.indicesCleanerSchedulerUnit schema",
                    "description": "The scheduler unit which specifies measure for value in `curator"
                },
                "indicesCleanerSchedulerUnitCount": {
                    "type": "string",
                    "default": "",
                    "$id": "#/properties/curator/properties/indicesCleanerSchedulerUnitCount",
                    "title": "The curator.indicesCleanerSchedulerUnitCount schema",
                    "description": "The count value for `curator"
                },
                "nodeSelector": {
                    "type": "object",
                    "default": {},
                    "$id": "#/properties/curator/properties/nodeSelector",
                    "title": "The curator.nodeSelector schema",
                    "description": "The selector that defines the nodes where the OpenSearch curator pods are scheduled on"
                },
                "opensearchHost": {
                    "type": "string",
                    "default": "",
                    "$id": "#/properties/curator/properties/opensearchHost",
                    "title": "The curator.opensearchHost schema",
                    "description": "The host address of OpenSearch, including the port"
                },
                "password": {
                    "type": "string",
                    "default": "",
                    "$id": "#/properties/curator/properties/password",
                    "title": "The curator.password schema",
                    "description": "The password of the OpenSearch Curator API user"
                },
                "priorityClassName": {
                    "type": "string",
                    "default": "",
                    "$id": "#/properties/curator/properties/priorityClassName",
                    "title": "The curator.priorityClassName schema",
                    "description": "The priority class to be used by the OpenSearch Curator pods"
                },
                "resources": {
                    "type": "object",
                    "properties": {
                        "limits": {
                            "type": "object",
                            "properties": {
                                "cpu": {
                                    "default": "200m",
                                    "$id": "#/properties/curator/properties/resources/properties/limits/properties/cpu",
                                    "title": "The curator.resources.limits.cpu schema",
                                    "description": "The maximum number of CPUs the curator and indices cleaner containers should use",
                                    "internal": true,
                                    "envSpecific": true,
                                    "comment": "don't use type field, because it breaks backward compatibility"
                                },
                                "memory": {
                                    "type": "string",
                                    "default": "256Mi",
                                    "$id": "#/properties/curator/properties/resources/properties/limits/properties/memory",
                                    "title": "The curator.resources.limits.memory schema",
                                    "description": "The maximum amount of memory the curator and indices cleaner containers should use",
                                    "internal": true,
                                    "envSpecific": true
                                }
                            },
                            "$id": "#/properties/curator/properties/resources/properties/limits",
                            "title": "The curator.resources.limits schema",
                            "description": "curator.resources.limits parameters"
                        },
                        "requests": {
                            "type": "object",
                            "properties": {
                                "cpu": {
                                    "default": "200m",
                                    "$id": "#/properties/curator/properties/resources/properties/requests/properties/cpu",
                                    "title": "The curator.resources.requests.cpu schema",
                                    "description": "The minimum number of CPUs the curator and indices cleaner containers should use",
                                    "internal": true,
                                    "envSpecific": true,
                                    "comment": "don't use type field, because it breaks backward compatibility"
                                },
                                "memory": {
                                    "type": "string",
                                    "default": "256Mi",
                                    "$id": "#/properties/curator/properties/resources/properties/requests/properties/memory",
                                    "title": "The curator.resources.requests.memory schema",
                                    "description": "The minimum amount of memory the curator and indices cleaner containers should use",
                                    "internal": true,
                                    "envSpecific": true
                                }
                            },
                            "$id": "#/properties/curator/properties/resources/properties/requests",
                            "title": "The curator.resources.requests schema",
                            "description": "curator.resources.requests parameters"
                        }
                    },
                    "$id": "#/properties/curator/properties/resources",
                    "title": "The curator.resources schema",
                    "description": "curator.resources parameters"
                },
                "securityContext": {
                    "type": "object",
                    "default": {},
                    "$id": "#/properties/curator/properties/securityContext",
                    "title": "The curator.securityContext schema",
                    "description": "The pod-level security attributes and common container settings for OpenSearch curator pod"
                },
                "snapshotRepositoryName": {
                    "type": "string",
                    "default": "",
                    "$id": "#/properties/curator/properties/snapshotRepositoryName",
                    "title": "The curator.snapshotRepositoryName schema",
                    "description": "The name of snapshot repository in the OpenSearch"
                },
                "tls": {
                    "type": "object",
                    "properties": {
                        "certificates": {
                            "type": "object",
                            "properties": {
                                "ca": {
                                    "type": "string",
                                    "default": "",
                                    "$id": "#/properties/curator/properties/tls/properties/certificates/properties/ca",
                                    "title": "The curator.tls.certificates.ca schema",
                                    "description": "The root CA certificate in BASE64 format"
                                },
                                "crt": {
                                    "type": "string",
                                    "default": "",
                                    "$id": "#/properties/curator/properties/tls/properties/certificates/properties/crt",
                                    "title": "The curator.tls.certificates.crt schema",
                                    "description": "The certificate in BASE64 format"
                                },
                                "key": {
                                    "type": "string",
                                    "default": "",
                                    "$id": "#/properties/curator/properties/tls/properties/certificates/properties/key",
                                    "title": "The curator.tls.certificates.key schema",
                                    "description": "The private key in BASE64 format"
                                }
                            },
                            "$id": "#/properties/curator/properties/tls/properties/certificates",
                            "title": "The curator.tls.certificates schema",
                            "description": "curator.tls.certificates parameters"
                        },
                        "enabled": {
                            "type": "boolean",
                            "default": true,
                            "$id": "#/properties/curator/properties/tls/properties/enabled",
                            "title": "The curator.tls.enabled schema",
                            "description": "Whether TLS is to be enabled for OpenSearch Curator"
                        },
                        "secretName": {
                            "type": "string",
                            "default": "",
                            "$id": "#/properties/curator/properties/tls/properties/secretName",
                            "title": "The curator.tls.secretName schema",
                            "description": "The name of the secret that contains TLS certificates of OpenSearch Curator"
                        },
                        "subjectAlternativeName": {
                            "type": "object",
                            "properties": {
                                "additionalDnsNames": {
                                    "type": "array",
                                    "default": [],
                                    "$id": "#/properties/curator/properties/tls/properties/subjectAlternativeName/properties/additionalDnsNames",
                                    "title": "The curator.tls.subjectAlternativeName.additionalDnsNames schema",
                                    "description": "The list of additional DNS names to be added to the `Subject Alternative Name` field of OpenSearch Curator TLS certificate"
                                },
                                "additionalIpAddresses": {
                                    "type": "array",
                                    "default": [],
                                    "$id": "#/properties/curator/properties/tls/properties/subjectAlternativeName/properties/additionalIpAddresses",
                                    "title": "The curator.tls.subjectAlternativeName.additionalIpAddresses schema",
                                    "description": "The list of additional IP addresses to be added to the `Subject Alternative Name` field of OpenSearch Curator TLS certificate"
                                }
                            },
                            "$id": "#/properties/curator/properties/tls/properties/subjectAlternativeName",
                            "title": "The curator.tls.subjectAlternativeName schema",
                            "description": "curator.tls.subjectAlternativeName parameters"
                        }
                    },
                    "$id": "#/properties/curator/properties/tls",
                    "title": "The curator.tls schema",
                    "description": "curator.tls parameters"
                },
                "tolerations": {
                    "type": "array",
                    "default": [],
                    "$id": "#/properties/curator/properties/tolerations",
                    "title": "The curator.tolerations schema",
                    "description": "The list of toleration policies for OpenSearch curator pod  in `JSON` format"
                },
                "username": {
                    "type": "string",
                    "default": "",
                    "$id": "#/properties/curator/properties/username",
                    "title": "The curator.username schema",
                    "description": "The name of the OpenSearch Curator API user"
                }
            },
            "$id": "#/properties/curator",
            "title": "The curator schema",
            "description": "curator parameters"
        },
        "dashboards": {
            "type": "object",
            "properties": {
                "affinity": {
                    "type": "object",
                    "default": {},
                    "$id": "#/properties/dashboards/properties/affinity",
                    "title": "The dashboards.affinity schema",
                    "description": "The affinity scheduling rules in the `JSON` format"
                },
                "config": {
                    "type": "object",
                    "default": {},
                    "$id": "#/properties/dashboards/properties/config",
                    "title": "The dashboards.config schema",
                    "description": "The configuration of dashboards (`dashboards"
                },
                "dockerImage": {
                    "type": "string",
                    "default": "artifactorycn.netcracker.com:17064/opensearchproject/opensearch-dashboards:2.11.1",
                    "$id": "#/properties/dashboards/properties/dockerImage",
                    "title": "The dashboards.dockerImage schema",
                    "description": "The docker image of dashboards"
                },
                "enabled": {
                    "type": "boolean",
                    "default": false,
                    "$id": "#/properties/dashboards/properties/enabled",
                    "title": "The dashboards.enabled schema",
                    "description": "Whether the installation of Dashboards is to be enabled"
                },
                "envFrom": {
                    "type": "array",
                    "default": [],
                    "$id": "#/properties/dashboards/properties/envFrom",
                    "title": "The dashboards.envFrom schema",
                    "description": "The list of sources to populate environment variables in the dashboards' container"
                },
                "extraContainers": {
                    "type": "array",
                    "default": [],
                    "$id": "#/properties/dashboards/properties/extraContainers",
                    "title": "The dashboards.extraContainers schema",
                    "description": "The list of extra containers to add inside the dashboards' pod"
                },
                "extraEnvs": {
                    "type": "array",
                    "default": [],
                    "$id": "#/properties/dashboards/properties/extraEnvs",
                    "title": "The dashboards.extraEnvs schema",
                    "description": "The list of extra environment variables to add inside the dashboards' pod"
                },
                "extraInitContainers": {
                    "type": "array",
                    "default": [],
                    "$id": "#/properties/dashboards/properties/extraInitContainers",
                    "title": "The dashboards.extraInitContainers schema",
                    "description": "The list of extra init containers to add inside the dashboards' pod"
                },
                "extraVolumeMounts": {
                    "type": "array",
                    "default": [],
                    "$id": "#/properties/dashboards/properties/extraVolumeMounts",
                    "title": "The dashboards.extraVolumeMounts schema",
                    "description": "The list of extra volume mounts to add inside the dashboards' pod"
                },
                "extraVolumes": {
                    "type": "array",
                    "default": [],
                    "$id": "#/properties/dashboards/properties/extraVolumes",
                    "title": "The dashboards.extraVolumes schema",
                    "description": "The list of extra volumes to add inside the dashboards' pod"
                },
                "hostAliases": {
                    "type": "array",
                    "default": [],
                    "$id": "#/properties/dashboards/properties/hostAliases",
                    "title": "The dashboards.hostAliases schema",
                    "description": "The list of hosts and IPs that are injected into the dashboards' pod's hosts file"
                },
                "imagePullPolicy": {
                    "type": "string",
                    "default": "",
                    "$id": "#/properties/dashboards/properties/imagePullPolicy",
                    "title": "The dashboards.imagePullPolicy schema",
                    "description": "The image pull policy for the dashboards' container"
                },
                "imagePullSecrets": {
                    "type": "array",
                    "default": [],
                    "$id": "#/properties/dashboards/properties/imagePullSecrets",
                    "title": "The dashboards.imagePullSecrets schema",
                    "description": "The list of references to secrets in the same namespace to use for pulling any of the images used by the dashboards' container"
                },
                "ingress": {
                    "type": "object",
                    "properties": {
                        "annotations": {
                            "type": "object",
                            "default": {},
                            "$id": "#/properties/dashboards/properties/ingress/properties/annotations",
                            "title": "The dashboards.ingress.annotations schema",
                            "description": "The annotations for the dashboards' ingress"
                        },
                        "className": {
                            "type": "string",
                            "default": "",
                            "$id": "#/properties/dashboards/properties/ingress/properties/className",
                            "title": "The dashboards.ingress.className schema",
                            "description": "The class name of the dashboards' ingress"
                        },
                        "enabled": {
                            "type": "boolean",
                            "default": false,
                            "$id": "#/properties/dashboards/properties/ingress/properties/enabled",
                            "title": "The dashboards.ingress.enabled schema",
                            "description": "Whether the dashboards' ingress is to be enabled"
                        },
                        "hosts": {
                            "type": "array",
                            "items": {
                                "type": "object",
                                "properties": {
                                    "host": {
                                        "type": "string"
                                    },
                                    "paths": {
                                        "type": "array",
                                        "items": {
                                            "type": "object",
                                            "properties": {
                                                "path": {
                                                    "type": "string"
                                                }
                                            }
                                        }
                                    }
                                }
                            },
                            "default": [
                                {
                                    "host": "chart-example.local",
                                    "paths": [
                                        {
                                            "path": "/"
                                        }
                                    ]
                                }
                            ],
                            "$id": "#/properties/dashboards/properties/ingress/properties/hosts",
                            "title": "The dashboards.ingress.hosts schema",
                            "description": "The list of host names for the dashboards' ingress"
                        },
                        "tls": {
                            "type": "array",
                            "default": [],
                            "$id": "#/properties/dashboards/properties/ingress/properties/tls",
                            "title": "The dashboards.ingress.tls schema",
                            "description": "The list of TLS configurations for the dashboards' ingress"
                        }
                    },
                    "$id": "#/properties/dashboards/properties/ingress",
                    "title": "The dashboards.ingress schema",
                    "description": "dashboards.ingress parameters"
                },
                "labels": {
                    "type": "object",
                    "default": {},
                    "$id": "#/properties/dashboards/properties/labels",
                    "title": "The dashboards.labels schema",
                    "description": "The labels that are to be specified on dashboards' pod"
                },
                "nodeSelector": {
                    "type": "object",
                    "default": {},
                    "$id": "#/properties/dashboards/properties/nodeSelector",
                    "title": "The dashboards.nodeSelector schema",
                    "description": "The selector that defines the nodes where dashboards' pods are scheduled on"
                },
                "opensearchAccount": {
                    "type": "object",
                    "properties": {
                        "keyPassphrase": {
                            "type": "object",
                            "properties": {
                                "enabled": {
                                    "type": "boolean",
                                    "default": false,
                                    "$id": "#/properties/dashboards/properties/opensearchAccount/properties/keyPassphrase/properties/enabled",
                                    "title": "The dashboards.opensearchAccount.keyPassphrase.enabled schema",
                                    "description": "Whether mounting in key passphrase for `opensearchAccount` is to be enabled"
                                }
                            },
                            "$id": "#/properties/dashboards/properties/opensearchAccount/properties/keyPassphrase",
                            "title": "The dashboards.opensearchAccount.keyPassphrase schema",
                            "description": "dashboards.opensearchAccount.keyPassphrase parameters"
                        },
                        "secret": {
                            "type": "string",
                            "default": "",
                            "$id": "#/properties/dashboards/properties/opensearchAccount/properties/secret",
                            "title": "The dashboards.opensearchAccount.secret schema",
                            "description": "The name of the secret with the dashboards' server user as configured in `dashboards"
                        }
                    },
                    "$id": "#/properties/dashboards/properties/opensearchAccount",
                    "title": "The dashboards.opensearchAccount schema",
                    "description": "dashboards.opensearchAccount parameters"
                },
                "opensearchHosts": {
                    "type": "string",
                    "default": "",
                    "$id": "#/properties/dashboards/properties/opensearchHosts",
                    "title": "The dashboards.opensearchHosts schema",
                    "description": "The OpenSearch hosts for dashboards to connect"
                },
                "podAnnotations": {
                    "type": "object",
                    "default": {},
                    "$id": "#/properties/dashboards/properties/podAnnotations",
                    "title": "The dashboards.podAnnotations schema",
                    "description": "The annotations for the dashboards' pod"
                },
                "podSecurityContext": {
                    "type": "object",
                    "default": {},
                    "$id": "#/properties/dashboards/properties/podSecurityContext",
                    "title": "The dashboards.podSecurityContext schema",
                    "description": "The pod-level security attributes and common container settings for the dashboards' pod"
                },
                "priorityClassName": {
                    "type": "string",
                    "default": "",
                    "$id": "#/properties/dashboards/properties/priorityClassName",
                    "title": "The dashboards.priorityClassName schema",
                    "description": "The priority class to be used by the dashboards' pod"
                },
                "replicas": {
                    "type": "integer",
                    "default": 1,
                    "$id": "#/properties/dashboards/properties/replicas",
                    "title": "The dashboards.replicas schema",
                    "description": "The number of dashboards' instances"
                },
                "resources": {
                    "type": "object",
                    "properties": {
                        "limits": {
                            "type": "object",
                            "properties": {
                                "cpu": {
                                    "default": "100m",
                                    "$id": "#/properties/dashboards/properties/resources/properties/limits/properties/cpu",
                                    "title": "The dashboards.resources.limits.cpu schema",
                                    "description": "The maximum number of CPUs the dashboards' container should use",
                                    "internal": true,
                                    "envSpecific": true,
                                    "comment": "don't use type field, because it breaks backward compatibility"
                                },
                                "memory": {
                                    "type": "string",
                                    "default": "512M",
                                    "$id": "#/properties/dashboards/properties/resources/properties/limits/properties/memory",
                                    "title": "The dashboards.resources.limits.memory schema",
                                    "description": "The maximum amount of memory the dashboards' container should use",
                                    "internal": true,
                                    "envSpecific": true
                                }
                            },
                            "$id": "#/properties/dashboards/properties/resources/properties/limits",
                            "title": "The dashboards.resources.limits schema",
                            "description": "dashboards.resources.limits parameters"
                        },
                        "requests": {
                            "type": "object",
                            "properties": {
                                "cpu": {
                                    "default": "100m",
                                    "$id": "#/properties/dashboards/properties/resources/properties/requests/properties/cpu",
                                    "title": "The dashboards.resources.requests.cpu schema",
                                    "description": "The minimum number of CPUs the dashboards' container should use",
                                    "internal": true,
                                    "envSpecific": true,
                                    "comment": "don't use type field, because it breaks backward compatibility"
                                },
                                "memory": {
                                    "type": "string",
                                    "default": "512M",
                                    "$id": "#/properties/dashboards/properties/resources/properties/requests/properties/memory",
                                    "title": "The dashboards.resources.requests.memory schema",
                                    "description": "The minimum amount of memory the dashboards' container should use",
                                    "internal": true,
                                    "envSpecific": true
                                }
                            },
                            "$id": "#/properties/dashboards/properties/resources/properties/requests",
                            "title": "The dashboards.resources.requests schema",
                            "description": "dashboards.resources.requests parameters"
                        }
                    },
                    "$id": "#/properties/dashboards/properties/resources",
                    "title": "The dashboards.resources schema",
                    "description": "dashboards.resources parameters"
                },
                "secretMounts": {
                    "type": "array",
                    "default": [],
                    "$id": "#/properties/dashboards/properties/secretMounts",
                    "title": "The dashboards.secretMounts schema",
                    "description": "The list of secrets and their paths to mount inside the dashboards' pod"
                },
                "securityContext": {
                    "type": "object",
                    "properties": {},
                    "default": {
                        "capabilities": {
                            "drop": [
                                "ALL"
                            ]
                        },
                        "runAsNonRoot": true
                    },
                    "$id": "#/properties/dashboards/properties/securityContext",
                    "title": "The dashboards.securityContext schema",
                    "description": "The container-level security attributes and common container settings for the dashboards' container"
                },
                "serverHost": {
                    "type": "string",
                    "default": "0.0.0.0",
                    "$id": "#/properties/dashboards/properties/serverHost",
                    "title": "The dashboards.serverHost schema",
                    "description": "The host of the dashboards' server"
                },
                "service": {
                    "type": "object",
                    "properties": {
                        "annotations": {
                            "type": "object",
                            "default": {},
                            "$id": "#/properties/dashboards/properties/service/properties/annotations",
                            "title": "The dashboards.service.annotations schema",
                            "description": "The annotations that are to be specified on the dashboards' service"
                        },
                        "httpPortName": {
                            "type": "string",
                            "default": "http",
                            "$id": "#/properties/dashboards/properties/service/properties/httpPortName",
                            "title": "The dashboards.service.httpPortName schema",
                            "description": "The name of the HTTP port for the dashboards' service"
                        },
                        "labels": {
                            "type": "object",
                            "default": {},
                            "$id": "#/properties/dashboards/properties/service/properties/labels",
                            "title": "The dashboards.service.labels schema",
                            "description": "The labels that are to be specified on the dashboards' service"
                        },
                        "loadBalancerIP": {
                            "type": "string",
                            "default": "",
                            "$id": "#/properties/dashboards/properties/service/properties/loadBalancerIP",
                            "title": "The dashboards.service.loadBalancerIP schema",
                            "description": "The load balancer IP that is used for the dashboards' service"
                        },
                        "loadBalancerSourceRanges": {
                            "type": "array",
                            "default": [],
                            "$id": "#/properties/dashboards/properties/service/properties/loadBalancerSourceRanges",
                            "title": "The dashboards.service.loadBalancerSourceRanges schema",
                            "description": "The client IPs for which traffic is not restricted through cloud-provider load-balancer"
                        },
                        "nodePort": {
                            "type": "string",
                            "default": "",
                            "$id": "#/properties/dashboards/properties/service/properties/nodePort",
                            "title": "The dashboards.service.nodePort schema",
                            "description": "The node port that is used for the dashboards' service"
                        },
                        "port": {
                            "type": "integer",
                            "default": 5601,
                            "$id": "#/properties/dashboards/properties/service/properties/port",
                            "title": "The dashboards.service.port schema",
                            "description": "The port that is used for the dashboards' service"
                        },
                        "type": {
                            "type": "string",
                            "default": "ClusterIP",
                            "$id": "#/properties/dashboards/properties/service/properties/type",
                            "title": "The dashboards.service.type schema",
                            "description": "The type of the dashboards' service"
                        }
                    },
                    "$id": "#/properties/dashboards/properties/service",
                    "title": "The dashboards.service schema",
                    "description": "dashboards.service parameters"
                },
                "serviceAccount": {
                    "type": "object",
                    "properties": {
                        "create": {
                            "type": "boolean",
                            "default": true,
                            "$id": "#/properties/dashboards/properties/serviceAccount/properties/create",
                            "title": "The dashboards.serviceAccount.create schema",
                            "description": "Whether the default service account for dashboards is to be created"
                        },
                        "name": {
                            "type": "string",
                            "default": "",
                            "$id": "#/properties/dashboards/properties/serviceAccount/properties/name",
                            "title": "The dashboards.serviceAccount.name schema",
                            "description": "The name for the dashboards' service account"
                        }
                    },
                    "$id": "#/properties/dashboards/properties/serviceAccount",
                    "title": "The dashboards.serviceAccount schema",
                    "description": "dashboards.serviceAccount parameters"
                },
                "tolerations": {
                    "type": "array",
                    "default": [],
                    "$id": "#/properties/dashboards/properties/tolerations",
                    "title": "The dashboards.tolerations schema",
                    "description": "The list of toleration policies for the dashboards' pod in the `JSON` format"
                },
                "updateStrategy": {
                    "type": "string",
                    "default": "Recreate",
                    "$id": "#/properties/dashboards/properties/updateStrategy",
                    "title": "The dashboards.updateStrategy schema",
                    "description": "The strategy used to replace old pods by new ones"
                }
            },
            "$id": "#/properties/dashboards",
            "title": "The dashboards schema",
            "description": "dashboards parameters"
        },
        "dbaasAdapter": {
            "type": "object",
            "properties": {
                "affinity": {
                    "type": "object",
                    "default": {},
                    "$id": "#/properties/dbaasAdapter/properties/affinity",
                    "title": "The dbaasAdapter.affinity schema",
                    "description": "The affinity scheduling rules in `JSON` format"
                },
                "apiVersion": {
                    "type": "string",
                    "default": "v2",
                    "$id": "#/properties/dbaasAdapter/properties/apiVersion",
                    "title": "The dbaasAdapter.apiVersion schema",
                    "description": "The version of OpenSearch DBaaS Adapter API"
                },
                "customLabels": {
                    "type": "object",
                    "default": {},
                    "$id": "#/properties/dbaasAdapter/properties/customLabels",
                    "title": "The dbaasAdapter.customLabels schema",
                    "description": "The custom labels for the OpenSearch DBaaS adapter pod"
                },
                "dbaasAdapterAddress": {
                    "type": "string",
                    "default": "",
                    "$id": "#/properties/dbaasAdapter/properties/dbaasAdapterAddress",
                    "title": "The dbaasAdapter.dbaasAdapterAddress schema",
                    "description": "The address of OpenSearch DBaaS adapter, where aggregator should send requests"
                },
                "dbaasAggregatorPhysicalDatabaseIdentifier": {
                    "type": "string",
                    "default": "",
                    "$id": "#/properties/dbaasAdapter/properties/dbaasAggregatorPhysicalDatabaseIdentifier",
                    "title": "The dbaasAdapter.dbaasAggregatorPhysicalDatabaseIdentifier schema",
                    "description": "The unique ID of physical database, which OpenSearch DBaaS adapter connects to"
                },
                "dbaasAggregatorRegistrationAddress": {
                    "type": "string",
                    "default": "",
                    "$id": "#/properties/dbaasAdapter/properties/dbaasAggregatorRegistrationAddress",
                    "title": "The dbaasAdapter.dbaasAggregatorRegistrationAddress schema",
                    "description": "The address of DBaaS aggregator, which should register physical database"
                },
                "dbaasPassword": {
                    "type": "string",
                    "default": "",
                    "$id": "#/properties/dbaasAdapter/properties/dbaasPassword",
                    "title": "The dbaasAdapter.dbaasPassword schema",
                    "description": "The password of the OpenSearch DBaaS adapter user, either a new user or an existing one"
                },
                "dbaasUsername": {
                    "type": "string",
                    "default": "",
                    "$id": "#/properties/dbaasAdapter/properties/dbaasUsername",
                    "title": "The dbaasAdapter.dbaasUsername schema",
                    "description": "The name of the OpenSearch DBaaS adapter user, either a new user or an existing one"
                },
                "dockerImage": {
                    "type": "string",
                    "default": "artifactorycn.netcracker.com:17008/product/prod.platform.elasticstack_dbaas-opensearch-adapter:master_latest",
                    "$id": "#/properties/dbaasAdapter/properties/dockerImage",
                    "title": "The dbaasAdapter.dockerImage schema",
                    "description": "The docker image of OpenSearch DBaaS adapter"
                },
                "enabled": {
                    "type": "boolean",
                    "default": false,
                    "$id": "#/properties/dbaasAdapter/properties/enabled",
                    "title": "The dbaasAdapter.enabled schema",
                    "description": "Whether the installation of OpenSearch DBaaS adapter is to be enabled"
                },
                "imagePullPolicy": {
                    "type": "string",
                    "default": "",
                    "$id": "#/properties/dbaasAdapter/properties/imagePullPolicy",
                    "title": "The dbaasAdapter.imagePullPolicy schema",
                    "description": "The image pull policy for OpenSearch DBaaS adapter container"
                },
                "netcrackerOpensearchClusterVersion": {
                    "type": "string",
                    "default": "",
                    "$id": "#/properties/dbaasAdapter/properties/netcrackerOpensearchClusterVersion",
                    "title": "The dbaasAdapter.netcrackerOpensearchClusterVersion schema",
                    "description": "The one of labels to set on the project, would be needed for clients to choose appropriate cluster"
                },
                "nodeSelector": {
                    "type": "object",
                    "default": {},
                    "$id": "#/properties/dbaasAdapter/properties/nodeSelector",
                    "title": "The dbaasAdapter.nodeSelector schema",
                    "description": "The selector that defines the nodes where the OpenSearch DBaaS adapter pods are scheduled on"
                },
                "opensearchClusterVersion": {
                    "type": "string",
                    "default": "",
                    "$id": "#/properties/dbaasAdapter/properties/opensearchClusterVersion",
                    "title": "The dbaasAdapter.opensearchClusterVersion schema",
                    "description": "The one of labels to set on the project, would be needed for clients to choose appropriate cluster"
                },
                "opensearchHost": {
                    "type": "string",
                    "default": "",
                    "$id": "#/properties/dbaasAdapter/properties/opensearchHost",
                    "title": "The dbaasAdapter.opensearchHost schema",
                    "description": "The host address of OpenSearch"
                },
                "opensearchPort": {
                    "type": "integer",
                    "default": 9200,
                    "$id": "#/properties/dbaasAdapter/properties/opensearchPort",
                    "title": "The dbaasAdapter.opensearchPort schema",
                    "description": "The port of OpenSearch"
                },
                "opensearchProtocol": {
                    "type": "string",
                    "default": "",
                    "$id": "#/properties/dbaasAdapter/properties/opensearchProtocol",
                    "title": "The dbaasAdapter.opensearchProtocol schema",
                    "description": "The protocol of communication with the OpenSearch"
                },
                "opensearchRepo": {
                    "type": "string",
                    "default": "snapshots",
                    "$id": "#/properties/dbaasAdapter/properties/opensearchRepo",
                    "title": "The dbaasAdapter.opensearchRepo schema",
                    "description": "The name of snapshot repository in OpenSearch"
                },
                "opensearchRepoRoot": {
                    "type": "string",
                    "default": "/usr/share/opensearch",
                    "$id": "#/properties/dbaasAdapter/properties/opensearchRepoRoot",
                    "title": "The dbaasAdapter.opensearchRepoRoot schema",
                    "description": "The absolute path in OpenSearch file system where snapshot repositories for backups are created"
                },
                "priorityClassName": {
                    "type": "string",
                    "default": "",
                    "$id": "#/properties/dbaasAdapter/properties/priorityClassName",
                    "title": "The dbaasAdapter.priorityClassName schema",
                    "description": "The priority class to be used by the OpenSearch DBaaS adapter pods"
                },
                "registrationAuthPassword": {
                    "type": "string",
                    "default": "",
                    "$id": "#/properties/dbaasAdapter/properties/registrationAuthPassword",
                    "title": "The dbaasAdapter.registrationAuthPassword schema",
                    "description": "The password of user for DBaaS aggregator's registration API"
                },
                "registrationAuthUsername": {
                    "type": "string",
                    "default": "",
                    "$id": "#/properties/dbaasAdapter/properties/registrationAuthUsername",
                    "title": "The dbaasAdapter.registrationAuthUsername schema",
                    "description": "The name of user for DBaaS aggregator's registration API"
                },
                "resources": {
                    "type": "object",
                    "properties": {
                        "limits": {
                            "type": "object",
                            "properties": {
                                "cpu": {
                                    "default": "200m",
                                    "$id": "#/properties/dbaasAdapter/properties/resources/properties/limits/properties/cpu",
                                    "title": "The dbaasAdapter.resources.limits.cpu schema",
                                    "description": "The maximum number of CPUs the DBaaS adapter container should use",
                                    "internal": true,
                                    "envSpecific": true,
                                    "comment": "don't use type field, because it breaks backward compatibility"
                                },
                                "memory": {
                                    "type": "string",
                                    "default": "32Mi",
                                    "$id": "#/properties/dbaasAdapter/properties/resources/properties/limits/properties/memory",
                                    "title": "The dbaasAdapter.resources.limits.memory schema",
                                    "description": "The maximum amount of memory the DBaaS adapter container can use",
                                    "internal": true,
                                    "envSpecific": true
                                }
                            },
                            "$id": "#/properties/dbaasAdapter/properties/resources/properties/limits",
                            "title": "The dbaasAdapter.resources.limits schema",
                            "description": "dbaasAdapter.resources.limits parameters"
                        },
                        "requests": {
                            "type": "object",
                            "properties": {
                                "cpu": {
                                    "default": "200m",
                                    "$id": "#/properties/dbaasAdapter/properties/resources/properties/requests/properties/cpu",
                                    "title": "The dbaasAdapter.resources.requests.cpu schema",
                                    "description": "The minimum number of CPUs the DBaaS adapter container should use",
                                    "internal": true,
                                    "envSpecific": true,
                                    "comment": "don't use type field, because it breaks backward compatibility"
                                },
                                "memory": {
                                    "type": "string",
                                    "default": "32Mi",
                                    "$id": "#/properties/dbaasAdapter/properties/resources/properties/requests/properties/memory",
                                    "title": "The dbaasAdapter.resources.requests.memory schema",
                                    "description": "The minimum amount of memory the DBaaS adapter container should use",
                                    "internal": true,
                                    "envSpecific": true
                                }
                            },
                            "$id": "#/properties/dbaasAdapter/properties/resources/properties/requests",
                            "title": "The dbaasAdapter.resources.requests schema",
                            "description": "dbaasAdapter.resources.requests parameters"
                        }
                    },
                    "$id": "#/properties/dbaasAdapter/properties/resources",
                    "title": "The dbaasAdapter.resources schema",
                    "description": "dbaasAdapter.resources parameters"
                },
                "securityContext": {
                    "type": "object",
                    "default": {},
                    "$id": "#/properties/dbaasAdapter/properties/securityContext",
                    "title": "The dbaasAdapter.securityContext schema",
                    "description": "The pod-level security attributes and common container settings for OpenSearch DBaaS adapter pod"
                },
                "tls": {
                    "type": "object",
                    "properties": {
                        "certificates": {
                            "type": "object",
                            "properties": {
                                "ca": {
                                    "type": "string",
                                    "default": "",
                                    "$id": "#/properties/dbaasAdapter/properties/tls/properties/certificates/properties/ca",
                                    "title": "The dbaasAdapter.tls.certificates.ca schema",
                                    "description": "The root CA certificate in BASE64 format"
                                },
                                "crt": {
                                    "type": "string",
                                    "default": "",
                                    "$id": "#/properties/dbaasAdapter/properties/tls/properties/certificates/properties/crt",
                                    "title": "The dbaasAdapter.tls.certificates.crt schema",
                                    "description": "The certificate in BASE64 format"
                                },
                                "key": {
                                    "type": "string",
                                    "default": "",
                                    "$id": "#/properties/dbaasAdapter/properties/tls/properties/certificates/properties/key",
                                    "title": "The dbaasAdapter.tls.certificates.key schema",
                                    "description": "The private key in BASE64 format"
                                }
                            },
                            "$id": "#/properties/dbaasAdapter/properties/tls/properties/certificates",
                            "title": "The dbaasAdapter.tls.certificates schema",
                            "description": "dbaasAdapter.tls.certificates parameters"
                        },
                        "enabled": {
                            "type": "boolean",
                            "default": true,
                            "$id": "#/properties/dbaasAdapter/properties/tls/properties/enabled",
                            "title": "The dbaasAdapter.tls.enabled schema",
                            "description": "Whether TLS is to be enabled for OpenSearch DBaaS adapter"
                        },
                        "secretName": {
                            "type": "string",
                            "default": "",
                            "$id": "#/properties/dbaasAdapter/properties/tls/properties/secretName",
                            "title": "The dbaasAdapter.tls.secretName schema",
                            "description": "The name of the secret that contains TLS certificates"
                        },
                        "subjectAlternativeName": {
                            "type": "object",
                            "properties": {
                                "additionalDnsNames": {
                                    "type": "array",
                                    "default": [],
                                    "$id": "#/properties/dbaasAdapter/properties/tls/properties/subjectAlternativeName/properties/additionalDnsNames",
                                    "title": "The dbaasAdapter.tls.subjectAlternativeName.additionalDnsNames schema",
                                    "description": "The list of additional DNS names to be added to the `Subject Alternative Name` field of TLS certificate for OpenSearch DBaaS adapter"
                                },
                                "additionalIpAddresses": {
                                    "type": "array",
                                    "default": [],
                                    "$id": "#/properties/dbaasAdapter/properties/tls/properties/subjectAlternativeName/properties/additionalIpAddresses",
                                    "title": "The dbaasAdapter.tls.subjectAlternativeName.additionalIpAddresses schema",
                                    "description": "The list of additional IP addresses to be added to the `Subject Alternative Name` field of TLS certificate for OpenSearch DBaaS adapter"
                                }
                            },
                            "$id": "#/properties/dbaasAdapter/properties/tls/properties/subjectAlternativeName",
                            "title": "The dbaasAdapter.tls.subjectAlternativeName schema",
                            "description": "dbaasAdapter.tls.subjectAlternativeName parameters"
                        }
                    },
                    "$id": "#/properties/dbaasAdapter/properties/tls",
                    "title": "The dbaasAdapter.tls schema",
                    "description": "dbaasAdapter.tls parameters"
                },
                "tolerations": {
                    "type": "array",
                    "default": [],
                    "$id": "#/properties/dbaasAdapter/properties/tolerations",
                    "title": "The dbaasAdapter.tolerations schema",
                    "description": "The list of toleration policies for OpenSearch DBaaS adapter pod in `JSON` format"
                }
            },
            "$id": "#/properties/dbaasAdapter",
            "title": "The dbaasAdapter schema",
            "description": "dbaasAdapter parameters"
        },
        "fullnameOverride": {
            "type": "string",
            "default": "opensearch",
            "$id": "#/properties/fullnameOverride",
            "title": "The fullnameOverride schema",
            "description": "The base name for all OpenSearch resources (Services, StatefulSets, and so on)"
        },
        "global": {
            "type": "object",
            "properties": {
                "cloudIntegrationEnabled": {
                    "type": "boolean",
                    "default": true,
                    "$id": "#/properties/global/properties/cloudIntegrationEnabled",
                    "title": "The global.cloudIntegrationEnabled schema",
                    "description": "The parameter specifies whether to apply global cloud parameters instead of parameters described in OpenSearch service in accordance with Cloud Passport and CLoud Infra Passport"
                },
                "clusterName": {
                    "type": "string",
                    "default": "opensearch",
                    "$id": "#/properties/global/properties/clusterName",
                    "title": "The global.clusterName schema",
                    "description": "The name of the OpenSearch cluster"
                },
                "customLabels": {
                    "type": "object",
                    "default": {},
                    "$id": "#/properties/global/properties/customLabels",
                    "title": "The global.customLabels schema",
                    "description": "The custom labels for all pods that are related to the OpenSearch service"
                },
                "disasterRecovery": {
                    "type": "object",
                    "properties": {
                        "afterServices": {
                            "type": "array",
                            "default": [],
                            "$id": "#/properties/global/properties/disasterRecovery/properties/afterServices",
                            "title": "The global.disasterRecovery.afterServices schema",
                            "description": "The list of `SiteManager` names for services after which the OpenSearch service switchover is to be run"
                        },
                        "httpAuth": {
                            "type": "object",
                            "properties": {
                                "enabled": {
                                    "type": "boolean",
                                    "default": false,
                                    "$id": "#/properties/global/properties/disasterRecovery/properties/httpAuth/properties/enabled",
                                    "title": "The global.disasterRecovery.httpAuth.enabled schema",
                                    "description": "Whether site manager authentication is to be enabled"
                                },
                                "restrictedEnvironment": {
                                    "type": "boolean",
                                    "default": false,
                                    "$id": "#/properties/global/properties/disasterRecovery/properties/httpAuth/properties/restrictedEnvironment",
                                    "title": "The global.disasterRecovery.httpAuth.restrictedEnvironment schema",
                                    "description": "Whether the `system:auth-delegator` cluster role is to be bound to the OpenSearch operator service account"
                                },
                                "smNamespace": {
                                    "type": "string",
                                    "default": "site-manager",
                                    "$id": "#/properties/global/properties/disasterRecovery/properties/httpAuth/properties/smNamespace",
                                    "title": "The global.disasterRecovery.httpAuth.smNamespace schema",
                                    "description": "The name of the Kubernetes namespace where the site manager is located"
                                },
                                "smServiceAccountName": {
                                    "type": "string",
                                    "default": "sm-auth-sa",
                                    "$id": "#/properties/global/properties/disasterRecovery/properties/httpAuth/properties/smServiceAccountName",
                                    "title": "The global.disasterRecovery.httpAuth.smServiceAccountName schema",
                                    "description": "The name of the Kubernetes service account where the site manager is used"
                                }
                            },
                            "$id": "#/properties/global/properties/disasterRecovery/properties/httpAuth",
                            "title": "The global.disasterRecovery.httpAuth schema",
                            "description": "global.disasterRecovery.httpAuth parameters"
                        },
                        "image": {
                            "type": "string",
                            "default": "artifactorycn.netcracker.com:17008/product/prod.platform.streaming_disaster-recovery-daemon:master_latest",
                            "$id": "#/properties/global/properties/disasterRecovery/properties/image",
                            "title": "The global.disasterRecovery.image schema",
                            "description": "The image of the OpenSearch Disaster Recovery container"
                        },
                        "indicesPattern": {
                            "type": "string",
                            "default": "*",
                            "$id": "#/properties/global/properties/disasterRecovery/properties/indicesPattern",
                            "title": "The global.disasterRecovery.indicesPattern schema",
                            "description": "The regular expression used to find OpenSearch indices for cross cluster replication"
                        },
                        "mode": {
                            "type": "string",
                            "default": "",
                            "$id": "#/properties/global/properties/disasterRecovery/properties/mode",
                            "title": "The global.disasterRecovery.mode schema",
                            "description": "The mode of OpenSearch Disaster Recovery installation"
                        },
                        "remoteCluster": {
                            "type": "string",
                            "default": "",
                            "$id": "#/properties/global/properties/disasterRecovery/properties/remoteCluster",
                            "title": "The global.disasterRecovery.remoteCluster schema",
                            "description": "The URL of the `active` OpenSearch service"
                        },
                        "replicationWatcherEnabled": {
                            "type": "boolean",
                            "default": false,
                            "$id": "#/properties/global/properties/disasterRecovery/properties/replicationWatcherEnabled",
                            "title": "The global.disasterRecovery.replicationWatcherEnabled schema",
                            "description": "Whether the Replication Watcher feature is to be enabled"
                        },
                        "replicationWatcherIntervalSeconds": {
                            "type": "integer",
                            "default": 30,
                            "$id": "#/properties/global/properties/disasterRecovery/properties/replicationWatcherIntervalSeconds",
                            "title": "The global.disasterRecovery.replicationWatcherIntervalSeconds schema",
                            "description": "The interval in seconds to check the replication status by Replication Watcher"
                        },
                        "resources": {
                            "type": "object",
                            "properties": {
                                "limits": {
                                    "type": "object",
                                    "properties": {
                                        "cpu": {
                                            "default": "100m",
                                            "$id": "#/properties/global/properties/disasterRecovery/properties/resources/properties/limits/properties/cpu",
                                            "title": "The global.disasterRecovery.resources.limits.cpu schema",
                                            "description": "The maximum number of CPUs the disaster recovery daemon container should use",
                                            "internal": true,
                                            "envSpecific": true,
                                            "comment": "don't use type field, because it breaks backward compatibility"
                                        },
                                        "memory": {
                                            "type": "string",
                                            "default": "128Mi",
                                            "$id": "#/properties/global/properties/disasterRecovery/properties/resources/properties/limits/properties/memory",
                                            "title": "The global.disasterRecovery.resources.limits.memory schema",
                                            "description": "The maximum amount of memory the disaster recovery daemon container should use",
                                            "internal": true,
                                            "envSpecific": true
                                        }
                                    },
                                    "$id": "#/properties/global/properties/disasterRecovery/properties/resources/properties/limits",
                                    "title": "The global.disasterRecovery.resources.limits schema",
                                    "description": "global.disasterRecovery.resources.limits parameters"
                                },
                                "requests": {
                                    "type": "object",
                                    "properties": {
                                        "cpu": {
                                            "default": "25m",
                                            "$id": "#/properties/global/properties/disasterRecovery/properties/resources/properties/requests/properties/cpu",
                                            "title": "The global.disasterRecovery.resources.requests.cpu schema",
                                            "description": "The minimum number of CPUs the disaster recovery daemon container should use",
                                            "internal": true,
                                            "envSpecific": true,
                                            "comment": "don't use type field, because it breaks backward compatibility"
                                        },
                                        "memory": {
                                            "type": "string",
                                            "default": "32Mi",
                                            "$id": "#/properties/global/properties/disasterRecovery/properties/resources/properties/requests/properties/memory",
                                            "title": "The global.disasterRecovery.resources.requests.memory schema",
                                            "description": "The minimum amount of memory the disaster recovery daemon container should use",
                                            "internal": true,
                                            "envSpecific": true
                                        }
                                    },
                                    "$id": "#/properties/global/properties/disasterRecovery/properties/resources/properties/requests",
                                    "title": "The global.disasterRecovery.resources.requests schema",
                                    "description": "global.disasterRecovery.resources.requests parameters"
                                }
                            },
                            "$id": "#/properties/global/properties/disasterRecovery/properties/resources",
                            "title": "The global.disasterRecovery.resources schema",
                            "description": "global.disasterRecovery.resources parameters"
                        },
                        "serviceExport": {
                            "type": "object",
                            "properties": {
                                "enabled": {
                                    "type": "boolean",
                                    "default": false,
                                    "$id": "#/properties/global/properties/disasterRecovery/properties/serviceExport/properties/enabled",
                                    "title": "The global.disasterRecovery.serviceExport.enabled schema",
                                    "description": "Whether the `net"
                                },
                                "region": {
                                    "type": "string",
                                    "default": "",
                                    "$id": "#/properties/global/properties/disasterRecovery/properties/serviceExport/properties/region",
                                    "title": "The global.disasterRecovery.serviceExport.region schema",
                                    "description": "The region of the cloud where the current instance of OpenSearch service is installed"
                                }
                            },
                            "$id": "#/properties/global/properties/disasterRecovery/properties/serviceExport",
                            "title": "The global.disasterRecovery.serviceExport schema",
                            "description": "global.disasterRecovery.serviceExport parameters"
                        },
                        "siteManagerEnabled": {
                            "type": "boolean",
                            "default": true,
                            "$id": "#/properties/global/properties/disasterRecovery/properties/siteManagerEnabled",
                            "title": "The global.disasterRecovery.siteManagerEnabled schema",
                            "description": "Whether creation of a Kubernetes Custom Resource for `SiteManager` is to be enabled"
                        },
                        "timeout": {
                            "type": "integer",
                            "default": 600,
                            "$id": "#/properties/global/properties/disasterRecovery/properties/timeout",
                            "title": "The global.disasterRecovery.timeout schema",
                            "description": "The timeout for a switchover"
                        },
                        "tls": {
                            "type": "object",
                            "properties": {
                                "certificates": {
                                    "type": "object",
                                    "properties": {
                                        "crt": {
                                            "type": "string",
                                            "default": "",
                                            "$id": "#/properties/global/properties/disasterRecovery/properties/tls/properties/certificates/properties/crt",
                                            "title": "The global.disasterRecovery.tls.certificates.crt schema",
                                            "description": "The certificate in BASE64 format"
                                        }
                                    },
                                    "$id": "#/properties/global/properties/disasterRecovery/properties/tls/properties/certificates",
                                    "title": "The global.disasterRecovery.tls.certificates schema",
                                    "description": "global.disasterRecovery.tls.certificates parameters"
                                },
                                "cipherSuites": {
                                    "type": "array",
                                    "default": [],
                                    "$id": "#/properties/global/properties/disasterRecovery/properties/tls/properties/cipherSuites",
                                    "title": "The global.disasterRecovery.tls.cipherSuites schema",
                                    "description": "The list of cipher suites that are used to negotiate the security settings for a network connection using a TLS or SSL network protocol"
                                },
                                "enabled": {
                                    "type": "boolean",
                                    "default": true,
                                    "$id": "#/properties/global/properties/disasterRecovery/properties/tls/properties/enabled",
                                    "title": "The global.disasterRecovery.tls.enabled schema",
                                    "description": "Whether TLS is to be enabled for Disaster Recovery Daemon"
                                },
                                "secretName": {
                                    "type": "string",
                                    "default": "",
                                    "$id": "#/properties/global/properties/disasterRecovery/properties/tls/properties/secretName",
                                    "title": "The global.disasterRecovery.tls.secretName schema",
                                    "description": "The secret that contains TLS certificates"
                                },
                                "subjectAlternativeName": {
                                    "type": "object",
                                    "properties": {
                                        "additionalDnsNames": {
                                            "type": "array",
                                            "default": [],
                                            "$id": "#/properties/global/properties/disasterRecovery/properties/tls/properties/subjectAlternativeName/properties/additionalDnsNames",
                                            "title": "The global.disasterRecovery.tls.subjectAlternativeName.additionalDnsNames schema",
                                            "description": "The list of additional DNS names to be added to the `Subject Alternative Name` field of a TLS certificate"
                                        },
                                        "additionalIpAddresses": {
                                            "type": "array",
                                            "default": [],
                                            "$id": "#/properties/global/properties/disasterRecovery/properties/tls/properties/subjectAlternativeName/properties/additionalIpAddresses",
                                            "title": "The global.disasterRecovery.tls.subjectAlternativeName.additionalIpAddresses schema",
                                            "description": "The list of additional IP addresses to be added to the `Subject Alternative Name` field of a TLS certificate"
                                        }
                                    },
                                    "$id": "#/properties/global/properties/disasterRecovery/properties/tls/properties/subjectAlternativeName",
                                    "title": "The global.disasterRecovery.tls.subjectAlternativeName schema",
                                    "description": "global.disasterRecovery.tls.subjectAlternativeName parameters"
                                }
                            },
                            "$id": "#/properties/global/properties/disasterRecovery/properties/tls",
                            "title": "The global.disasterRecovery.tls schema",
                            "description": "global.disasterRecovery.tls parameters"
                        },
                        "certificates": {
                            "$id": "#/properties/global/properties/disasterRecovery/properties/certificates",
                            "type": "object",
                            "title": "The global.disasterRecovery.certificates schema",
                            "description": "global.disasterRecovery.certificates parameters",
                            "properties": {
                                "key": {
                                    "$id": "#/properties/global/properties/disasterRecovery/properties/certificates/properties/key",
                                    "type": "string",
                                    "title": "The global.disasterRecovery.certificates.key schema",
                                    "description": "The private key in BASE64 format"
                                },
                                "ca": {
                                    "$id": "#/properties/global/properties/disasterRecovery/properties/certificates/properties/ca",
                                    "type": "string",
                                    "title": "The global.disasterRecovery.certificates.ca schema",
                                    "description": "The root CA certificate in BASE64 format"
                                }
                            }
                        }
                    },
                    "$id": "#/properties/global/properties/disasterRecovery",
                    "title": "The global.disasterRecovery schema",
                    "description": "global.disasterRecovery parameters"
                },
                "externalOpensearch": {
                    "type": "object",
                    "properties": {
                        "dataNodesCount": {
                            "type": "integer",
                            "default": 3,
                            "$id": "#/properties/global/properties/externalOpensearch/properties/dataNodesCount",
                            "title": "The global.externalOpensearch.dataNodesCount schema",
                            "description": "The number of external OpenSearch data nodes"
                        },
                        "enabled": {
                            "type": "boolean",
                            "default": false,
                            "$id": "#/properties/global/properties/externalOpensearch/properties/enabled",
                            "title": "The global.externalOpensearch.enabled schema",
                            "description": "Whether external OpenSearch is to be used"
                        },
                        "nodesCount": {
                            "type": "integer",
                            "default": 3,
                            "$id": "#/properties/global/properties/externalOpensearch/properties/nodesCount",
                            "title": "The global.externalOpensearch.nodesCount schema",
                            "description": "The total number of external OpenSearch nodes (data and master)"
                        },
                        "password": {
                            "type": "string",
                            "default": "",
                            "$id": "#/properties/global/properties/externalOpensearch/properties/password",
                            "title": "The global.externalOpensearch.password schema",
                            "description": "The password of the external OpenSearch user to connect"
                        },
                        "tlsSecretName": {
                            "type": "string",
                            "default": "",
                            "$id": "#/properties/global/properties/externalOpensearch/properties/tlsSecretName",
                            "title": "The global.externalOpensearch.tlsSecretName schema",
                            "description": "The secret which contains REST TLS certificates"
                        },
                        "url": {
                            "type": "string",
                            "default": "",
                            "$id": "#/properties/global/properties/externalOpensearch/properties/url",
                            "title": "The global.externalOpensearch.url schema",
                            "description": "The URL (with protocol) of external OpenSearch"
                        },
                        "username": {
                            "type": "string",
                            "default": "",
                            "$id": "#/properties/global/properties/externalOpensearch/properties/username",
                            "title": "The global.externalOpensearch.username schema",
                            "description": "The username of the external OpenSearch user to connect"
                        }
                    },
                    "$id": "#/properties/global/properties/externalOpensearch",
                    "title": "The global.externalOpensearch schema",
                    "description": "global.externalOpensearch parameters"
                },
                "psp": {
                    "type": "object",
                    "properties": {
                        "create": {
                            "type": "boolean",
                            "default": false,
                            "$id": "#/properties/global/properties/psp/properties/create",
                            "title": "The global.psp.create schema",
                            "description": "Whether `PodSecurityPolicy` is to be created and used"
                        }
                    },
                    "$id": "#/properties/global/properties/psp",
                    "title": "The global.psp schema",
                    "description": "global.psp parameters"
                },
                "securityContext": {
                    "type": "object",
                    "default": {},
                    "$id": "#/properties/global/properties/securityContext",
                    "title": "The global.securityContext schema",
                    "description": "The pod-level security attributes and common container settings for all pods that are related to the OpenSearch Service"
                },
                "tls": {
                    "type": "object",
                    "properties": {
                        "cipherSuites": {
                            "type": "array",
                            "default": [],
                            "$id": "#/properties/global/properties/tls/properties/cipherSuites",
                            "title": "The global.tls.cipherSuites schema",
                            "description": "The list of cipher suites that are used to negotiate the security settings for a network connection using a TLS or SSL network protocol"
                        },
                        "enabled": {
                            "type": "boolean",
                            "default": false,
                            "$id": "#/properties/global/properties/tls/properties/enabled",
                            "title": "The global.tls.enabled schema",
                            "description": "Whether TLS is to be enabled for all OpenSearch services"
                        },
                        "generateCerts": {
                            "type": "object",
                            "properties": {
                                "certProvider": {
                                    "type": "string",
                                    "default": "cert-manager",
                                    "$id": "#/properties/global/properties/tls/properties/generateCerts/properties/certProvider",
                                    "title": "The global.tls.generateCerts.certProvider schema",
                                    "description": "The provider used for TLS certificates' generation"
                                },
                                "clusterIssuerName": {
                                    "type": "string",
                                    "default": "",
                                    "$id": "#/properties/global/properties/tls/properties/generateCerts/properties/clusterIssuerName",
                                    "title": "The global.tls.generateCerts.clusterIssuerName schema",
                                    "description": "The name of the `ClusterIssuer` resource"
                                },
                                "durationDays": {
                                    "type": "integer",
                                    "default": 365,
                                    "$id": "#/properties/global/properties/tls/properties/generateCerts/properties/durationDays",
                                    "title": "The global.tls.generateCerts.durationDays schema",
                                    "description": "The TLS certificates' validity period in days"
                                },
                                "enabled": {
                                    "type": "boolean",
                                    "default": true,
                                    "$id": "#/properties/global/properties/tls/properties/generateCerts/properties/enabled",
                                    "title": "The global.tls.generateCerts.enabled schema",
                                    "description": "Whether TLS certificates are to be generated"
                                }
                            },
                            "$id": "#/properties/global/properties/tls/properties/generateCerts",
                            "title": "The global.tls.generateCerts schema",
                            "description": "global.tls.generateCerts parameters"
                        },
                        "renewCerts": {
                            "type": "boolean",
                            "default": true,
                            "$id": "#/properties/global/properties/tls/properties/renewCerts",
                            "title": "The global.tls.renewCerts schema",
                            "description": "Whether to renew development certificates if they expire in less than 10 years"
                        }
                    },
                    "$id": "#/properties/global/properties/tls",
                    "title": "The global.tls schema",
                    "description": "global.tls parameters"
                },
                "velero": {
                    "type": "object",
                    "properties": {
                        "preHookBackupEnabled": {
                            "type": "boolean",
                            "default": true,
                            "$id": "#/properties/global/properties/velero/properties/preHookBackupEnabled",
                            "title": "The global.velero.preHookBackupEnabled schema",
                            "description": "Whether Velero backup pre-hook with the OpenSearch flush command is to be enabled"
                        }
                    },
                    "$id": "#/properties/global/properties/velero",
                    "title": "The global.velero schema",
                    "description": "global.velero parameters"
                }
            },
            "$id": "#/properties/global",
            "title": "The global schema",
            "description": "global parameters"
        },
        "integrationTests": {
            "type": "object",
            "properties": {
                "affinity": {
                    "type": "object",
                    "default": {},
                    "$id": "#/properties/integrationTests/properties/affinity",
                    "title": "The integrationTests.affinity schema",
                    "description": "The affinity scheduling rules in `JSON` format"
                },
                "customLabels": {
                    "type": "object",
                    "default": {},
                    "$id": "#/properties/integrationTests/properties/customLabels",
                    "title": "The integrationTests.customLabels schema",
                    "description": "The custom labels for the OpenSearch integration tests pod"
                },
                "dockerImage": {
                    "type": "string",
                    "default": "artifactorycn.netcracker.com:17008/product/prod.platform.elasticstack_opensearch-service:master_latest_integration-tests",
                    "$id": "#/properties/integrationTests/properties/dockerImage",
                    "title": "The integrationTests.dockerImage schema",
                    "description": "The docker image of OpenSearch integration tests"
                },
                "enabled": {
                    "type": "boolean",
                    "default": false,
                    "$id": "#/properties/integrationTests/properties/enabled",
                    "title": "The integrationTests.enabled schema",
                    "description": "Whether the installation of OpenSearch integration tests is to be enabled"
                },
                "identityProviderUrl": {
                    "type": "string",
                    "default": "",
                    "$id": "#/properties/integrationTests/properties/identityProviderUrl",
                    "title": "The integrationTests.identityProviderUrl schema",
                    "description": "The URL of Identity Provider"
                },
                "isShortStatusMessage": {
                    "type": "boolean",
                    "default": true,
                    "$id": "#/properties/integrationTests/properties/isShortStatusMessage",
                    "title": "The integrationTests.isShortStatusMessage schema",
                    "description": "Whether the status message is to contain only first line of `result"
                },
                "opensearchDbaasAdapterPort": {
                    "type": "integer",
                    "default": 8080,
                    "$id": "#/properties/integrationTests/properties/opensearchDbaasAdapterPort",
                    "title": "The integrationTests.opensearchDbaasAdapterPort schema",
                    "description": "The port of the DBaaS OpenSearch adapter"
                },
                "opensearchPort": {
                    "type": "integer",
                    "default": 9200,
                    "$id": "#/properties/integrationTests/properties/opensearchPort",
                    "title": "The integrationTests.opensearchPort schema",
                    "description": "The port of the OpenSearch"
                },
                "priorityClassName": {
                    "type": "string",
                    "default": "",
                    "$id": "#/properties/integrationTests/properties/priorityClassName",
                    "title": "The integrationTests.priorityClassName schema",
                    "description": "The priority class to be used by the OpenSearch integration tests pods"
                },
                "prometheusUrl": {
                    "type": "string",
                    "default": "",
                    "$id": "#/properties/integrationTests/properties/prometheusUrl",
                    "title": "The integrationTests.prometheusUrl schema",
                    "description": "The URL (with schema and port) to Prometheus"
                },
                "resources": {
                    "type": "object",
                    "properties": {
                        "limits": {
                            "type": "object",
                            "properties": {
                                "cpu": {
                                    "default": "400m",
                                    "$id": "#/properties/integrationTests/properties/resources/properties/limits/properties/cpu",
                                    "title": "The integrationTests.resources.limits.cpu schema",
                                    "description": "The maximum number of CPUs the container should use",
                                    "internal": true,
                                    "envSpecific": true,
                                    "comment": "don't use type field, because it breaks backward compatibility"
                                },
                                "memory": {
                                    "type": "string",
                                    "default": "256Mi",
                                    "$id": "#/properties/integrationTests/properties/resources/properties/limits/properties/memory",
                                    "title": "The integrationTests.resources.limits.memory schema",
                                    "description": "The maximum amount of memory the container should use",
                                    "internal": true,
                                    "envSpecific": true
                                }
                            },
                            "$id": "#/properties/integrationTests/properties/resources/properties/limits",
                            "title": "The integrationTests.resources.limits schema",
                            "description": "integrationTests.resources.limits parameters"
                        },
                        "requests": {
                            "type": "object",
                            "properties": {
                                "cpu": {
                                    "default": "200m",
                                    "$id": "#/properties/integrationTests/properties/resources/properties/requests/properties/cpu",
                                    "title": "The integrationTests.resources.requests.cpu schema",
                                    "description": "The minimum number of CPUs the container should use",
                                    "internal": true,
                                    "envSpecific": true,
                                    "comment": "don't use type field, because it breaks backward compatibility"
                                },
                                "memory": {
                                    "type": "string",
                                    "default": "256Mi",
                                    "$id": "#/properties/integrationTests/properties/resources/properties/requests/properties/memory",
                                    "title": "The integrationTests.resources.requests.memory schema",
                                    "description": "The minimum amount of memory the container should use",
                                    "internal": true,
                                    "envSpecific": true
                                }
                            },
                            "$id": "#/properties/integrationTests/properties/resources/properties/requests",
                            "title": "The integrationTests.resources.requests schema",
                            "description": "integrationTests.resources.requests parameters"
                        }
                    },
                    "$id": "#/properties/integrationTests/properties/resources",
                    "title": "The integrationTests.resources schema",
                    "description": "integrationTests.resources parameters"
                },
                "secrets": {
                    "type": "object",
                    "properties": {
                        "idp": {
                            "type": "object",
                            "properties": {
                                "password": {
                                    "type": "string",
                                    "default": "",
                                    "$id": "#/properties/integrationTests/properties/secrets/properties/idp/properties/password",
                                    "title": "The integrationTests.secrets.idp.password schema",
                                    "description": "The password of the user for Identity Provider"
                                },
                                "registrationToken": {
                                    "type": "string",
                                    "default": "",
                                    "$id": "#/properties/integrationTests/properties/secrets/properties/idp/properties/registrationToken",
                                    "title": "The integrationTests.secrets.idp.registrationToken schema",
                                    "description": "The registration token for Identity Provider"
                                },
                                "username": {
                                    "type": "string",
                                    "default": "",
                                    "$id": "#/properties/integrationTests/properties/secrets/properties/idp/properties/username",
                                    "title": "The integrationTests.secrets.idp.username schema",
                                    "description": "The name of the user for Identity Provider"
                                }
                            },
                            "$id": "#/properties/integrationTests/properties/secrets/properties/idp",
                            "title": "The integrationTests.secrets.idp schema",
                            "description": "integrationTests.secrets.idp parameters"
                        },
                        "prometheus": {
                            "type": "object",
                            "properties": {
                                "password": {
                                    "type": "string",
                                    "default": "",
                                    "$id": "#/properties/integrationTests/properties/secrets/properties/prometheus/properties/password",
                                    "title": "The integrationTests.secrets.prometheus.password schema",
                                    "description": "The password for authentication on Prometheus/VictoriaMetrics secured endpoints"
                                },
                                "user": {
                                    "type": "string",
                                    "default": "",
                                    "$id": "#/properties/integrationTests/properties/secrets/properties/prometheus/properties/user",
                                    "title": "The integrationTests.secrets.prometheus.user schema",
                                    "description": "The username for authentication on Prometheus/VictoriaMetrics secured endpoints"
                                }
                            },
                            "$id": "#/properties/integrationTests/properties/secrets/properties/prometheus",
                            "title": "The integrationTests.secrets.prometheus schema",
                            "description": "integrationTests.secrets.prometheus parameters"
                        }
                    },
                    "$id": "#/properties/integrationTests/properties/secrets",
                    "title": "The integrationTests.secrets schema",
                    "description": "integrationTests.secrets parameters"
                },
                "securityContext": {
                    "type": "object",
                    "default": {},
                    "$id": "#/properties/integrationTests/properties/securityContext",
                    "title": "The integrationTests.securityContext schema",
                    "description": "The pod-level security attributes and common container settings for the OpenSearch integration tests pod"
                },
                "statusWritingEnabled": {
                    "type": "boolean",
                    "default": true,
                    "$id": "#/properties/integrationTests/properties/statusWritingEnabled",
                    "title": "The integrationTests.statusWritingEnabled schema",
                    "description": "Whether the status of OpenSearch integration tests execution is to be written to deployment"
                },
                "tags": {
                    "type": "string",
                    "default": "smoke",
                    "$id": "#/properties/integrationTests/properties/tags",
                    "title": "The integrationTests.tags schema",
                    "description": "The tags combined with `AND`, `OR` and `NOT` operators that select test cases to run"
                }
            },
            "$id": "#/properties/integrationTests",
            "title": "The integrationTests schema",
            "description": "integrationTests parameters"
        },
        "monitoring": {
            "type": "object",
            "properties": {
                "affinity": {
                    "type": "object",
                    "default": {},
                    "$id": "#/properties/monitoring/properties/affinity",
                    "title": "The monitoring.affinity schema",
                    "description": "The affinity scheduling rules in `JSON` format"
                },
                "customLabels": {
                    "type": "object",
                    "default": {},
                    "$id": "#/properties/monitoring/properties/customLabels",
                    "title": "The monitoring.customLabels schema",
                    "description": "The custom labels for the OpenSearch monitoring pod"
                },
                "dockerImage": {
                    "type": "string",
                    "default": "artifactorycn.netcracker.com:17008/product/prod.platform.elasticstack_elasticsearch-telegraf:master_latest",
                    "$id": "#/properties/monitoring/properties/dockerImage",
                    "title": "The monitoring.dockerImage schema",
                    "description": "The docker image of OpenSearch monitoring"
                },
                "enabled": {
                    "type": "boolean",
                    "default": true,
                    "$id": "#/properties/monitoring/properties/enabled",
                    "title": "The monitoring.enabled schema",
                    "description": "Whether the installation of OpenSearch monitoring is to be enabled"
                },
                "imagePullPolicy": {
                    "type": "string",
                    "default": "",
                    "$id": "#/properties/monitoring/properties/imagePullPolicy",
                    "title": "The monitoring.imagePullPolicy schema",
                    "description": "The image pull policy for OpenSearch monitoring container"
                },
                "includeIndices": {
                    "type": "boolean",
                    "default": false,
                    "$id": "#/properties/monitoring/properties/includeIndices",
                    "title": "The monitoring.includeIndices schema",
                    "description": "Whether the collection of indices metrics is to be included in the Telegraf plugin"
                },
                "installDashboard": {
                    "type": "boolean",
                    "default": true,
                    "$id": "#/properties/monitoring/properties/installDashboard",
                    "title": "The monitoring.installDashboard schema",
                    "description": "Whether the installation of OpenSearch Grafana dashboard is to be enabled"
                },
                "monitoringCoreosGroup": {
                    "type": "boolean",
                    "default": false,
                    "$id": "#/properties/monitoring/properties/monitoringCoreosGroup",
                    "title": "The monitoring.monitoringCoreosGroup schema",
                    "description": "Whether the `monitoringCoreosGroup` verbs are to be added to the OpenSearch service operator role"
                },
                "monitoringType": {
                    "type": "string",
                    "default": "prometheus",
                    "$id": "#/properties/monitoring/properties/monitoringType",
                    "title": "The monitoring.monitoringType schema",
                    "description": "The type of output plugin that is used for OpenSearch monitoring"
                },
                "nodeSelector": {
                    "type": "object",
                    "default": {},
                    "$id": "#/properties/monitoring/properties/nodeSelector",
                    "title": "The monitoring.nodeSelector schema",
                    "description": "The selector that defines the nodes where the OpenSearch monitoring pods are to be scheduled on"
                },
                "opensearchDbaasAdapterHost": {
                    "type": "string",
                    "default": "",
                    "$id": "#/properties/monitoring/properties/opensearchDbaasAdapterHost",
                    "title": "The monitoring.opensearchDbaasAdapterHost schema",
                    "description": "The host of monitored OpenSearch DBaaS adapter"
                },
                "opensearchDbaasAdapterPort": {
                    "type": "integer",
                    "default": 8080,
                    "$id": "#/properties/monitoring/properties/opensearchDbaasAdapterPort",
                    "title": "The monitoring.opensearchDbaasAdapterPort schema",
                    "description": "The port of monitored OpenSearch DBaaS adapter"
                },
                "opensearchExecPluginTimeout": {
                    "type": "string",
                    "default": "15s",
                    "$id": "#/properties/monitoring/properties/opensearchExecPluginTimeout",
                    "title": "The monitoring.opensearchExecPluginTimeout schema",
                    "description": "The timeout for OpenSearch exec Telegraf plugin"
                },
                "opensearchHost": {
                    "type": "string",
                    "default": "",
                    "$id": "#/properties/monitoring/properties/opensearchHost",
                    "title": "The monitoring.opensearchHost schema",
                    "description": "The host address of OpenSearch"
                },
                "opensearchPort": {
                    "type": "integer",
                    "default": 9200,
                    "$id": "#/properties/monitoring/properties/opensearchPort",
                    "title": "The monitoring.opensearchPort schema",
                    "description": "The port of OpenSearch"
                },
                "priorityClassName": {
                    "type": "string",
                    "default": "",
                    "$id": "#/properties/monitoring/properties/priorityClassName",
                    "title": "The monitoring.priorityClassName schema",
                    "description": "The priority class to be used by the OpenSearch monitoring pods"
                },
                "resources": {
                    "type": "object",
                    "properties": {
                        "limits": {
                            "type": "object",
                            "properties": {
                                "cpu": {
                                    "default": "200m",
                                    "$id": "#/properties/monitoring/properties/resources/properties/limits/properties/cpu",
                                    "title": "The monitoring.resources.limits.cpu schema",
                                    "description": "The maximum number of CPUs the monitoring container should use",
                                    "internal": true,
                                    "envSpecific": true,
                                    "comment": "don't use type field, because it breaks backward compatibility"
                                },
                                "memory": {
                                    "type": "string",
                                    "default": "256Mi",
                                    "$id": "#/properties/monitoring/properties/resources/properties/limits/properties/memory",
                                    "title": "The monitoring.resources.limits.memory schema",
                                    "description": "The maximum amount of memory the monitoring container should use",
                                    "internal": true,
                                    "envSpecific": true
                                }
                            },
                            "$id": "#/properties/monitoring/properties/resources/properties/limits",
                            "title": "The monitoring.resources.limits schema",
                            "description": "monitoring.resources.limits parameters"
                        },
                        "requests": {
                            "type": "object",
                            "properties": {
                                "cpu": {
                                    "default": "200m",
                                    "$id": "#/properties/monitoring/properties/resources/properties/requests/properties/cpu",
                                    "title": "The monitoring.resources.requests.cpu schema",
                                    "description": "The minimum number of CPUs the monitoring container should use",
                                    "internal": true,
                                    "envSpecific": true,
                                    "comment": "don't use type field, because it breaks backward compatibility"
                                },
                                "memory": {
                                    "type": "string",
                                    "default": "256Mi",
                                    "$id": "#/properties/monitoring/properties/resources/properties/requests/properties/memory",
                                    "title": "The monitoring.resources.requests.memory schema",
                                    "description": "The minimum amount of memory the monitoring container should use",
                                    "internal": true,
                                    "envSpecific": true
                                }
                            },
                            "$id": "#/properties/monitoring/properties/resources/properties/requests",
                            "title": "The monitoring.resources.requests schema",
                            "description": "monitoring.resources.requests parameters"
                        }
                    },
                    "$id": "#/properties/monitoring/properties/resources",
                    "title": "The monitoring.resources schema",
                    "description": "monitoring.resources parameters"
                },
                "securityContext": {
                    "type": "object",
                    "default": {},
                    "$id": "#/properties/monitoring/properties/securityContext",
                    "title": "The monitoring.securityContext schema",
                    "description": "The pod-level security attributes and common container settings for the OpenSearch monitoring pods"
                },
                "slowQueries": {
                    "type": "object",
                    "properties": {
                        "enabled": {
                            "type": "boolean",
                            "default": false,
                            "$id": "#/properties/monitoring/properties/slowQueries/properties/enabled",
                            "title": "The monitoring.slowQueries.enabled schema",
                            "description": "Whether the slow queries metric is to be enabled"
                        },
                        "indicesPattern": {
                            "type": "string",
                            "default": "*",
                            "$id": "#/properties/monitoring/properties/slowQueries/properties/indicesPattern",
                            "title": "The monitoring.slowQueries.indicesPattern schema",
                            "description": "The pattern with wildcards used to define OpenSearch indices to track slow queries"
                        },
                        "minSeconds": {
                            "type": "integer",
                            "default": 5,
                            "$id": "#/properties/monitoring/properties/slowQueries/properties/minSeconds",
                            "title": "The monitoring.slowQueries.minSeconds schema",
                            "description": "The time in seconds from which a query is considered slow and is written to `slow-log` file by OpenSearch"
                        },
                        "processingIntervalMinutes": {
                            "type": "integer",
                            "default": 5,
                            "$id": "#/properties/monitoring/properties/slowQueries/properties/processingIntervalMinutes",
                            "title": "The monitoring.slowQueries.processingIntervalMinutes schema",
                            "description": "The duration in minutes of the interval that is used to process records from `slow-log` file"
                        },
                        "topNumber": {
                            "type": "integer",
                            "default": 10,
                            "$id": "#/properties/monitoring/properties/slowQueries/properties/topNumber",
                            "title": "The monitoring.slowQueries.topNumber schema",
                            "description": "The number of slow queries that should be calculated"
                        }
                    },
                    "$id": "#/properties/monitoring/properties/slowQueries",
                    "title": "The monitoring.slowQueries schema",
                    "description": "monitoring.slowQueries parameters"
                },
                "smDbHost": {
                    "type": "string",
                    "default": "",
                    "$id": "#/properties/monitoring/properties/smDbHost",
                    "title": "The monitoring.smDbHost schema",
                    "description": "The host of the System Monitoring database"
                },
                "smDbName": {
                    "type": "string",
                    "default": "",
                    "$id": "#/properties/monitoring/properties/smDbName",
                    "title": "The monitoring.smDbName schema",
                    "description": "The name of the database in System Monitoring"
                },
                "smDbPassword": {
                    "type": "string",
                    "default": "",
                    "$id": "#/properties/monitoring/properties/smDbPassword",
                    "title": "The monitoring.smDbPassword schema",
                    "description": "The password of the database user in System Monitoring"
                },
                "smDbUsername": {
                    "type": "string",
                    "default": "",
                    "$id": "#/properties/monitoring/properties/smDbUsername",
                    "title": "The monitoring.smDbUsername schema",
                    "description": "The name of the database user in System Monitoring"
                },
                "thresholds": {
                    "type": "object",
                    "properties": {
                        "lagAlert": {
                            "type": "integer",
                            "default": -1,
                            "$id": "#/properties/monitoring/properties/thresholds/properties/lagAlert",
                            "title": "The monitoring.thresholds.lagAlert schema",
                            "description": "The maximum value of replication lag before a replication alert occurs"
                        },
                        "slowQuerySecondsAlert": {
                            "type": "integer",
                            "default": 10,
                            "$id": "#/properties/monitoring/properties/thresholds/properties/slowQuerySecondsAlert",
                            "title": "The monitoring.thresholds.slowQuerySecondsAlert schema",
                            "description": "The threshold in seconds that is used for slow query (`OpenSearchQueryIsTooSlowAlert`) alert"
                        }
                    },
                    "$id": "#/properties/monitoring/properties/thresholds",
                    "title": "The monitoring.thresholds schema",
                    "description": "monitoring.thresholds parameters"
                },
                "tolerations": {
                    "type": "array",
                    "default": [],
                    "$id": "#/properties/monitoring/properties/tolerations",
                    "title": "The monitoring.tolerations schema",
                    "description": "The list of toleration policies for OpenSearch monitoring pod in `JSON` format"
                }
            },
            "$id": "#/properties/monitoring",
            "title": "The monitoring schema",
            "description": "monitoring parameters"
        },
        "nameOverride": {
            "type": "string",
            "default": "opensearch",
            "$id": "#/properties/nameOverride",
            "title": "The nameOverride schema",
            "description": "The name for all OpenSearch resources (Services, StatefulSets, and so on) if the `fullnameOverride` parameter is not specified"
        },
        "opensearch": {
            "type": "object",
            "properties": {
                "arbiter": {
                    "type": "object",
                    "properties": {
                        "affinity": {
                            "type": "object",
                            "properties": {},
                            "default": {
                                "podAntiAffinity": {
                                    "requiredDuringSchedulingIgnoredDuringExecution": [
                                        {
                                            "topologyKey": "kubernetes.io/hostname",
                                            "labelSelector": {
                                                "matchLabels": {
                                                    "role": "master"
                                                }
                                            }
                                        }
                                    ]
                                }
                            },
                            "$id": "#/properties/opensearch/properties/arbiter/properties/affinity",
                            "title": "The opensearch.arbiter.affinity schema",
                            "description": "The affinity scheduling rules in `JSON` format"
                        },
                        "customLabels": {
                            "type": "object",
                            "default": {},
                            "$id": "#/properties/opensearch/properties/arbiter/properties/customLabels",
                            "title": "The opensearch.arbiter.customLabels schema",
                            "description": "The custom labels for the OpenSearch arbiter pods"
                        },
                        "enabled": {
                            "type": "boolean",
                            "default": false,
                            "$id": "#/properties/opensearch/properties/arbiter/properties/enabled",
                            "title": "The opensearch.arbiter.enabled schema",
                            "description": "Whether the OpenSearch arbiter nodes are to be enabled"
                        },
                        "extraContainers": {
                            "type": "array",
                            "default": [],
                            "$id": "#/properties/opensearch/properties/arbiter/properties/extraContainers",
                            "title": "The opensearch.arbiter.extraContainers schema",
                            "description": "The list of extra containers to add inside the OpenSearch arbiter pod"
                        },
                        "extraInitContainers": {
                            "type": "array",
                            "default": [],
                            "$id": "#/properties/opensearch/properties/arbiter/properties/extraInitContainers",
                            "title": "The opensearch.arbiter.extraInitContainers schema",
                            "description": "The list of extra init containers to add inside the OpenSearch arbiter pod"
                        },
                        "imagePullSecrets": {
                            "type": "array",
                            "default": [],
                            "$id": "#/properties/opensearch/properties/arbiter/properties/imagePullSecrets",
                            "title": "The opensearch.arbiter.imagePullSecrets schema",
                            "description": "The list of references to secrets in the same namespace to use for pulling any of the images used by OpenSearch arbiter containers"
                        },
                        "javaOpts": {
                            "type": "string",
                            "default": "-Xms1024m -Xmx1024m",
                            "$id": "#/properties/opensearch/properties/arbiter/properties/javaOpts",
                            "title": "The opensearch.arbiter.javaOpts schema",
                            "description": "The Java options that are used for OpenSearch arbiter nodes",
                            "internal": true,
                            "envSpecific": true
                        },
                        "livenessProbe": {
                            "type": "object",
                            "properties": {},
                            "default": {
                                "tcpSocket": {
                                    "port": "transport"
                                },
                                "initialDelaySeconds": 90,
                                "periodSeconds": 20,
                                "failureThreshold": 5
                            },
                            "$id": "#/properties/opensearch/properties/arbiter/properties/livenessProbe",
                            "title": "The opensearch.arbiter.livenessProbe schema",
                            "description": "The configuration of the [livenessProbe](https://kubernetes"
                        },
                        "nodeSelector": {
                            "type": "object",
                            "default": {},
                            "$id": "#/properties/opensearch/properties/arbiter/properties/nodeSelector",
                            "title": "The opensearch.arbiter.nodeSelector schema",
                            "description": "The selector that defines the nodes where the OpenSearch arbiter nodes are scheduled on"
                        },
                        "persistence": {
                            "type": "object",
                            "properties": {
                                "accessModes": {
                                    "type": "array",
                                    "items": {
                                        "type": "string"
                                    },
                                    "default": [
                                        "ReadWriteOnce"
                                    ],
                                    "$id": "#/properties/opensearch/properties/arbiter/properties/persistence/properties/accessModes",
                                    "title": "The opensearch.arbiter.persistence.accessModes schema",
                                    "description": "The list of access modes of persistent volumes for OpenSearch arbiter nodes"
                                },
                                "annotations": {
                                    "type": "object",
                                    "default": {},
                                    "$id": "#/properties/opensearch/properties/arbiter/properties/persistence/properties/annotations",
                                    "title": "The opensearch.arbiter.persistence.annotations schema",
                                    "description": "The annotations of persistent volumes for OpenSearch arbiter nodes"
                                },
                                "enabled": {
                                    "type": "boolean",
                                    "default": true,
                                    "$id": "#/properties/opensearch/properties/arbiter/properties/persistence/properties/enabled",
                                    "title": "The opensearch.arbiter.persistence.enabled schema",
                                    "description": "Whether persistent storage is to be enabled on OpenSearch arbiter nodes"
                                },
                                "existingClaim": {
                                    "type": "string",
                                    "default": "",
                                    "$id": "#/properties/opensearch/properties/arbiter/properties/persistence/properties/existingClaim",
                                    "title": "The opensearch.arbiter.persistence.existingClaim schema",
                                    "description": "The name of the existing persistent volume claim for OpenSearch arbiter nodes"
                                },
                                "nodes": {
                                    "type": "array",
                                    "default": [],
                                    "$id": "#/properties/opensearch/properties/arbiter/properties/persistence/properties/nodes",
                                    "title": "The opensearch.arbiter.persistence.nodes schema",
                                    "description": "The list of Kubernetes node names to assign OpenSearch arbiter nodes"
                                },
                                "persistentVolumes": {
                                    "type": "array",
                                    "default": [],
                                    "$id": "#/properties/opensearch/properties/arbiter/properties/persistence/properties/persistentVolumes",
                                    "title": "The opensearch.arbiter.persistence.persistentVolumes schema",
                                    "description": "The list of predefined persistent volumes for OpenSearch arbiter nodes"
                                },
                                "size": {
                                    "type": "string",
                                    "default": "5Gi",
                                    "$id": "#/properties/opensearch/properties/arbiter/properties/persistence/properties/size",
                                    "title": "The opensearch.arbiter.persistence.size schema",
                                    "description": "The size of persistent volumes for OpenSearch arbiter nodes"
                                },
                                "storageClass": {
                                    "type": "string",
                                    "default": "-",
                                    "$id": "#/properties/opensearch/properties/arbiter/properties/persistence/properties/storageClass",
                                    "title": "The opensearch.arbiter.persistence.storageClass schema",
                                    "description": "The storage class name that is used for OpenSearch arbiter nodes"
                                },
                                "subPath": {
                                    "type": "string",
                                    "default": "",
                                    "$id": "#/properties/opensearch/properties/arbiter/properties/persistence/properties/subPath",
                                    "title": "The opensearch.arbiter.persistence.subPath schema",
                                    "description": "The subdirectory of the volume to mount to"
                                }
                            },
                            "$id": "#/properties/opensearch/properties/arbiter/properties/persistence",
                            "title": "The opensearch.arbiter.persistence schema",
                            "description": "opensearch.arbiter.persistence parameters"
                        },
                        "podAnnotations": {
                            "type": "object",
                            "default": {},
                            "$id": "#/properties/opensearch/properties/arbiter/properties/podAnnotations",
                            "title": "The opensearch.arbiter.podAnnotations schema",
                            "description": "The annotations for OpenSearch arbiter pod"
                        },
                        "priorityClassName": {
                            "type": "string",
                            "default": "",
                            "$id": "#/properties/opensearch/properties/arbiter/properties/priorityClassName",
                            "title": "The opensearch.arbiter.priorityClassName schema",
                            "description": "The priority class to be used by the OpenSearch arbiter nodes"
                        },
                        "readinessProbe": {
                            "type": "object",
                            "default": {},
                            "$id": "#/properties/opensearch/properties/arbiter/properties/readinessProbe",
                            "title": "The opensearch.arbiter.readinessProbe schema",
                            "description": "The configuration of the [readinessProbe](https://kubernetes"
                        },
                        "replicas": {
                            "type": "integer",
                            "default": 1,
                            "$id": "#/properties/opensearch/properties/arbiter/properties/replicas",
                            "title": "The opensearch.arbiter.replicas schema",
                            "description": "The number of OpenSearch arbiter nodes",
                            "internal": true,
                            "envSpecific": true
                        },
                        "resources": {
                            "type": "object",
                            "properties": {
                                "limits": {
                                    "type": "object",
                                    "properties": {
                                        "cpu": {
                                            "default": 1,
                                            "$id": "#/properties/opensearch/properties/arbiter/properties/resources/properties/limits/properties/cpu",
                                            "title": "The opensearch.arbiter.resources.limits.cpu schema",
                                            "description": "The maximum number of CPUs the OpenSearch arbiter node container should use",
                                            "internal": true,
                                            "envSpecific": true,
                                            "comment": "don't use type field, because it breaks backward compatibility"
                                        },
                                        "memory": {
                                            "type": "string",
                                            "default": "4Gi",
                                            "$id": "#/properties/opensearch/properties/arbiter/properties/resources/properties/limits/properties/memory",
                                            "title": "The opensearch.arbiter.resources.limits.memory schema",
                                            "description": "The maximum number of memory the OpenSearch arbiter node container should use",
                                            "internal": true,
                                            "envSpecific": true
                                        }
                                    },
                                    "$id": "#/properties/opensearch/properties/arbiter/properties/resources/properties/limits",
                                    "title": "The opensearch.arbiter.resources.limits schema",
                                    "description": "opensearch.arbiter.resources.limits parameters"
                                },
                                "requests": {
                                    "type": "object",
                                    "properties": {
                                        "cpu": {
                                            "default": "250m",
                                            "$id": "#/properties/opensearch/properties/arbiter/properties/resources/properties/requests/properties/cpu",
                                            "title": "The opensearch.arbiter.resources.requests.cpu schema",
                                            "description": "The minimum number of CPUs the OpenSearch arbiter node container should use",
                                            "internal": true,
                                            "envSpecific": true,
                                            "comment": "don't use type field, because it breaks backward compatibility"
                                        },
                                        "memory": {
                                            "type": "string",
                                            "default": "2Gi",
                                            "$id": "#/properties/opensearch/properties/arbiter/properties/resources/properties/requests/properties/memory",
                                            "title": "The opensearch.arbiter.resources.requests.memory schema",
                                            "description": "The minimum number of memory the OpenSearch arbiter node container should use",
                                            "internal": true,
                                            "envSpecific": true
                                        }
                                    },
                                    "$id": "#/properties/opensearch/properties/arbiter/properties/resources/properties/requests",
                                    "title": "The opensearch.arbiter.resources.requests schema",
                                    "description": "opensearch.arbiter.resources.requests parameters"
                                }
                            },
                            "$id": "#/properties/opensearch/properties/arbiter/properties/resources",
                            "title": "The opensearch.arbiter.resources schema",
                            "description": "opensearch.arbiter.resources parameters"
                        },
                        "startupProbe": {
                            "type": "object",
                            "default": {},
                            "$id": "#/properties/opensearch/properties/arbiter/properties/startupProbe",
                            "title": "The opensearch.arbiter.startupProbe schema",
                            "description": "The configuration of the [startupProbe](https://kubernetes"
                        },
                        "tolerations": {
                            "type": "array",
                            "default": [],
                            "$id": "#/properties/opensearch/properties/arbiter/properties/tolerations",
                            "title": "The opensearch.arbiter.tolerations schema",
                            "description": "The list of toleration policies for OpenSearch arbiter nodes in `JSON` format"
                        },
                        "updateStrategy": {
                            "type": "string",
                            "default": "RollingUpdate",
                            "$id": "#/properties/opensearch/properties/arbiter/properties/updateStrategy",
                            "title": "The opensearch.arbiter.updateStrategy schema",
                            "description": "The strategy used to replace old pods by new ones"
                        },
                        "podDisruptionBudget": {
                            "$id": "#/properties/opensearch/properties/arbiter/properties/podDisruptionBudget",
                            "type": "object",
                            "title": "The opensearch.arbiter.podDisruptionBudget schema",
                            "description": "opensearch.arbiter.podDisruptionBudget parameters",
                            "properties": {
                                "enabled": {
                                    "$id": "#/properties/opensearch/properties/arbiter/properties/podDisruptionBudget/properties/enabled",
                                    "type": "boolean",
                                    "title": "The opensearch.arbiter.podDisruptionBudget.enabled schema",
                                    "description": "Whether the disruption budget for OpenSearch arbiter nodes is to be created"
                                },
                                "minAvailable": {
                                    "$id": "#/properties/opensearch/properties/arbiter/properties/podDisruptionBudget/properties/minAvailable",
                                    "type": "integer",
                                    "title": "The opensearch.arbiter.podDisruptionBudget.minAvailable schema",
                                    "description": "The minimum number or percentage of pods that [should remain scheduled](https://kubernetes"
                                },
                                "maxUnavailable": {
                                    "$id": "#/properties/opensearch/properties/arbiter/properties/podDisruptionBudget/properties/maxUnavailable",
                                    "type": "integer",
                                    "title": "The opensearch.arbiter.podDisruptionBudget.maxUnavailable schema",
                                    "description": "The maximum number or percentage of pods that [may be unscheduled](https://kubernetes"
                                }
                            }
                        }
                    },
                    "$id": "#/properties/opensearch/properties/arbiter",
                    "title": "The opensearch.arbiter schema",
                    "description": "opensearch.arbiter parameters"
                },
                "client": {
                    "type": "object",
                    "properties": {
                        "affinity": {
                            "type": "object",
                            "properties": {},
                            "default": {
                                "podAntiAffinity": {
                                    "preferredDuringSchedulingIgnoredDuringExecution": [
                                        {
                                            "weight": 1,
                                            "podAffinityTerm": {
                                                "topologyKey": "kubernetes.io/hostname",
                                                "labelSelector": {
                                                    "matchLabels": {
                                                        "role": "client"
                                                    }
                                                }
                                            }
                                        }
                                    ]
                                }
                            },
                            "$id": "#/properties/opensearch/properties/client/properties/affinity",
                            "title": "The opensearch.client.affinity schema",
                            "description": "The affinity scheduling rules in `JSON` format"
                        },
                        "customLabels": {
                            "type": "object",
                            "default": {},
                            "$id": "#/properties/opensearch/properties/client/properties/customLabels",
                            "title": "The opensearch.client.customLabels schema",
                            "description": "The custom labels for the OpenSearch client pods"
                        },
                        "dedicatedPod": {
                            "type": "object",
                            "properties": {
                                "enabled": {
                                    "type": "boolean",
                                    "default": false,
                                    "$id": "#/properties/opensearch/properties/client/properties/dedicatedPod/properties/enabled",
                                    "title": "The opensearch.client.dedicatedPod.enabled schema",
                                    "description": "Whether dedicated `Deployment` for data is to be enabled"
                                }
                            },
                            "$id": "#/properties/opensearch/properties/client/properties/dedicatedPod",
                            "title": "The opensearch.client.dedicatedPod schema",
                            "description": "opensearch.client.dedicatedPod parameters"
                        },
                        "enabled": {
                            "type": "boolean",
                            "default": true,
                            "$id": "#/properties/opensearch/properties/client/properties/enabled",
                            "title": "The opensearch.client.enabled schema",
                            "description": "Whether the OpenSearch `client`/`ingester` nodes are to be enabled"
                        },
                        "imagePullSecrets": {
                            "type": "array",
                            "default": [],
                            "$id": "#/properties/opensearch/properties/client/properties/imagePullSecrets",
                            "title": "The opensearch.client.imagePullSecrets schema",
                            "description": "The list of references to secrets in the same namespace to use for pulling any of the images used by OpenSearch client containers"
                        },
                        "ingress": {
                            "type": "object",
                            "properties": {
                                "annotations": {
                                    "type": "object",
                                    "default": {},
                                    "$id": "#/properties/opensearch/properties/client/properties/ingress/properties/annotations",
                                    "title": "The opensearch.client.ingress.annotations schema",
                                    "description": "The annotations for OpenSearch client ingress"
                                },
                                "className": {
                                    "type": "string",
                                    "default": "",
                                    "$id": "#/properties/opensearch/properties/client/properties/ingress/properties/className",
                                    "title": "The opensearch.client.ingress.className schema",
                                    "description": "The class name for OpenSearch client ingress"
                                },
                                "enabled": {
                                    "type": "boolean",
                                    "default": false,
                                    "$id": "#/properties/opensearch/properties/client/properties/ingress/properties/enabled",
                                    "title": "The opensearch.client.ingress.enabled schema",
                                    "description": "Whether OpenSearch client ingress is to be enabled"
                                },
                                "hosts": {
                                    "type": "array",
                                    "default": [],
                                    "$id": "#/properties/opensearch/properties/client/properties/ingress/properties/hosts",
                                    "title": "The opensearch.client.ingress.hosts schema",
                                    "description": "The list of hosts for OpenSearch client ingress"
                                },
                                "labels": {
                                    "type": "object",
                                    "default": {},
                                    "$id": "#/properties/opensearch/properties/client/properties/ingress/properties/labels",
                                    "title": "The opensearch.client.ingress.labels schema",
                                    "description": "The labels for OpenSearch client ingress"
                                },
                                "path": {
                                    "type": "string",
                                    "default": "/",
                                    "$id": "#/properties/opensearch/properties/client/properties/ingress/properties/path",
                                    "title": "The opensearch.client.ingress.path schema",
                                    "description": "The path for OpenSearch client ingress"
                                },
                                "tls": {
                                    "type": "array",
                                    "default": [],
                                    "$id": "#/properties/opensearch/properties/client/properties/ingress/properties/tls",
                                    "title": "The opensearch.client.ingress.tls schema",
                                    "description": "The list of TLS configurations for OpenSearch client ingress"
                                }
                            },
                            "$id": "#/properties/opensearch/properties/client/properties/ingress",
                            "title": "The opensearch.client.ingress schema",
                            "description": "opensearch.client.ingress parameters"
                        },
                        "javaOpts": {
                            "type": "string",
                            "default": "-Xms512m -Xmx512m",
                            "$id": "#/properties/opensearch/properties/client/properties/javaOpts",
                            "title": "The opensearch.client.javaOpts schema",
                            "description": "The Java options that are used for OpenSearch client nodes",
                            "internal": true,
                            "envSpecific": true
                        },
                        "livenessProbe": {
                            "type": "object",
                            "properties": {},
                            "default": {
                                "tcpSocket": {
                                    "port": "transport"
                                },
                                "initialDelaySeconds": 60,
                                "periodSeconds": 20,
                                "failureThreshold": 5
                            },
                            "$id": "#/properties/opensearch/properties/client/properties/livenessProbe",
                            "title": "The opensearch.client.livenessProbe schema",
                            "description": "The configuration of the [livenessProbe](https://kubernetes"
                        },
                        "nodeSelector": {
                            "type": "object",
                            "default": {},
                            "$id": "#/properties/opensearch/properties/client/properties/nodeSelector",
                            "title": "The opensearch.client.nodeSelector schema",
                            "description": "The selector that defines the nodes where the OpenSearch data nodes are scheduled on"
                        },
                        "podAnnotations": {
                            "type": "object",
                            "default": {},
                            "$id": "#/properties/opensearch/properties/client/properties/podAnnotations",
                            "title": "The opensearch.client.podAnnotations schema",
                            "description": "The annotations for OpenSearch client pod"
                        },
                        "podDisruptionBudget": {
                            "type": "object",
                            "properties": {
                                "enabled": {
                                    "type": "boolean",
                                    "default": false,
                                    "$id": "#/properties/opensearch/properties/client/properties/podDisruptionBudget/properties/enabled",
                                    "title": "The opensearch.client.podDisruptionBudget.enabled schema",
                                    "description": "Whether the disruption budget for OpenSearch client nodes is to be created"
                                },
                                "minAvailable": {
                                    "type": "integer",
                                    "default": 1,
                                    "$id": "#/properties/opensearch/properties/client/properties/podDisruptionBudget/properties/minAvailable",
                                    "title": "The opensearch.client.podDisruptionBudget.minAvailable schema",
                                    "description": "The minimum number or percentage of pods that [should remain scheduled](https://kubernetes"
                                },
                                "maxUnavailable": {
                                    "$id": "#/properties/opensearch/properties/client/properties/podDisruptionBudget/properties/maxUnavailable",
                                    "type": "integer",
                                    "title": "The opensearch.client.podDisruptionBudget.maxUnavailable schema",
                                    "description": "The maximum number or percentage of pods that [may be unscheduled](https://kubernetes"
                                }
                            },
                            "$id": "#/properties/opensearch/properties/client/properties/podDisruptionBudget",
                            "title": "The opensearch.client.podDisruptionBudget schema",
                            "description": "opensearch.client.podDisruptionBudget parameters"
                        },
                        "priorityClassName": {
                            "type": "string",
                            "default": "",
                            "$id": "#/properties/opensearch/properties/client/properties/priorityClassName",
                            "title": "The opensearch.client.priorityClassName schema",
                            "description": "The priority class to be used by the OpenSearch client nodes"
                        },
                        "readinessProbe": {
                            "type": "object",
                            "default": {},
                            "$id": "#/properties/opensearch/properties/client/properties/readinessProbe",
                            "title": "The opensearch.client.readinessProbe schema",
                            "description": "The configuration of the [readinessProbe](https://kubernetes"
                        },
                        "replicas": {
                            "type": "integer",
                            "default": 3,
                            "$id": "#/properties/opensearch/properties/client/properties/replicas",
                            "title": "The opensearch.client.replicas schema",
                            "description": "The number of OpenSearch client nodes",
                            "internal": true,
                            "envSpecific": true
                        },
                        "resources": {
                            "type": "object",
                            "properties": {
                                "limits": {
                                    "type": "object",
                                    "properties": {
                                        "cpu": {
                                            "default": 1,
                                            "$id": "#/properties/opensearch/properties/client/properties/resources/properties/limits/properties/cpu",
                                            "title": "The opensearch.client.resources.limits.cpu schema",
                                            "description": "The maximum number of CPUs the OpenSearch client node container should use",
                                            "internal": true,
                                            "envSpecific": true,
                                            "comment": "don't use type field, because it breaks backward compatibility"
                                        },
                                        "memory": {
                                            "type": "string",
                                            "default": "1024Mi",
                                            "$id": "#/properties/opensearch/properties/client/properties/resources/properties/limits/properties/memory",
                                            "title": "The opensearch.client.resources.limits.memory schema",
                                            "description": "The maximum number of memory the OpenSearch client node container should use",
                                            "internal": true,
                                            "envSpecific": true
                                        }
                                    },
                                    "$id": "#/properties/opensearch/properties/client/properties/resources/properties/limits",
                                    "title": "The opensearch.client.resources.limits schema",
                                    "description": "opensearch.client.resources.limits parameters"
                                },
                                "requests": {
                                    "type": "object",
                                    "properties": {
                                        "cpu": {
                                            "default": "200m",
                                            "$id": "#/properties/opensearch/properties/client/properties/resources/properties/requests/properties/cpu",
                                            "title": "The opensearch.client.resources.requests.cpu schema",
                                            "description": "The minimum number of CPUs the OpenSearch client node container should use",
                                            "internal": true,
                                            "envSpecific": true,
                                            "comment": "don't use type field, because it breaks backward compatibility"
                                        },
                                        "memory": {
                                            "type": "string",
                                            "default": "1024Mi",
                                            "$id": "#/properties/opensearch/properties/client/properties/resources/properties/requests/properties/memory",
                                            "title": "The opensearch.client.resources.requests.memory schema",
                                            "description": "The minimum number of memory the OpenSearch client node container should use",
                                            "internal": true,
                                            "envSpecific": true
                                        }
                                    },
                                    "$id": "#/properties/opensearch/properties/client/properties/resources/properties/requests",
                                    "title": "The opensearch.client.resources.requests schema",
                                    "description": "opensearch.client.resources.requests parameters"
                                }
                            },
                            "$id": "#/properties/opensearch/properties/client/properties/resources",
                            "title": "The opensearch.client.resources schema",
                            "description": "opensearch.client.resources parameters"
                        },
                        "service": {
                            "type": "object",
                            "properties": {
                                "annotations": {
                                    "type": "object",
                                    "default": {},
                                    "$id": "#/properties/opensearch/properties/client/properties/service/properties/annotations",
                                    "title": "The opensearch.client.service.annotations schema",
                                    "description": "The annotations for OpenSearch client service"
                                },
                                "type": {
                                    "type": "string",
                                    "default": "ClusterIP",
                                    "$id": "#/properties/opensearch/properties/client/properties/service/properties/type",
                                    "title": "The opensearch.client.service.type schema",
                                    "description": "The type of OpenSearch client service"
                                }
                            },
                            "$id": "#/properties/opensearch/properties/client/properties/service",
                            "title": "The opensearch.client.service schema",
                            "description": "opensearch.client.service parameters"
                        },
                        "startupProbe": {
                            "type": "object",
                            "default": {},
                            "$id": "#/properties/opensearch/properties/client/properties/startupProbe",
                            "title": "The opensearch.client.startupProbe schema",
                            "description": "The configuration of the [startupProbe](https://kubernetes"
                        },
                        "tolerations": {
                            "type": "array",
                            "default": [],
                            "$id": "#/properties/opensearch/properties/client/properties/tolerations",
                            "title": "The opensearch.client.tolerations schema",
                            "description": "The list of toleration policies for OpenSearch client nodes in `JSON` format"
                        }
                    },
                    "$id": "#/properties/opensearch/properties/client",
                    "title": "The opensearch.client schema",
                    "description": "opensearch.client parameters"
                },
                "compatibilityModeEnabled": {
                    "type": "boolean",
                    "default": true,
                    "$id": "#/properties/opensearch/properties/compatibilityModeEnabled",
                    "title": "The opensearch.compatibilityModeEnabled schema",
                    "description": "Whether the compatibility mode is to be enabled"
                },
                "config": {
                    "type": "object",
                    "properties": {},
                    "default": {
                        "plugins.security.allow_unsafe_democertificates": true,
                        "plugins.security.allow_default_init_securityindex": "${ALLOW_SECURITY_INITIALIZATION}",
                        "plugins.security.audit.type": "log4j",
                        "plugins.security.audit.config.log4j.level": "INFO",
                        "plugins.security.unsupported.restapi.allow_securityconfig_modification": true,
                        "plugins.security.restapi.roles_enabled": [
                            "all_access",
                            "security_rest_api_access"
                        ],
                        "plugins.security.restapi.password_score_based_validation_strength": "fair",
                        "plugins.security.nodes_dn": [
                            "CN=opensearch-node,OU=Opensearch,O=Opensearch,L=Opensearch,C=CA"
                        ],
                        "plugins.security.authcz.admin_dn": [
                            "CN=opensearch-admin,OU=Opensearch,O=Opensearch,L=Opensearch,C=CA",
                            "C=CA,L=Opensearch,O=Opensearch,OU=Opensearch,CN=opensearch-admin"
                        ],
                        "plugins.security.enable_snapshot_restore_privilege": true,
                        "plugins.security.check_snapshot_restore_write_privileges": true,
                        "path.repo": [
                            "/usr/share/opensearch/snapshots"
                        ],
                        "plugins.security.ssl.transport.pemcert_filepath": "transport-crt.pem",
                        "plugins.security.ssl.transport.pemkey_filepath": "transport-key.pem",
                        "plugins.security.ssl.transport.pemtrustedcas_filepath": "transport-root-ca.pem",
                        "plugins.security.ssl.transport.enforce_hostname_verification": false,
                        "plugins.security.ssl.http.enabled": "${TLS_ENABLED}",
                        "plugins.security.ssl.http.pemcert_filepath": "rest-crt.pem",
                        "plugins.security.ssl.http.pemkey_filepath": "rest-key.pem",
                        "plugins.security.ssl.http.pemtrustedcas_filepath": "rest-root-ca.pem"
                    },
                    "$id": "#/properties/opensearch/properties/config",
                    "title": "The opensearch.config schema",
                    "description": "The configuration of common properties for OpenSearch (`opensearch"
                },
                "configDirectory": {
                    "type": "string",
                    "default": "/usr/share/opensearch/config",
                    "$id": "#/properties/opensearch/properties/configDirectory",
                    "title": "The opensearch.configDirectory schema",
                    "description": "The location of OpenSearch configuration"
                },
                "data": {
                    "type": "object",
                    "properties": {
                        "affinity": {
                            "type": "object",
                            "properties": {},
                            "default": {
                                "podAntiAffinity": {
                                    "preferredDuringSchedulingIgnoredDuringExecution": [
                                        {
                                            "weight": 1,
                                            "podAffinityTerm": {
                                                "topologyKey": "kubernetes.io/hostname",
                                                "labelSelector": {
                                                    "matchLabels": {
                                                        "role": "data"
                                                    }
                                                }
                                            }
                                        }
                                    ]
                                }
                            },
                            "$id": "#/properties/opensearch/properties/data/properties/affinity",
                            "title": "The opensearch.data.affinity schema",
                            "description": "The affinity scheduling rules in `JSON` format"
                        },
                        "customLabels": {
                            "type": "object",
                            "default": {},
                            "$id": "#/properties/opensearch/properties/data/properties/customLabels",
                            "title": "The opensearch.data.customLabels schema",
                            "description": "The custom labels for the OpenSearch data pods"
                        },
                        "dedicatedPod": {
                            "type": "object",
                            "properties": {
                                "enabled": {
                                    "type": "boolean",
                                    "default": false,
                                    "$id": "#/properties/opensearch/properties/data/properties/dedicatedPod/properties/enabled",
                                    "title": "The opensearch.data.dedicatedPod.enabled schema",
                                    "description": "Whether dedicated `StatefulSet` for data is to be enabled"
                                }
                            },
                            "$id": "#/properties/opensearch/properties/data/properties/dedicatedPod",
                            "title": "The opensearch.data.dedicatedPod schema",
                            "description": "opensearch.data.dedicatedPod parameters"
                        },
                        "enabled": {
                            "type": "boolean",
                            "default": true,
                            "$id": "#/properties/opensearch/properties/data/properties/enabled",
                            "title": "The opensearch.data.enabled schema",
                            "description": "Whether the OpenSearch data nodes are to be enabled"
                        },
                        "imagePullSecrets": {
                            "type": "array",
                            "default": [],
                            "$id": "#/properties/opensearch/properties/data/properties/imagePullSecrets",
                            "title": "The opensearch.data.imagePullSecrets schema",
                            "description": "The list of references to secrets in the same namespace to use for pulling any of the images used by OpenSearch data containers"
                        },
                        "javaOpts": {
                            "type": "string",
                            "default": "-Xms1024m -Xmx1024m",
                            "$id": "#/properties/opensearch/properties/data/properties/javaOpts",
                            "title": "The opensearch.data.javaOpts schema",
                            "description": "The Java options that are used for OpenSearch data nodes",
                            "internal": true,
                            "envSpecific": true
                        },
                        "livenessProbe": {
                            "type": "object",
                            "properties": {},
                            "default": {
                                "tcpSocket": {
                                    "port": "transport"
                                },
                                "initialDelaySeconds": 60,
                                "periodSeconds": 20,
                                "failureThreshold": 5
                            },
                            "$id": "#/properties/opensearch/properties/data/properties/livenessProbe",
                            "title": "The opensearch.data.livenessProbe schema",
                            "description": "The configuration of the [livenessProbe](https://kubernetes"
                        },
                        "nodeSelector": {
                            "type": "object",
                            "default": {},
                            "$id": "#/properties/opensearch/properties/data/properties/nodeSelector",
                            "title": "The opensearch.data.nodeSelector schema",
                            "description": "The selector that defines the nodes where the OpenSearch data nodes are scheduled on"
                        },
                        "persistence": {
                            "type": "object",
                            "properties": {
                                "accessModes": {
                                    "type": "array",
                                    "items": {
                                        "type": "string"
                                    },
                                    "default": [
                                        "ReadWriteOnce"
                                    ],
                                    "$id": "#/properties/opensearch/properties/data/properties/persistence/properties/accessModes",
                                    "title": "The opensearch.data.persistence.accessModes schema",
                                    "description": "The list of access modes of persistent volumes for OpenSearch data nodes"
                                },
                                "annotations": {
                                    "type": "object",
                                    "default": {},
                                    "$id": "#/properties/opensearch/properties/data/properties/persistence/properties/annotations",
                                    "title": "The opensearch.data.persistence.annotations schema",
                                    "description": "The annotations of persistent volumes for OpenSearch data nodes"
                                },
                                "enabled": {
                                    "type": "boolean",
                                    "default": true,
                                    "$id": "#/properties/opensearch/properties/data/properties/persistence/properties/enabled",
                                    "title": "The opensearch.data.persistence.enabled schema",
                                    "description": "Whether persistent storage is to be enabled on OpenSearch data nodes"
                                },
                                "existingClaim": {
                                    "type": "string",
                                    "default": "",
                                    "$id": "#/properties/opensearch/properties/data/properties/persistence/properties/existingClaim",
                                    "title": "The opensearch.data.persistence.existingClaim schema",
                                    "description": "The name of the existing persistent volume claim for OpenSearch data nodes"
                                },
                                "nodes": {
                                    "type": "array",
                                    "default": [],
                                    "$id": "#/properties/opensearch/properties/data/properties/persistence/properties/nodes",
                                    "title": "The opensearch.data.persistence.nodes schema",
                                    "description": "The list of Kubernetes node names to assign OpenSearch data nodes"
                                },
                                "persistentVolumes": {
                                    "type": "array",
                                    "default": [],
                                    "$id": "#/properties/opensearch/properties/data/properties/persistence/properties/persistentVolumes",
                                    "title": "The opensearch.data.persistence.persistentVolumes schema",
                                    "description": "The list of predefined persistent volumes for OpenSearch data nodes"
                                },
                                "size": {
                                    "type": "string",
                                    "default": "5Gi",
                                    "$id": "#/properties/opensearch/properties/data/properties/persistence/properties/size",
                                    "title": "The opensearch.data.persistence.size schema",
                                    "description": "The size of persistent volumes for OpenSearch data nodes"
                                },
                                "storageClass": {
                                    "type": "string",
                                    "default": "-",
                                    "$id": "#/properties/opensearch/properties/data/properties/persistence/properties/storageClass",
                                    "title": "The opensearch.data.persistence.storageClass schema",
                                    "description": "The storage class name that is used for OpenSearch data nodes"
                                },
                                "subPath": {
                                    "type": "string",
                                    "default": "",
                                    "$id": "#/properties/opensearch/properties/data/properties/persistence/properties/subPath",
                                    "title": "The opensearch.data.persistence.subPath schema",
                                    "description": "The subdirectory of the volume to mount to"
                                }
                            },
                            "$id": "#/properties/opensearch/properties/data/properties/persistence",
                            "title": "The opensearch.data.persistence schema",
                            "description": "opensearch.data.persistence parameters"
                        },
                        "podAnnotations": {
                            "type": "object",
                            "default": {},
                            "$id": "#/properties/opensearch/properties/data/properties/podAnnotations",
                            "title": "The opensearch.data.podAnnotations schema",
                            "description": "The annotations for OpenSearch data pod"
                        },
                        "podDisruptionBudget": {
                            "type": "object",
                            "properties": {
                                "enabled": {
                                    "type": "boolean",
                                    "default": false,
                                    "$id": "#/properties/opensearch/properties/data/properties/podDisruptionBudget/properties/enabled",
                                    "title": "The opensearch.data.podDisruptionBudget.enabled schema",
                                    "description": "Whether the disruption budget for OpenSearch data nodes is to be created"
                                },
                                "minAvailable": {
                                    "type": "integer",
                                    "default": 1,
                                    "$id": "#/properties/opensearch/properties/data/properties/podDisruptionBudget/properties/minAvailable",
                                    "title": "The opensearch.data.podDisruptionBudget.minAvailable schema",
                                    "description": "The minimum number or percentage of pods that [should remain scheduled](https://kubernetes"
                                },
                                "maxUnavailable": {
                                    "$id": "#/properties/opensearch/properties/data/properties/podDisruptionBudget/properties/maxUnavailable",
                                    "type": "integer",
                                    "title": "The opensearch.data.podDisruptionBudget.maxUnavailable schema",
                                    "description": "The maximum number or percentage of pods that [may be unscheduled](https://kubernetes"
                                }
                            },
                            "$id": "#/properties/opensearch/properties/data/properties/podDisruptionBudget",
                            "title": "The opensearch.data.podDisruptionBudget schema",
                            "description": "opensearch.data.podDisruptionBudget parameters"
                        },
                        "priorityClassName": {
                            "type": "string",
                            "default": "",
                            "$id": "#/properties/opensearch/properties/data/properties/priorityClassName",
                            "title": "The opensearch.data.priorityClassName schema",
                            "description": "The priority class to be used by the OpenSearch data nodes"
                        },
                        "readinessProbe": {
                            "type": "object",
                            "default": {},
                            "$id": "#/properties/opensearch/properties/data/properties/readinessProbe",
                            "title": "The opensearch.data.readinessProbe schema",
                            "description": "The configuration of the [readinessProbe](https://kubernetes"
                        },
                        "replicas": {
                            "type": "integer",
                            "default": 3,
                            "$id": "#/properties/opensearch/properties/data/properties/replicas",
                            "title": "The opensearch.data.replicas schema",
                            "description": "The number of OpenSearch data nodes",
                            "internal": true,
                            "envSpecific": true
                        },
                        "resources": {
                            "type": "object",
                            "properties": {
                                "limits": {
                                    "type": "object",
                                    "properties": {
                                        "cpu": {
                                            "default": 1,
                                            "$id": "#/properties/opensearch/properties/data/properties/resources/properties/limits/properties/cpu",
                                            "title": "The opensearch.data.resources.limits.cpu schema",
                                            "description": "The maximum number of CPUs the OpenSearch data node container should use",
                                            "internal": true,
                                            "envSpecific": true,
                                            "comment": "don't use type field, because it breaks backward compatibility"
                                        },
                                        "memory": {
                                            "type": "string",
                                            "default": "4Gi",
                                            "$id": "#/properties/opensearch/properties/data/properties/resources/properties/limits/properties/memory",
                                            "title": "The opensearch.data.resources.limits.memory schema",
                                            "description": "The maximum number of memory the OpenSearch data node container should use",
                                            "internal": true,
                                            "envSpecific": true
                                        }
                                    },
                                    "$id": "#/properties/opensearch/properties/data/properties/resources/properties/limits",
                                    "title": "The opensearch.data.resources.limits schema",
                                    "description": "opensearch.data.resources.limits parameters"
                                },
                                "requests": {
                                    "type": "object",
                                    "properties": {
                                        "cpu": {
                                            "default": "250m",
                                            "$id": "#/properties/opensearch/properties/data/properties/resources/properties/requests/properties/cpu",
                                            "title": "The opensearch.data.resources.requests.cpu schema",
                                            "description": "The minimum number of CPUs the OpenSearch data node container should use",
                                            "internal": true,
                                            "envSpecific": true,
                                            "comment": "don't use type field, because it breaks backward compatibility"
                                        },
                                        "memory": {
                                            "type": "string",
                                            "default": "2Gi",
                                            "$id": "#/properties/opensearch/properties/data/properties/resources/properties/requests/properties/memory",
                                            "title": "The opensearch.data.resources.requests.memory schema",
                                            "description": "The minimum number of memory the OpenSearch data node container should use",
                                            "internal": true,
                                            "envSpecific": true
                                        }
                                    },
                                    "$id": "#/properties/opensearch/properties/data/properties/resources/properties/requests",
                                    "title": "The opensearch.data.resources.requests schema",
                                    "description": "opensearch.data.resources.requests parameters"
                                }
                            },
                            "$id": "#/properties/opensearch/properties/data/properties/resources",
                            "title": "The opensearch.data.resources schema",
                            "description": "opensearch.data.resources parameters"
                        },
                        "startupProbe": {
                            "type": "object",
                            "default": {},
                            "$id": "#/properties/opensearch/properties/data/properties/startupProbe",
                            "title": "The opensearch.data.startupProbe schema",
                            "description": "The configuration of the [startupProbe](https://kubernetes"
                        },
                        "tolerations": {
                            "type": "array",
                            "default": [],
                            "$id": "#/properties/opensearch/properties/data/properties/tolerations",
                            "title": "The opensearch.data.tolerations schema",
                            "description": "The list of toleration policies for OpenSearch data nodes in `JSON` format"
                        },
                        "updateStrategy": {
                            "type": "string",
                            "default": "RollingUpdate",
                            "$id": "#/properties/opensearch/properties/data/properties/updateStrategy",
                            "title": "The opensearch.data.updateStrategy schema",
                            "description": "The strategy used to replace old pods by new ones"
                        }
                    },
                    "$id": "#/properties/opensearch/properties/data",
                    "title": "The opensearch.data schema",
                    "description": "opensearch.data parameters"
                },
                "discoveryOverride": {
                    "type": "string",
                    "default": "",
                    "$id": "#/properties/opensearch/properties/discoveryOverride",
                    "title": "The opensearch.discoveryOverride schema",
                    "description": "The possibility to override the `discovery"
                },
                "dockerImage": {
                    "type": "string",
                    "default": "artifactorycn.netcracker.com:17008/product/prod.platform.elasticstack_docker-opensearch:master_latest",
                    "$id": "#/properties/opensearch/properties/dockerImage",
                    "title": "The opensearch.dockerImage schema",
                    "description": "The docker image of OpenSearch"
                },
                "dockerTlsInitImage": {
                    "type": "string",
                    "default": "artifactorycn.netcracker.com:17008/product/prod.platform.elasticstack_opensearch-service:master_latest_tls-init",
                    "$id": "#/properties/opensearch/properties/dockerTlsInitImage",
                    "title": "The opensearch.dockerTlsInitImage schema",
                    "description": "The docker image of OpenSearch TLS init container"
                },
                "extraEnvs": {
                    "type": "array",
                    "default": [],
                    "$id": "#/properties/opensearch/properties/extraEnvs",
                    "title": "The opensearch.extraEnvs schema",
                    "description": "The list of extra environment variables to be passed to OpenSearch pods"
                },
                "extraInitContainers": {
                    "type": "array",
                    "default": [],
                    "$id": "#/properties/opensearch/properties/extraInitContainers",
                    "title": "The opensearch.extraInitContainers schema",
                    "description": "The list of extra init containers to be passed to OpenSearch pods"
                },
                "extraVolumeMounts": {
                    "type": "array",
                    "default": [],
                    "$id": "#/properties/opensearch/properties/extraVolumeMounts",
                    "title": "The opensearch.extraVolumeMounts schema",
                    "description": "The list of extra volume mounts to be passed to OpenSearch pods"
                },
                "extraVolumes": {
                    "type": "array",
                    "default": [],
                    "$id": "#/properties/opensearch/properties/extraVolumes",
                    "title": "The opensearch.extraVolumes schema",
                    "description": "The list of extra volumes to be passed to OpenSearch pods"
                },
                "fixmount": {
                    "type": "object",
                    "properties": {
                        "enabled": {
                            "type": "boolean",
                            "default": false,
                            "$id": "#/properties/opensearch/properties/fixmount/properties/enabled",
                            "title": "The opensearch.fixmount.enabled schema",
                            "description": "Whether `initContainer` to fix mount permissions is to be enabled"
                        },
                        "securityContext": {
                            "type": "object",
                            "default": {},
                            "$id": "#/properties/opensearch/properties/fixmount/properties/securityContext",
                            "title": "The opensearch.fixmount.securityContext schema",
                            "description": "The pod-level security attributes and common container settings for `fixmount` init container in OpenSearch pods"
                        }
                    },
                    "$id": "#/properties/opensearch/properties/fixmount",
                    "title": "The opensearch.fixmount schema",
                    "description": "opensearch.fixmount parameters"
                },
                "gcLoggingEnabled": {
                    "type": "boolean",
                    "default": false,
                    "$id": "#/properties/opensearch/properties/gcLoggingEnabled",
                    "title": "The opensearch.gcLoggingEnabled schema",
                    "description": "Whether garbage collection logging is to be enabled for OpenSearch"
                },
                "imagePullPolicy": {
                    "type": "string",
                    "default": "",
                    "$id": "#/properties/opensearch/properties/imagePullPolicy",
                    "title": "The opensearch.imagePullPolicy schema",
                    "description": "The image pull policy for OpenSearch containers"
                },
                "initContainer": {
                    "type": "object",
                    "properties": {
                        "dockerImage": {
                            "type": "string",
                            "default": "artifactorycn.netcracker.com:17064/library/busybox:1.35.0",
                            "$id": "#/properties/opensearch/properties/initContainer/properties/dockerImage",
                            "title": "The opensearch.initContainer.dockerImage schema",
                            "description": "The docker image of OpenSearch init containers"
                        }
                    },
                    "$id": "#/properties/opensearch/properties/initContainer",
                    "title": "The opensearch.initContainer schema",
                    "description": "opensearch.initContainer parameters"
                },
                "log4jConfig": {
                    "type": "object",
                    "default": {},
                    "$id": "#/properties/opensearch/properties/log4jConfig",
                    "title": "The opensearch.log4jConfig schema",
                    "description": "The configuration of `log4j` properties for OpenSearch (`log4j2"
                },
                "loggingConfig": {
                    "type": "object",
                    "properties": {},
                    "default": {
                        "es.logger.level": "INFO",
                        "rootLogger": "${es.logger.level}, console",
                        "logger": {
                            "action": "DEBUG",
                            "com.amazonaws": "WARN"
                        },
                        "appender": {
                            "console": {
                                "type": "console",
                                "layout": {
                                    "type": "consolePattern",
                                    "conversionPattern": "[%d{ISO8601}][%-5p][%-25c] %m%n"
                                }
                            }
                        }
                    },
                    "$id": "#/properties/opensearch/properties/loggingConfig",
                    "title": "The opensearch.loggingConfig schema",
                    "description": "The configuration of logging properties for OpenSearch (`logging"
                },
                "master": {
                    "type": "object",
                    "properties": {
                        "affinity": {
                            "type": "object",
                            "properties": {},
                            "default": {
                                "podAntiAffinity": {
                                    "requiredDuringSchedulingIgnoredDuringExecution": [
                                        {
                                            "topologyKey": "kubernetes.io/hostname",
                                            "labelSelector": {
                                                "matchLabels": {
                                                    "role": "master"
                                                }
                                            }
                                        }
                                    ]
                                }
                            },
                            "$id": "#/properties/opensearch/properties/master/properties/affinity",
                            "title": "The opensearch.master.affinity schema",
                            "description": "The affinity scheduling rules in `JSON` format"
                        },
                        "customLabels": {
                            "type": "object",
                            "default": {},
                            "$id": "#/properties/opensearch/properties/master/properties/customLabels",
                            "title": "The opensearch.master.customLabels schema",
                            "description": "The custom labels for the OpenSearch master pods"
                        },
                        "enabled": {
                            "type": "boolean",
                            "default": true,
                            "$id": "#/properties/opensearch/properties/master/properties/enabled",
                            "title": "The opensearch.master.enabled schema",
                            "description": "Whether the OpenSearch master nodes are to be enabled"
                        },
                        "extraContainers": {
                            "type": "array",
                            "default": [],
                            "$id": "#/properties/opensearch/properties/master/properties/extraContainers",
                            "title": "The opensearch.master.extraContainers schema",
                            "description": "The list of extra containers to add inside the OpenSearch master pod"
                        },
                        "extraInitContainers": {
                            "type": "array",
                            "default": [],
                            "$id": "#/properties/opensearch/properties/master/properties/extraInitContainers",
                            "title": "The opensearch.master.extraInitContainers schema",
                            "description": "The list of extra init containers to add inside the OpenSearch master pod"
                        },
                        "imagePullSecrets": {
                            "type": "array",
                            "default": [],
                            "$id": "#/properties/opensearch/properties/master/properties/imagePullSecrets",
                            "title": "The opensearch.master.imagePullSecrets schema",
                            "description": "The list of references to secrets in the same namespace to use for pulling any of the images used by OpenSearch master containers"
                        },
                        "javaOpts": {
                            "type": "string",
                            "default": "-Xms1024m -Xmx1024m",
                            "$id": "#/properties/opensearch/properties/master/properties/javaOpts",
                            "title": "The opensearch.master.javaOpts schema",
                            "description": "The Java options that are used for OpenSearch master nodes",
                            "internal": true,
                            "envSpecific": true
                        },
                        "livenessProbe": {
                            "type": "object",
                            "properties": {},
                            "default": {
                                "tcpSocket": {
                                    "port": "transport"
                                },
                                "initialDelaySeconds": 90,
                                "periodSeconds": 20,
                                "failureThreshold": 5
                            },
                            "$id": "#/properties/opensearch/properties/master/properties/livenessProbe",
                            "title": "The opensearch.master.livenessProbe schema",
                            "description": "The configuration of the [livenessProbe](https://kubernetes"
                        },
                        "nodeSelector": {
                            "type": "object",
                            "default": {},
                            "$id": "#/properties/opensearch/properties/master/properties/nodeSelector",
                            "title": "The opensearch.master.nodeSelector schema",
                            "description": "The selector that defines the nodes where the OpenSearch master nodes are scheduled on"
                        },
                        "persistence": {
                            "type": "object",
                            "properties": {
                                "accessModes": {
                                    "type": "array",
                                    "items": {
                                        "type": "string"
                                    },
                                    "default": [
                                        "ReadWriteOnce"
                                    ],
                                    "$id": "#/properties/opensearch/properties/master/properties/persistence/properties/accessModes",
                                    "title": "The opensearch.master.persistence.accessModes schema",
                                    "description": "The list of access modes of persistent volumes for OpenSearch master nodes"
                                },
                                "annotations": {
                                    "type": "object",
                                    "default": {},
                                    "$id": "#/properties/opensearch/properties/master/properties/persistence/properties/annotations",
                                    "title": "The opensearch.master.persistence.annotations schema",
                                    "description": "The annotations of persistent volumes for OpenSearch master nodes"
                                },
                                "enabled": {
                                    "type": "boolean",
                                    "default": true,
                                    "$id": "#/properties/opensearch/properties/master/properties/persistence/properties/enabled",
                                    "title": "The opensearch.master.persistence.enabled schema",
                                    "description": "Whether persistent storage is to be enabled on OpenSearch master nodes"
                                },
                                "existingClaim": {
                                    "type": "string",
                                    "default": "",
                                    "$id": "#/properties/opensearch/properties/master/properties/persistence/properties/existingClaim",
                                    "title": "The opensearch.master.persistence.existingClaim schema",
                                    "description": "The name of the existing persistent volume claim for OpenSearch master nodes"
                                },
                                "nodes": {
                                    "type": "array",
                                    "default": [],
                                    "$id": "#/properties/opensearch/properties/master/properties/persistence/properties/nodes",
                                    "title": "The opensearch.master.persistence.nodes schema",
                                    "description": "The list of Kubernetes node names to assign OpenSearch master nodes"
                                },
                                "persistentVolumes": {
                                    "type": "array",
                                    "default": [],
                                    "$id": "#/properties/opensearch/properties/master/properties/persistence/properties/persistentVolumes",
                                    "title": "The opensearch.master.persistence.persistentVolumes schema",
                                    "description": "The list of predefined persistent volumes for OpenSearch master nodes"
                                },
                                "size": {
                                    "type": "string",
                                    "default": "5Gi",
                                    "$id": "#/properties/opensearch/properties/master/properties/persistence/properties/size",
                                    "title": "The opensearch.master.persistence.size schema",
                                    "description": "The size of persistent volumes for OpenSearch master nodes"
                                },
                                "storageClass": {
                                    "type": "string",
                                    "default": "-",
                                    "$id": "#/properties/opensearch/properties/master/properties/persistence/properties/storageClass",
                                    "title": "The opensearch.master.persistence.storageClass schema",
                                    "description": "The storage class name that is used for OpenSearch master nodes"
                                },
                                "subPath": {
                                    "type": "string",
                                    "default": "",
                                    "$id": "#/properties/opensearch/properties/master/properties/persistence/properties/subPath",
                                    "title": "The opensearch.master.persistence.subPath schema",
                                    "description": "The subdirectory of the volume to mount to"
                                }
                            },
                            "$id": "#/properties/opensearch/properties/master/properties/persistence",
                            "title": "The opensearch.master.persistence schema",
                            "description": "opensearch.master.persistence parameters"
                        },
                        "podAnnotations": {
                            "type": "object",
                            "default": {},
                            "$id": "#/properties/opensearch/properties/master/properties/podAnnotations",
                            "title": "The opensearch.master.podAnnotations schema",
                            "description": "The annotations for OpenSearch master pod"
                        },
                        "podDisruptionBudget": {
                            "type": "object",
                            "properties": {
                                "enabled": {
                                    "type": "boolean",
                                    "default": false,
                                    "$id": "#/properties/opensearch/properties/master/properties/podDisruptionBudget/properties/enabled",
                                    "title": "The opensearch.master.podDisruptionBudget.enabled schema",
                                    "description": "Whether the disruption budget for OpenSearch master nodes is to be created"
                                },
                                "minAvailable": {
                                    "type": "integer",
                                    "default": 1,
                                    "$id": "#/properties/opensearch/properties/master/properties/podDisruptionBudget/properties/minAvailable",
                                    "title": "The opensearch.master.podDisruptionBudget.minAvailable schema",
                                    "description": "The minimum number or percentage of pods that [should remain scheduled](https://kubernetes"
                                },
                                "maxUnavailable": {
                                    "$id": "#/properties/opensearch/properties/master/properties/podDisruptionBudget/properties/maxUnavailable",
                                    "type": "integer",
                                    "title": "The opensearch.master.podDisruptionBudget.maxUnavailable schema",
                                    "description": "The maximum number or percentage of pods that [may be unscheduled](https://kubernetes"
                                }
                            },
                            "$id": "#/properties/opensearch/properties/master/properties/podDisruptionBudget",
                            "title": "The opensearch.master.podDisruptionBudget schema",
                            "description": "opensearch.master.podDisruptionBudget parameters"
                        },
                        "priorityClassName": {
                            "type": "string",
                            "default": "",
                            "$id": "#/properties/opensearch/properties/master/properties/priorityClassName",
                            "title": "The opensearch.master.priorityClassName schema",
                            "description": "The priority class to be used by the OpenSearch master nodes"
                        },
                        "readinessProbe": {
                            "type": "object",
                            "default": {},
                            "$id": "#/properties/opensearch/properties/master/properties/readinessProbe",
                            "title": "The opensearch.master.readinessProbe schema",
                            "description": "The configuration of the [readinessProbe](https://kubernetes"
                        },
                        "replicas": {
                            "type": "integer",
                            "default": 3,
                            "$id": "#/properties/opensearch/properties/master/properties/replicas",
                            "title": "The opensearch.master.replicas schema",
                            "description": "The number of OpenSearch master nodes",
                            "internal": true,
                            "envSpecific": true
                        },
                        "resources": {
                            "type": "object",
                            "properties": {
                                "limits": {
                                    "type": "object",
                                    "properties": {
                                        "cpu": {
                                            "default": 1,
                                            "$id": "#/properties/opensearch/properties/master/properties/resources/properties/limits/properties/cpu",
                                            "title": "The opensearch.master.resources.limits.cpu schema",
                                            "description": "The maximum number of CPUs the OpenSearch master node container should use",
                                            "internal": true,
                                            "envSpecific": true,
                                            "comment": "don't use type field, because it breaks backward compatibility"
                                        },
                                        "memory": {
                                            "type": "string",
                                            "default": "4Gi",
                                            "$id": "#/properties/opensearch/properties/master/properties/resources/properties/limits/properties/memory",
                                            "title": "The opensearch.master.resources.limits.memory schema",
                                            "description": "The maximum number of memory the OpenSearch master node container should use",
                                            "internal": true,
                                            "envSpecific": true
                                        }
                                    },
                                    "$id": "#/properties/opensearch/properties/master/properties/resources/properties/limits",
                                    "title": "The opensearch.master.resources.limits schema",
                                    "description": "opensearch.master.resources.limits parameters"
                                },
                                "requests": {
                                    "type": "object",
                                    "properties": {
                                        "cpu": {
                                            "default": "250m",
                                            "$id": "#/properties/opensearch/properties/master/properties/resources/properties/requests/properties/cpu",
                                            "title": "The opensearch.master.resources.requests.cpu schema",
                                            "description": "The minimum number of CPUs the OpenSearch master node container should use",
                                            "internal": true,
                                            "envSpecific": true,
                                            "comment": "don't use type field, because it breaks backward compatibility"
                                        },
                                        "memory": {
                                            "type": "string",
                                            "default": "2Gi",
                                            "$id": "#/properties/opensearch/properties/master/properties/resources/properties/requests/properties/memory",
                                            "title": "The opensearch.master.resources.requests.memory schema",
                                            "description": "The minimum number of memory the OpenSearch master node container should use",
                                            "internal": true,
                                            "envSpecific": true
                                        }
                                    },
                                    "$id": "#/properties/opensearch/properties/master/properties/resources/properties/requests",
                                    "title": "The opensearch.master.resources.requests schema",
                                    "description": "opensearch.master.resources.requests parameters"
                                }
                            },
                            "$id": "#/properties/opensearch/properties/master/properties/resources",
                            "title": "The opensearch.master.resources schema",
                            "description": "opensearch.master.resources parameters"
                        },
                        "startupProbe": {
                            "type": "object",
                            "default": {},
                            "$id": "#/properties/opensearch/properties/master/properties/startupProbe",
                            "title": "The opensearch.master.startupProbe schema",
                            "description": "The configuration of the [startupProbe](https://kubernetes"
                        },
                        "tolerations": {
                            "type": "array",
                            "default": [],
                            "$id": "#/properties/opensearch/properties/master/properties/tolerations",
                            "title": "The opensearch.master.tolerations schema",
                            "description": "The list of toleration policies for OpenSearch master nodes in `JSON` format"
                        },
                        "updateStrategy": {
                            "type": "string",
                            "default": "RollingUpdate",
                            "$id": "#/properties/opensearch/properties/master/properties/updateStrategy",
                            "title": "The opensearch.master.updateStrategy schema",
                            "description": "The strategy used to replace old pods by new ones"
                        }
                    },
                    "$id": "#/properties/opensearch/properties/master",
                    "title": "The opensearch.master schema",
                    "description": "opensearch.master parameters"
                },
                "maxMapCount": {
                    "type": "integer",
                    "default": 262144,
                    "$id": "#/properties/opensearch/properties/maxMapCount",
                    "title": "The opensearch.maxMapCount schema",
                    "description": "The value of `max_map_count` for OpenSearch"
                },
                "performanceAnalyzerEnabled": {
                    "type": "boolean",
                    "default": true,
                    "$id": "#/properties/opensearch/properties/performanceAnalyzerEnabled",
                    "title": "The opensearch.performanceAnalyzerEnabled schema",
                    "description": "Whether the OpenSearch Performance Analyzer plugin is to be running"
                },
                "readinessTimeout": {
                    "type": "string",
                    "default": "800s",
                    "$id": "#/properties/opensearch/properties/readinessTimeout",
                    "title": "The opensearch.readinessTimeout schema",
                    "description": "The timeout for OpenSearch readiness check in operator"
                },
                "rollingUpdate": {
                    "type": "boolean",
                    "default": false,
                    "$id": "#/properties/opensearch/properties/rollingUpdate",
                    "title": "The opensearch.rollingUpdate schema",
                    "description": "Whether operator performs rolling update on its own in accordance with [guide](#operator-rolling-upgrade-feature)"
                },
                "securityConfig": {
                    "type": "object",
                    "properties": {
                        "actionGroupsSecret": {
                            "type": "string",
                            "default": "",
                            "$id": "#/properties/opensearch/properties/securityConfig/properties/actionGroupsSecret",
                            "title": "The opensearch.securityConfig.actionGroupsSecret schema",
                            "description": "The name of the secret with [action_groups"
                        },
                        "authc": {
                            "type": "object",
                            "properties": {
                                "basic": {
                                    "type": "object",
                                    "properties": {
                                        "password": {
                                            "type": "string",
                                            "default": "",
                                            "$id": "#/properties/opensearch/properties/securityConfig/properties/authc/properties/basic/properties/password",
                                            "title": "The opensearch.securityConfig.authc.basic.password schema",
                                            "description": "The password of the OpenSearch user with `admin` privileges"
                                        },
                                        "username": {
                                            "type": "string",
                                            "default": "",
                                            "$id": "#/properties/opensearch/properties/securityConfig/properties/authc/properties/basic/properties/username",
                                            "title": "The opensearch.securityConfig.authc.basic.username schema",
                                            "description": "The username of the OpenSearch user with `admin` privileges"
                                        }
                                    },
                                    "$id": "#/properties/opensearch/properties/securityConfig/properties/authc/properties/basic",
                                    "title": "The opensearch.securityConfig.authc.basic schema",
                                    "description": "opensearch.securityConfig.authc.basic parameters"
                                },
                                "oidc": {
                                    "type": "object",
                                    "properties": {
                                        "openid_connect_url": {
                                            "type": "string",
                                            "default": "",
                                            "$id": "#/properties/opensearch/properties/securityConfig/properties/authc/properties/oidc/properties/openid_connect_url",
                                            "title": "The opensearch.securityConfig.authc.oidc.openid_connect_url schema",
                                            "description": "The URL of OpenID Connect Identity Provider's well-known endpoint"
                                        },
                                        "roles_key": {
                                            "type": "string",
                                            "default": "preferred_username",
                                            "$id": "#/properties/opensearch/properties/securityConfig/properties/authc/properties/oidc/properties/roles_key",
                                            "title": "The opensearch.securityConfig.authc.oidc.roles_key schema",
                                            "description": "The key in the JSON payload that stores the user's roles"
                                        },
                                        "subject_key": {
                                            "type": "string",
                                            "default": "preferred_username",
                                            "$id": "#/properties/opensearch/properties/securityConfig/properties/authc/properties/oidc/properties/subject_key",
                                            "title": "The opensearch.securityConfig.authc.oidc.subject_key schema",
                                            "description": "The key in the JSON payload that stores the user's name"
                                        }
                                    },
                                    "$id": "#/properties/opensearch/properties/securityConfig/properties/authc/properties/oidc",
                                    "title": "The opensearch.securityConfig.authc.oidc schema",
                                    "description": "opensearch.securityConfig.authc.oidc parameters"
                                }
                            },
                            "$id": "#/properties/opensearch/properties/securityConfig/properties/authc",
                            "title": "The opensearch.securityConfig.authc schema",
                            "description": "opensearch.securityConfig.authc parameters"
                        },
                        "config": {
                            "type": "object",
                            "properties": {
                                "data": {
                                    "type": "object",
                                    "default": {},
                                    "$id": "#/properties/opensearch/properties/securityConfig/properties/config/properties/data",
                                    "title": "The opensearch.securityConfig.config.data schema",
                                    "description": "The security configuration for OpenSearch in the JSON format"
                                },
                                "securityConfigSecret": {
                                    "type": "string",
                                    "default": "",
                                    "$id": "#/properties/opensearch/properties/securityConfig/properties/config/properties/securityConfigSecret",
                                    "title": "The opensearch.securityConfig.config.securityConfigSecret schema",
                                    "description": "The name of the secret for security configuration"
                                }
                            },
                            "$id": "#/properties/opensearch/properties/securityConfig/properties/config",
                            "title": "The opensearch.securityConfig.config schema",
                            "description": "opensearch.securityConfig.config parameters"
                        },
                        "configSecret": {
                            "type": "string",
                            "default": "",
                            "$id": "#/properties/opensearch/properties/securityConfig/properties/configSecret",
                            "title": "The opensearch.securityConfig.configSecret schema",
                            "description": "The name of the secret with [config"
                        },
                        "enabled": {
                            "type": "boolean",
                            "default": true,
                            "$id": "#/properties/opensearch/properties/securityConfig/properties/enabled",
                            "title": "The opensearch.securityConfig.enabled schema",
                            "description": "Whether custom [security configs](https://opensearch"
                        },
                        "enhancedSecurityPlugin": {
                            "type": "object",
                            "properties": {
                                "enabled": {
                                    "type": "boolean",
                                    "default": true,
                                    "$id": "#/properties/opensearch/properties/securityConfig/properties/enhancedSecurityPlugin/properties/enabled",
                                    "title": "The opensearch.securityConfig.enhancedSecurityPlugin.enabled schema",
                                    "description": "Whether to enable enhanced security plugin for OpenSearch DBaaS adapter"
                                }
                            },
                            "$id": "#/properties/opensearch/properties/securityConfig/properties/enhancedSecurityPlugin",
                            "title": "The opensearch.securityConfig.enhancedSecurityPlugin schema",
                            "description": "opensearch.securityConfig.enhancedSecurityPlugin parameters"
                        },
                        "internalUsersSecret": {
                            "type": "string",
                            "default": "",
                            "$id": "#/properties/opensearch/properties/securityConfig/properties/internalUsersSecret",
                            "title": "The opensearch.securityConfig.internalUsersSecret schema",
                            "description": "The name of the secret with [internal_users"
                        },
                        "path": {
                            "type": "string",
                            "default": "/usr/share/opensearch/config/opensearch-security",
                            "$id": "#/properties/opensearch/properties/securityConfig/properties/path",
                            "title": "The opensearch.securityConfig.path schema",
                            "description": "The path to the files of security configuration"
                        },
                        "rolesMappingSecret": {
                            "type": "string",
                            "default": "",
                            "$id": "#/properties/opensearch/properties/securityConfig/properties/rolesMappingSecret",
                            "title": "The opensearch.securityConfig.rolesMappingSecret schema",
                            "description": "The name of the secret with [roles_mapping"
                        },
                        "rolesSecret": {
                            "type": "string",
                            "default": "",
                            "$id": "#/properties/opensearch/properties/securityConfig/properties/rolesSecret",
                            "title": "The opensearch.securityConfig.rolesSecret schema",
                            "description": "The name of the secret with [roles"
                        },
                        "tenantsSecret": {
                            "type": "string",
                            "default": "",
                            "$id": "#/properties/opensearch/properties/securityConfig/properties/tenantsSecret",
                            "title": "The opensearch.securityConfig.tenantsSecret schema",
                            "description": "The name of the secret with [tenants"
                        }
                    },
                    "$id": "#/properties/opensearch/properties/securityConfig",
                    "title": "The opensearch.securityConfig schema",
                    "description": "opensearch.securityConfig parameters"
                },
                "securityContextCustom": {
                    "type": "object",
                    "default": {},
                    "$id": "#/properties/opensearch/properties/securityContextCustom",
                    "title": "The opensearch.securityContextCustom schema",
                    "description": "The pod-level security attributes and common container settings for OpenSearch pods"
                },
                "serviceAccount": {
                    "type": "object",
                    "properties": {
                        "create": {
                            "type": "boolean",
                            "default": true,
                            "$id": "#/properties/opensearch/properties/serviceAccount/properties/create",
                            "title": "The opensearch.serviceAccount.create schema",
                            "description": "Whether the default service account for OpenSearch is to be created and used"
                        },
                        "name": {
                            "type": "string",
                            "default": "",
                            "$id": "#/properties/opensearch/properties/serviceAccount/properties/name",
                            "title": "The opensearch.serviceAccount.name schema",
                            "description": "The name of the OpenSearch service account"
                        }
                    },
                    "$id": "#/properties/opensearch/properties/serviceAccount",
                    "title": "The opensearch.serviceAccount schema",
                    "description": "opensearch.serviceAccount parameters"
                },
                "snapshots": {
                    "type": "object",
                    "properties": {
                        "enabled": {
                            "type": "boolean",
                            "default": false,
                            "$id": "#/properties/opensearch/properties/snapshots/properties/enabled",
                            "title": "The opensearch.snapshots.enabled schema",
                            "description": "Whether persistent volume claim for snapshot repository is to be created and mounted"
                        },
                        "persistentVolume": {
                            "type": "string",
                            "default": "",
                            "$id": "#/properties/opensearch/properties/snapshots/properties/persistentVolume",
                            "title": "The opensearch.snapshots.persistentVolume schema",
                            "description": "The name of `RWX` persistent volume to store snapshots"
                        },
                        "persistentVolumeClaim": {
                            "type": "string",
                            "default": "",
                            "$id": "#/properties/opensearch/properties/snapshots/properties/persistentVolumeClaim",
                            "title": "The opensearch.snapshots.persistentVolumeClaim schema",
                            "description": "The name of `RWX` persistent volume claim to store snapshots"
                        },
                        "repositoryName": {
                            "type": "string",
                            "default": "snapshots",
                            "$id": "#/properties/opensearch/properties/snapshots/properties/repositoryName",
                            "title": "The opensearch.snapshots.repositoryName schema",
                            "description": "The name of snapshot repository in OpenSearch"
                        },
                        "s3": {
                            "type": "object",
                            "properties": {
                                "basePath": {
                                    "type": "string",
                                    "default": "",
                                    "$id": "#/properties/opensearch/properties/snapshots/properties/s3/properties/basePath",
                                    "title": "The opensearch.snapshots.s3.basePath schema",
                                    "description": "The base path in the S3 storage"
                                },
                                "bucket": {
                                    "type": "string",
                                    "default": "",
                                    "$id": "#/properties/opensearch/properties/snapshots/properties/s3/properties/bucket",
                                    "title": "The opensearch.snapshots.s3.bucket schema",
                                    "description": "The existing bucket in the S3 storage"
                                },
                                "enabled": {
                                    "type": "boolean",
                                    "default": false,
                                    "$id": "#/properties/opensearch/properties/snapshots/properties/s3/properties/enabled",
                                    "title": "The opensearch.snapshots.s3.enabled schema",
                                    "description": "Whether OpenSearch backups are to be stored in S3 storage"
                                },
                                "gcs": {
                                    "type": "object",
                                    "properties": {
                                        "secretKey": {
                                            "type": "string",
                                            "default": "",
                                            "$id": "#/properties/opensearch/properties/snapshots/properties/s3/properties/gcs/properties/secretKey",
                                            "title": "The opensearch.snapshots.s3.gcs.secretKey schema",
                                            "description": "The key of value with GCS JSON key inside secret"
                                        },
                                        "secretName": {
                                            "type": "string",
                                            "default": "",
                                            "$id": "#/properties/opensearch/properties/snapshots/properties/s3/properties/gcs/properties/secretName",
                                            "title": "The opensearch.snapshots.s3.gcs.secretName schema",
                                            "description": "The name of pre-created secret with JSON key to GCS bucket"
                                        }
                                    },
                                    "$id": "#/properties/opensearch/properties/snapshots/properties/s3/properties/gcs",
                                    "title": "The opensearch.snapshots.s3.gcs schema",
                                    "description": "opensearch.snapshots.s3.gcs parameters"
                                },
                                "keyId": {
                                    "type": "string",
                                    "default": "",
                                    "$id": "#/properties/opensearch/properties/snapshots/properties/s3/properties/keyId",
                                    "title": "The opensearch.snapshots.s3.keyId schema",
                                    "description": "The key ID for the S3 storage"
                                },
                                "keySecret": {
                                    "type": "string",
                                    "default": "",
                                    "$id": "#/properties/opensearch/properties/snapshots/properties/s3/properties/keySecret",
                                    "title": "The opensearch.snapshots.s3.keySecret schema",
                                    "description": "The key secret for the S3 storage"
                                },
                                "pathStyleAccess": {
                                    "type": "boolean",
                                    "default": false,
                                    "$id": "#/properties/opensearch/properties/snapshots/properties/s3/properties/pathStyleAccess",
                                    "title": "The opensearch.snapshots.s3.pathStyleAccess schema",
                                    "description": "Whether path style access to S3 storage is to be enabled"
                                },
                                "region": {
                                    "type": "string",
                                    "default": "",
                                    "$id": "#/properties/opensearch/properties/snapshots/properties/s3/properties/region",
                                    "title": "The opensearch.snapshots.s3.region schema",
                                    "description": "The region in the S3 storage"
                                },
                                "url": {
                                    "type": "string",
                                    "default": "",
                                    "$id": "#/properties/opensearch/properties/snapshots/properties/s3/properties/url",
                                    "title": "The opensearch.snapshots.s3.url schema",
                                    "description": "The URL to the S3 storage"
                                }
                            },
                            "$id": "#/properties/opensearch/properties/snapshots/properties/s3",
                            "title": "The opensearch.snapshots.s3 schema",
                            "description": "opensearch.snapshots.s3 parameters"
                        },
                        "size": {
                            "type": "string",
                            "default": "5Gi",
                            "$id": "#/properties/opensearch/properties/snapshots/properties/size",
                            "title": "The opensearch.snapshots.size schema",
                            "description": "The size of persistent volume to store snapshots"
                        },
                        "storageClass": {
                            "type": "string",
                            "default": "",
                            "$id": "#/properties/opensearch/properties/snapshots/properties/storageClass",
                            "title": "The opensearch.snapshots.storageClass schema",
                            "description": "The name of shared storage class to store snapshots"
                        }
                    },
                    "$id": "#/properties/opensearch/properties/snapshots",
                    "title": "The opensearch.snapshots schema",
                    "description": "opensearch.snapshots parameters"
                },
                "sslKeyPassphrase": {
                    "type": "object",
                    "properties": {
                        "enabled": {
                            "type": "boolean",
                            "default": false,
                            "$id": "#/properties/opensearch/properties/sslKeyPassphrase/properties/enabled",
                            "title": "The opensearch.sslKeyPassphrase.enabled schema",
                            "description": "Whether OpenSearch SSL key passphrase is required"
                        },
                        "passPhrase": {
                            "type": "string",
                            "default": "",
                            "$id": "#/properties/opensearch/properties/sslKeyPassphrase/properties/passPhrase",
                            "title": "The opensearch.sslKeyPassphrase.passPhrase schema",
                            "description": "The SSL key passphrase for OpenSearch"
                        }
                    },
                    "$id": "#/properties/opensearch/properties/sslKeyPassphrase",
                    "title": "The opensearch.sslKeyPassphrase schema",
                    "description": "opensearch.sslKeyPassphrase parameters"
                },
                "sysctl": {
                    "type": "object",
                    "properties": {
                        "enabled": {
                            "type": "boolean",
                            "default": false,
                            "$id": "#/properties/opensearch/properties/sysctl/properties/enabled",
                            "title": "The opensearch.sysctl.enabled schema",
                            "description": "Whether the `initContainer` parameter to set `sysctl` to `vm"
                        }
                    },
                    "$id": "#/properties/opensearch/properties/sysctl",
                    "title": "The opensearch.sysctl schema",
                    "description": "opensearch.sysctl parameters"
                },
                "tls": {
                    "type": "object",
                    "properties": {
                        "admin": {
                            "type": "object",
                            "properties": {
                                "certificates": {
                                    "type": "object",
                                    "properties": {
                                        "ca": {
                                            "type": "string",
                                            "default": "",
                                            "$id": "#/properties/opensearch/properties/tls/properties/admin/properties/certificates/properties/ca",
                                            "title": "The opensearch.tls.admin.certificates.ca schema",
                                            "description": "The root CA certificate in BASE64 format"
                                        },
                                        "crt": {
                                            "type": "string",
                                            "default": "",
                                            "$id": "#/properties/opensearch/properties/tls/properties/admin/properties/certificates/properties/crt",
                                            "title": "The opensearch.tls.admin.certificates.crt schema",
                                            "description": "The certificate in BASE64 format"
                                        },
                                        "key": {
                                            "type": "string",
                                            "default": "",
                                            "$id": "#/properties/opensearch/properties/tls/properties/admin/properties/certificates/properties/key",
                                            "title": "The opensearch.tls.admin.certificates.key schema",
                                            "description": "The private key in BASE64 format"
                                        }
                                    },
                                    "$id": "#/properties/opensearch/properties/tls/properties/admin/properties/certificates",
                                    "title": "The opensearch.tls.admin.certificates schema",
                                    "description": "opensearch.tls.admin.certificates parameters"
                                },
                                "existingCertSecret": {
                                    "type": "string",
                                    "default": "",
                                    "$id": "#/properties/opensearch/properties/tls/properties/admin/properties/existingCertSecret",
                                    "title": "The opensearch.tls.admin.existingCertSecret schema",
                                    "description": "The name of the secret that contains admin users' OpenSearch certificates"
                                },
                                "existingCertSecretCertSubPath": {
                                    "type": "string",
                                    "default": "tls.crt",
                                    "$id": "#/properties/opensearch/properties/tls/properties/admin/properties/existingCertSecretCertSubPath",
                                    "title": "The opensearch.tls.admin.existingCertSecretCertSubPath schema",
                                    "description": "The sub-path of `certificate` in the OpenSearch admin certificates' secret"
                                },
                                "existingCertSecretKeySubPath": {
                                    "type": "string",
                                    "default": "tls.key",
                                    "$id": "#/properties/opensearch/properties/tls/properties/admin/properties/existingCertSecretKeySubPath",
                                    "title": "The opensearch.tls.admin.existingCertSecretKeySubPath schema",
                                    "description": "The sub-path of `key` in the OpenSearch admin certificates' secret"
                                },
                                "existingCertSecretRootCASubPath": {
                                    "type": "string",
                                    "default": "ca.crt",
                                    "$id": "#/properties/opensearch/properties/tls/properties/admin/properties/existingCertSecretRootCASubPath",
                                    "title": "The opensearch.tls.admin.existingCertSecretRootCASubPath schema",
                                    "description": "The sub-path of `root ca` in the OpenSearch admin certificates' secret"
                                }
                            },
                            "$id": "#/properties/opensearch/properties/tls/properties/admin",
                            "title": "The opensearch.tls.admin schema",
                            "description": "opensearch.tls.admin parameters"
                        },
                        "cipherSuites": {
                            "type": "array",
                            "default": [],
                            "$id": "#/properties/opensearch/properties/tls/properties/cipherSuites",
                            "title": "The opensearch.tls.cipherSuites schema",
                            "description": "The list of cipher suites that are used to negotiate the security settings for a network connection using a TLS or SSL network protocol"
                        },
                        "enabled": {
                            "type": "boolean",
                            "default": true,
                            "$id": "#/properties/opensearch/properties/tls/properties/enabled",
                            "title": "The opensearch.tls.enabled schema",
                            "description": "Whether TLS is to be enabled for REST layer of OpenSearch"
                        },
                        "generateCerts": {
                            "type": "object",
                            "properties": {
                                "enabled": {
                                    "type": "boolean",
                                    "default": true,
                                    "$id": "#/properties/opensearch/properties/tls/properties/generateCerts/properties/enabled",
                                    "title": "The opensearch.tls.generateCerts.enabled schema",
                                    "description": "Whether OpenSearch certificates are to be generated"
                                }
                            },
                            "$id": "#/properties/opensearch/properties/tls/properties/generateCerts",
                            "title": "The opensearch.tls.generateCerts schema",
                            "description": "opensearch.tls.generateCerts parameters"
                        },
                        "rest": {
                            "type": "object",
                            "properties": {
                                "certificates": {
                                    "type": "object",
                                    "properties": {
                                        "ca": {
                                            "type": "string",
                                            "default": "",
                                            "$id": "#/properties/opensearch/properties/tls/properties/rest/properties/certificates/properties/ca",
                                            "title": "The opensearch.tls.rest.certificates.ca schema",
                                            "description": "The root CA certificate in BASE64 format"
                                        },
                                        "crt": {
                                            "type": "string",
                                            "default": "",
                                            "$id": "#/properties/opensearch/properties/tls/properties/rest/properties/certificates/properties/crt",
                                            "title": "The opensearch.tls.rest.certificates.crt schema",
                                            "description": "The certificate in BASE64 format"
                                        },
                                        "key": {
                                            "type": "string",
                                            "default": "",
                                            "$id": "#/properties/opensearch/properties/tls/properties/rest/properties/certificates/properties/key",
                                            "title": "The opensearch.tls.rest.certificates.key schema",
                                            "description": "The private key in BASE64 format"
                                        }
                                    },
                                    "$id": "#/properties/opensearch/properties/tls/properties/rest/properties/certificates",
                                    "title": "The opensearch.tls.rest.certificates schema",
                                    "description": "opensearch.tls.rest.certificates parameters"
                                },
                                "existingCertSecret": {
                                    "type": "string",
                                    "default": "",
                                    "$id": "#/properties/opensearch/properties/tls/properties/rest/properties/existingCertSecret",
                                    "title": "The opensearch.tls.rest.existingCertSecret schema",
                                    "description": "The name of the secret that contains the OpenSearch REST certificates"
                                },
                                "existingCertSecretCertSubPath": {
                                    "type": "string",
                                    "default": "tls.crt",
                                    "$id": "#/properties/opensearch/properties/tls/properties/rest/properties/existingCertSecretCertSubPath",
                                    "title": "The opensearch.tls.rest.existingCertSecretCertSubPath schema",
                                    "description": "The sub-path of `certificate` in the OpenSearch REST certificates' secret"
                                },
                                "existingCertSecretKeySubPath": {
                                    "type": "string",
                                    "default": "tls.key",
                                    "$id": "#/properties/opensearch/properties/tls/properties/rest/properties/existingCertSecretKeySubPath",
                                    "title": "The opensearch.tls.rest.existingCertSecretKeySubPath schema",
                                    "description": "The sub-path of `key` in the OpenSearch REST certificates' secret"
                                },
                                "existingCertSecretRootCASubPath": {
                                    "type": "string",
                                    "default": "ca.crt",
                                    "$id": "#/properties/opensearch/properties/tls/properties/rest/properties/existingCertSecretRootCASubPath",
                                    "title": "The opensearch.tls.rest.existingCertSecretRootCASubPath schema",
                                    "description": "The sub-path of `root ca` in the OpenSearch REST certificates' secret"
                                }
                            },
                            "$id": "#/properties/opensearch/properties/tls/properties/rest",
                            "title": "The opensearch.tls.rest schema",
                            "description": "opensearch.tls.rest parameters"
                        },
                        "subjectAlternativeName": {
                            "type": "object",
                            "properties": {
                                "additionalDnsNames": {
                                    "type": "array",
                                    "default": [],
                                    "$id": "#/properties/opensearch/properties/tls/properties/subjectAlternativeName/properties/additionalDnsNames",
                                    "title": "The opensearch.tls.subjectAlternativeName.additionalDnsNames schema",
                                    "description": "The list of additional DNS names to be added to the `Subject Alternative Name` field of the REST TLS certificate for OpenSearch"
                                },
                                "additionalIpAddresses": {
                                    "type": "array",
                                    "default": [],
                                    "$id": "#/properties/opensearch/properties/tls/properties/subjectAlternativeName/properties/additionalIpAddresses",
                                    "title": "The opensearch.tls.subjectAlternativeName.additionalIpAddresses schema",
                                    "description": "The list of additional IP addresses to be added to the `Subject Alternative Name` field of the REST TLS certificate for OpenSearch"
                                }
                            },
                            "$id": "#/properties/opensearch/properties/tls/properties/subjectAlternativeName",
                            "title": "The opensearch.tls.subjectAlternativeName schema",
                            "description": "opensearch.tls.subjectAlternativeName parameters"
                        },
                        "transport": {
                            "type": "object",
                            "properties": {
                                "certificates": {
                                    "type": "object",
                                    "properties": {
                                        "ca": {
                                            "type": "string",
                                            "default": "",
                                            "$id": "#/properties/opensearch/properties/tls/properties/transport/properties/certificates/properties/ca",
                                            "title": "The opensearch.tls.transport.certificates.ca schema",
                                            "description": "The root CA certificate in BASE64 format"
                                        },
                                        "crt": {
                                            "type": "string",
                                            "default": "",
                                            "$id": "#/properties/opensearch/properties/tls/properties/transport/properties/certificates/properties/crt",
                                            "title": "The opensearch.tls.transport.certificates.crt schema",
                                            "description": "The certificate in BASE64 format"
                                        },
                                        "key": {
                                            "type": "string",
                                            "default": "",
                                            "$id": "#/properties/opensearch/properties/tls/properties/transport/properties/certificates/properties/key",
                                            "title": "The opensearch.tls.transport.certificates.key schema",
                                            "description": "The private key in BASE64 format"
                                        }
                                    },
                                    "$id": "#/properties/opensearch/properties/tls/properties/transport/properties/certificates",
                                    "title": "The opensearch.tls.transport.certificates schema",
                                    "description": "opensearch.tls.transport.certificates parameters"
                                },
                                "existingCertSecret": {
                                    "type": "string",
                                    "default": "",
                                    "$id": "#/properties/opensearch/properties/tls/properties/transport/properties/existingCertSecret",
                                    "title": "The opensearch.tls.transport.existingCertSecret schema",
                                    "description": "The name of the secret that contains the transport certificates"
                                },
                                "existingCertSecretCertSubPath": {
                                    "type": "string",
                                    "default": "tls.crt",
                                    "$id": "#/properties/opensearch/properties/tls/properties/transport/properties/existingCertSecretCertSubPath",
                                    "title": "The opensearch.tls.transport.existingCertSecretCertSubPath schema",
                                    "description": "The sub-path of `certificate` in the OpenSearch transport certificates' secret"
                                },
                                "existingCertSecretKeySubPath": {
                                    "type": "string",
                                    "default": "tls.key",
                                    "$id": "#/properties/opensearch/properties/tls/properties/transport/properties/existingCertSecretKeySubPath",
                                    "title": "The opensearch.tls.transport.existingCertSecretKeySubPath schema",
                                    "description": "The sub-path of `key` in the OpenSearch transport certificates' secret"
                                },
                                "existingCertSecretRootCASubPath": {
                                    "type": "string",
                                    "default": "ca.crt",
                                    "$id": "#/properties/opensearch/properties/tls/properties/transport/properties/existingCertSecretRootCASubPath",
                                    "title": "The opensearch.tls.transport.existingCertSecretRootCASubPath schema",
                                    "description": "The sub-path of `root ca` in the OpenSearch transport certificates' secret"
                                }
                            },
                            "$id": "#/properties/opensearch/properties/tls/properties/transport",
                            "title": "The opensearch.tls.transport schema",
                            "description": "opensearch.tls.transport parameters"
                        }
                    },
                    "$id": "#/properties/opensearch/properties/tls",
                    "title": "The opensearch.tls schema",
                    "description": "opensearch.tls parameters"
                },
                "tlsInit": {
                    "type": "object",
                    "properties": {
                        "resources": {
                            "type": "object",
                            "properties": {
                                "limits": {
                                    "type": "object",
                                    "properties": {
                                        "cpu": {
                                            "default": "100m",
                                            "$id": "#/properties/opensearch/properties/tlsInit/properties/resources/properties/limits/properties/cpu",
                                            "title": "The opensearch.tlsInit.resources.limits.cpu schema",
                                            "description": "The maximum number of CPUs the job for TLS initialization should use",
                                            "internal": true,
                                            "envSpecific": true,
                                            "comment": "don't use type field, because it breaks backward compatibility"
                                        },
                                        "memory": {
                                            "type": "string",
                                            "default": "128Mi",
                                            "$id": "#/properties/opensearch/properties/tlsInit/properties/resources/properties/limits/properties/memory",
                                            "title": "The opensearch.tlsInit.resources.limits.memory schema",
                                            "description": "The maximum amount of memory the job for TLS initialization should use",
                                            "internal": true,
                                            "envSpecific": true
                                        }
                                    },
                                    "$id": "#/properties/opensearch/properties/tlsInit/properties/resources/properties/limits",
                                    "title": "The opensearch.tlsInit.resources.limits schema",
                                    "description": "opensearch.tlsInit.resources.limits parameters"
                                },
                                "requests": {
                                    "type": "object",
                                    "properties": {
                                        "cpu": {
                                            "default": "25m",
                                            "$id": "#/properties/opensearch/properties/tlsInit/properties/resources/properties/requests/properties/cpu",
                                            "title": "The opensearch.tlsInit.resources.requests.cpu schema",
                                            "description": "The minimum number of CPUs the job for TLS initialization should use",
                                            "internal": true,
                                            "envSpecific": true,
                                            "comment": "don't use type field, because it breaks backward compatibility"
                                        },
                                        "memory": {
                                            "type": "string",
                                            "default": "128Mi",
                                            "$id": "#/properties/opensearch/properties/tlsInit/properties/resources/properties/requests/properties/memory",
                                            "title": "The opensearch.tlsInit.resources.requests.memory schema",
                                            "description": "The minimum amount of memory the job for TLS initialization should use",
                                            "internal": true,
                                            "envSpecific": true
                                        }
                                    },
                                    "$id": "#/properties/opensearch/properties/tlsInit/properties/resources/properties/requests",
                                    "title": "The opensearch.tlsInit.resources.requests schema",
                                    "description": "opensearch.tlsInit.resources.requests parameters"
                                }
                            },
                            "$id": "#/properties/opensearch/properties/tlsInit/properties/resources",
                            "title": "The opensearch.tlsInit.resources schema",
                            "description": "opensearch.tlsInit.resources parameters"
                        }
                    },
                    "$id": "#/properties/opensearch/properties/tlsInit",
                    "title": "The opensearch.tlsInit schema",
                    "description": "opensearch.tlsInit parameters"
                },
                "transportKeyPassphrase": {
                    "type": "object",
                    "properties": {
                        "enabled": {
                            "type": "boolean",
                            "default": false,
                            "$id": "#/properties/opensearch/properties/transportKeyPassphrase/properties/enabled",
                            "title": "The opensearch.transportKeyPassphrase.enabled schema",
                            "description": "Whether OpenSearch transport key passphrase is required"
                        },
                        "passPhrase": {
                            "type": "string",
                            "default": "",
                            "$id": "#/properties/opensearch/properties/transportKeyPassphrase/properties/passPhrase",
                            "title": "The opensearch.transportKeyPassphrase.passPhrase schema",
                            "description": "The transport key passphrase for OpenSearch"
                        }
                    },
                    "$id": "#/properties/opensearch/properties/transportKeyPassphrase",
                    "title": "The opensearch.transportKeyPassphrase schema",
                    "description": "opensearch.transportKeyPassphrase parameters"
                }
            },
            "$id": "#/properties/opensearch",
            "title": "The opensearch schema",
            "description": "opensearch parameters"
        },
        "operator": {
            "type": "object",
            "properties": {
                "affinity": {
                    "type": "object",
                    "default": {},
                    "$id": "#/properties/operator/properties/affinity",
                    "title": "The operator.affinity schema",
                    "description": "The affinity scheduling rules in the `JSON` format"
                },
                "customLabels": {
                    "type": "object",
                    "default": {},
                    "$id": "#/properties/operator/properties/customLabels",
                    "title": "The operator.customLabels schema",
                    "description": "The custom labels for the OpenSearch Service Operator pod"
                },
                "dockerImage": {
                    "type": "string",
                    "default": "artifactorycn.netcracker.com:17008/product/prod.platform.elasticstack_opensearch-service:master_latest",
                    "$id": "#/properties/operator/properties/dockerImage",
                    "title": "The operator.dockerImage schema",
                    "description": "The docker image of OpenSearch Service Operator"
                },
                "priorityClassName": {
                    "type": "string",
                    "default": "",
                    "$id": "#/properties/operator/properties/priorityClassName",
                    "title": "The operator.priorityClassName schema",
                    "description": "The priority class to be used by the operator pod"
                },
                "reconcilePeriod": {
                    "type": "integer",
                    "default": 60,
                    "$id": "#/properties/operator/properties/reconcilePeriod",
                    "title": "The operator.reconcilePeriod schema",
                    "description": "The maximum delay in seconds before the next reconciliation call"
                },
                "replicas": {
                    "type": "integer",
                    "default": 1,
                    "$id": "#/properties/operator/properties/replicas",
                    "title": "The operator.replicas schema",
                    "description": "The number of OpenSearch Service Operator pods"
                },
                "resources": {
                    "type": "object",
                    "properties": {
                        "limits": {
                            "type": "object",
                            "properties": {
                                "cpu": {
                                    "default": "100m",
                                    "$id": "#/properties/operator/properties/resources/properties/limits/properties/cpu",
                                    "title": "The operator.resources.limits.cpu schema",
                                    "description": "The maximum number of CPUs the operator container should use",
                                    "internal": true,
                                    "envSpecific": true,
                                    "comment": "don't use type field, because it breaks backward compatibility"
                                },
                                "memory": {
                                    "type": "string",
                                    "default": "128Mi",
                                    "$id": "#/properties/operator/properties/resources/properties/limits/properties/memory",
                                    "title": "The operator.resources.limits.memory schema",
                                    "description": "The maximum amount of memory the operator container should use",
                                    "internal": true,
                                    "envSpecific": true
                                }
                            },
                            "$id": "#/properties/operator/properties/resources/properties/limits",
                            "title": "The operator.resources.limits schema",
                            "description": "operator.resources.limits parameters"
                        },
                        "requests": {
                            "type": "object",
                            "properties": {
                                "cpu": {
                                    "default": "25m",
                                    "$id": "#/properties/operator/properties/resources/properties/requests/properties/cpu",
                                    "title": "The operator.resources.requests.cpu schema",
                                    "description": "The minimum number of CPUs the operator container should use",
                                    "internal": true,
                                    "envSpecific": true,
                                    "comment": "don't use type field, because it breaks backward compatibility"
                                },
                                "memory": {
                                    "type": "string",
                                    "default": "128Mi",
                                    "$id": "#/properties/operator/properties/resources/properties/requests/properties/memory",
                                    "title": "The operator.resources.requests.memory schema",
                                    "description": "The minimum amount of memory the operator container should use",
                                    "internal": true,
                                    "envSpecific": true
                                }
                            },
                            "$id": "#/properties/operator/properties/resources/properties/requests",
                            "title": "The operator.resources.requests schema",
                            "description": "operator.resources.requests parameters"
                        }
                    },
                    "$id": "#/properties/operator/properties/resources",
                    "title": "The operator.resources schema",
                    "description": "operator.resources parameters"
                },
                "securityContext": {
                    "type": "object",
                    "default": {},
                    "$id": "#/properties/operator/properties/securityContext",
                    "title": "The operator.securityContext schema",
                    "description": "The pod-level security attributes and common container settings for the OpenSearch Service operator pod"
                },
                "tolerations": {
                    "type": "array",
                    "default": [],
                    "$id": "#/properties/operator/properties/tolerations",
                    "title": "The operator.tolerations schema",
                    "description": "The list of toleration policies for OpenSearch Service Operator pods"
                }
            },
            "$id": "#/properties/operator",
            "title": "The operator schema",
            "description": "operator parameters"
        },
        "podScheduler": {
            "type": "object",
            "properties": {
                "affinity": {
                    "type": "object",
                    "default": {},
                    "$id": "#/properties/podScheduler/properties/affinity",
                    "title": "The podScheduler.affinity schema",
                    "description": "The affinity scheduling rules in `JSON` format"
                },
                "customLabels": {
                    "type": "object",
                    "default": {},
                    "$id": "#/properties/podScheduler/properties/customLabels",
                    "title": "The podScheduler.customLabels schema",
                    "description": "The custom labels for the OpenSearch scheduler pod"
                },
                "dockerImage": {
                    "type": "string",
                    "default": "artifactorycn.netcracker.com:17014/product/prod.platform.streaming_docker-kubectl:0.0.2_20230324-083045",
                    "$id": "#/properties/podScheduler/properties/dockerImage",
                    "title": "The podScheduler.dockerImage schema",
                    "description": "The docker image for Pod Scheduler"
                },
                "enabled": {
                    "type": "boolean",
                    "default": true,
                    "$id": "#/properties/podScheduler/properties/enabled",
                    "title": "The podScheduler.enabled schema",
                    "description": "Whether custom Kubernetes pod scheduler pod is to be deployed to assign OpenSearch pods to nodes with `hostPath` persistent volumes"
                },
                "nodeSelector": {
                    "type": "object",
                    "default": {},
                    "$id": "#/properties/podScheduler/properties/nodeSelector",
                    "title": "The podScheduler.nodeSelector schema",
                    "description": "The selector that defines the nodes where the Pod Scheduler pods are to be scheduled on"
                },
                "priorityClassName": {
                    "type": "string",
                    "default": "",
                    "$id": "#/properties/podScheduler/properties/priorityClassName",
                    "title": "The podScheduler.priorityClassName schema",
                    "description": "The priority class to be used by the OpenSearch pod scheduler"
                },
                "resources": {
                    "type": "object",
                    "properties": {
                        "limits": {
                            "type": "object",
                            "properties": {
                                "cpu": {
                                    "default": "50m",
                                    "$id": "#/properties/podScheduler/properties/resources/properties/limits/properties/cpu",
                                    "title": "The podScheduler.resources.limits.cpu schema",
                                    "description": "The maximum number of CPUs the Pod Scheduler container should use",
                                    "internal": true,
                                    "envSpecific": true,
                                    "comment": "don't use type field, because it breaks backward compatibility"
                                },
                                "memory": {
                                    "type": "string",
                                    "default": "128Mi",
                                    "$id": "#/properties/podScheduler/properties/resources/properties/limits/properties/memory",
                                    "title": "The podScheduler.resources.limits.memory schema",
                                    "description": "The maximum number of memory the Pod Scheduler container should use",
                                    "internal": true,
                                    "envSpecific": true
                                }
                            },
                            "$id": "#/properties/podScheduler/properties/resources/properties/limits",
                            "title": "The podScheduler.resources.limits schema",
                            "description": "podScheduler.resources.limits parameters"
                        },
                        "requests": {
                            "type": "object",
                            "properties": {
                                "cpu": {
                                    "default": "15m",
                                    "$id": "#/properties/podScheduler/properties/resources/properties/requests/properties/cpu",
                                    "title": "The podScheduler.resources.requests.cpu schema",
                                    "description": "The minimum number of CPUs the Pod Scheduler container should use",
                                    "internal": true,
                                    "envSpecific": true,
                                    "comment": "don't use type field, because it breaks backward compatibility"
                                },
                                "memory": {
                                    "type": "string",
                                    "default": "128Mi",
                                    "$id": "#/properties/podScheduler/properties/resources/properties/requests/properties/memory",
                                    "title": "The podScheduler.resources.requests.memory schema",
                                    "description": "The minimum number of memory the Pod Scheduler container should use",
                                    "internal": true,
                                    "envSpecific": true
                                }
                            },
                            "$id": "#/properties/podScheduler/properties/resources/properties/requests",
                            "title": "The podScheduler.resources.requests schema",
                            "description": "podScheduler.resources.requests parameters"
                        }
                    },
                    "$id": "#/properties/podScheduler/properties/resources",
                    "title": "The podScheduler.resources schema",
                    "description": "podScheduler.resources parameters"
                },
                "securityContext": {
                    "type": "object",
                    "default": {},
                    "$id": "#/properties/podScheduler/properties/securityContext",
                    "title": "The podScheduler.securityContext schema",
                    "description": "The pod-level security attributes and common container settings for the Pod Scheduler pods"
                }
            },
            "$id": "#/properties/podScheduler",
            "title": "The podScheduler schema",
            "description": "podScheduler parameters"
        },
        "statusProvisioner": {
            "type": "object",
            "properties": {
                "crProcessingTimeout": {
                    "type": "integer",
                    "default": 600,
                    "$id": "#/properties/statusProvisioner/properties/crProcessingTimeout",
                    "title": "The statusProvisioner.crProcessingTimeout schema",
                    "description": "The timeout in seconds that the job waits for each of the monitored custom resources to have `successful` or `failed` status"
                },
                "customLabels": {
                    "type": "object",
                    "default": {},
                    "$id": "#/properties/statusProvisioner/properties/customLabels",
                    "title": "The statusProvisioner.customLabels schema",
                    "description": "The custom labels for the Status Provisioner pod"
                },
                "dockerImage": {
                    "type": "string",
                    "default": "artifactorycn.netcracker.com:17008/product/prod.platform.streaming_deployment-status-provisioner:master_latest",
                    "$id": "#/properties/statusProvisioner/properties/dockerImage",
                    "title": "The statusProvisioner.dockerImage schema",
                    "description": "The image for Deployment Status Provisioner pod"
                },
                "enabled": {
                    "type": "boolean",
                    "default": true,
                    "$id": "#/properties/statusProvisioner/properties/enabled",
                    "title": "The statusProvisioner.enabled schema",
                    "description": "This parameter enables the Status Provisioner"
                },
                "integrationTestsTimeout": {
                    "type": "integer",
                    "default": 300,
                    "$id": "#/properties/statusProvisioner/properties/integrationTestsTimeout",
                    "title": "The statusProvisioner.integrationTestsTimeout schema",
                    "description": "The timeout in seconds that the job waits for the integration tests to complete"
                },
                "lifetimeAfterCompletion": {
                    "type": "integer",
                    "default": 600,
                    "$id": "#/properties/statusProvisioner/properties/lifetimeAfterCompletion",
                    "title": "The statusProvisioner.lifetimeAfterCompletion schema",
                    "description": "The number of seconds that the job remains alive after its completion"
                },
                "podReadinessTimeout": {
                    "type": "integer",
                    "default": 800,
                    "$id": "#/properties/statusProvisioner/properties/podReadinessTimeout",
                    "title": "The statusProvisioner.podReadinessTimeout schema",
                    "description": "The timeout in seconds that the job waits for the monitored resources to be ready or completed"
                },
                "resources": {
                    "type": "object",
                    "properties": {
                        "limits": {
                            "type": "object",
                            "properties": {
                                "cpu": {
                                    "default": "100m",
                                    "$id": "#/properties/statusProvisioner/properties/resources/properties/limits/properties/cpu",
                                    "title": "The statusProvisioner.resources.limits.cpu schema",
                                    "description": "The maximum number of CPUs the container should use",
                                    "internal": true,
                                    "envSpecific": true,
                                    "comment": "don't use type field, because it breaks backward compatibility"
                                },
                                "memory": {
                                    "type": "string",
                                    "default": "100Mi",
                                    "$id": "#/properties/statusProvisioner/properties/resources/properties/limits/properties/memory",
                                    "title": "The statusProvisioner.resources.limits.memory schema",
                                    "description": "The maximum amount of memory the container should use",
                                    "internal": true,
                                    "envSpecific": true
                                }
                            },
                            "$id": "#/properties/statusProvisioner/properties/resources/properties/limits",
                            "title": "The statusProvisioner.resources.limits schema",
                            "description": "statusProvisioner.resources.limits parameters"
                        },
                        "requests": {
                            "type": "object",
                            "properties": {
                                "cpu": {
                                    "default": "50m",
                                    "$id": "#/properties/statusProvisioner/properties/resources/properties/requests/properties/cpu",
                                    "title": "The statusProvisioner.resources.requests.cpu schema",
                                    "description": "The minimum number of CPUs the container should use",
                                    "internal": true,
                                    "envSpecific": true,
                                    "comment": "don't use type field, because it breaks backward compatibility"
                                },
                                "memory": {
                                    "type": "string",
                                    "default": "50Mi",
                                    "$id": "#/properties/statusProvisioner/properties/resources/properties/requests/properties/memory",
                                    "title": "The statusProvisioner.resources.requests.memory schema",
                                    "description": "The minimum amount of memory the container should use",
                                    "internal": true,
                                    "envSpecific": true
                                }
                            },
                            "$id": "#/properties/statusProvisioner/properties/resources/properties/requests",
                            "title": "The statusProvisioner.resources.requests schema",
                            "description": "statusProvisioner.resources.requests parameters"
                        }
                    },
                    "$id": "#/properties/statusProvisioner/properties/resources",
                    "title": "The statusProvisioner.resources schema",
                    "description": "statusProvisioner.resources parameters"
                },
                "securityContext": {
                    "type": "object",
                    "default": {},
                    "$id": "#/properties/statusProvisioner/properties/securityContext",
                    "title": "The statusProvisioner.securityContext schema",
                    "description": "The pod-level security attributes and common container settings for the Status Provisioner pod"
                },
                "cleanupEnabled": {
                    "$id": "#/properties/statusProvisioner/properties/cleanupEnabled",
                    "type": "boolean",
                    "title": "The statusProvisioner.cleanupEnabled schema",
                    "description": "Whether forced cleanup of previous Status Provisioner job is enabled"
                }
            },
            "$id": "#/properties/statusProvisioner",
            "title": "The statusProvisioner schema",
            "description": "statusProvisioner parameters"
        },
        "STORAGE_RWO_CLASS": {
            "$id": "#/properties/STORAGE_RWO_CLASS",
            "type": "string",
            "title": "The STORAGE_RWO_CLASS schema",
            "description": "This parameter specifies the storage class for OpenSearch nodes (master, arbiter, data)"
        },
        "STORAGE_RWX_CLASS": {
            "$id": "#/properties/STORAGE_RWX_CLASS",
            "type": "string",
            "title": "The STORAGE_RWX_CLASS schema",
            "description": "This parameter specifies the name of shared storage class to store OpenSearch snapshots"
        },
        "INFRA_OPENSEARCH_REPLICAS": {
            "$id": "#/properties/INFRA_OPENSEARCH_REPLICAS",
            "type": "integer",
            "title": "The INFRA_OPENSEARCH_REPLICAS schema",
            "description": "This parameter specifies the number of OpenSearch nodes (master, arbiter, data and client)"
        },
        "DBAAS_ENABLED": {
            "$id": "#/properties/DBAAS_ENABLED",
            "type": "boolean",
            "title": "The DBAAS_ENABLED schema",
            "description": "Whether the installation of OpenSearch DBaaS adapter is to be enabled"
        },
        "API_DBAAS_ADDRESS": {
            "$id": "#/properties/API_DBAAS_ADDRESS",
            "type": "string",
            "title": "The API_DBAAS_ADDRESS schema",
            "description": "The address of DBaaS aggregator, which should register physical database"
        },
        "DBAAS_CLUSTER_DBA_CREDENTIALS_USERNAME": {
            "$id": "#/properties/DBAAS_CLUSTER_DBA_CREDENTIALS_USERNAME",
            "type": "string",
            "title": "The DBAAS_CLUSTER_DBA_CREDENTIALS_USERNAME schema",
            "description": "The name of user for DBaaS aggregator's registration API"
        },
        "DBAAS_CLUSTER_DBA_CREDENTIALS_PASSWORD": {
            "$id": "#/properties/DBAAS_CLUSTER_DBA_CREDENTIALS_PASSWORD",
            "type": "string",
            "title": "The DBAAS_CLUSTER_DBA_CREDENTIALS_PASSWORD schema",
            "description": "The password of user for DBaaS aggregator's registration API"
        },
        "INFRA_OPENSEARCH_USERNAME": {
            "$id": "#/properties/INFRA_OPENSEARCH_USERNAME",
            "type": "string",
            "title": "The INFRA_OPENSEARCH_USERNAME schema",
            "description": "The username of the OpenSearch user with `admin` privileges"
        },
        "INFRA_OPENSEARCH_PASSWORD": {
            "$id": "#/properties/INFRA_OPENSEARCH_PASSWORD",
            "type": "string",
            "title": "The INFRA_OPENSEARCH_PASSWORD schema",
            "description": "The password of the OpenSearch user with `admin` privileges"
        },
        "MONITORING_ENABLED": {
            "$id": "#/properties/MONITORING_ENABLED",
            "type": "boolean",
            "title": "The MONITORING_ENABLED schema",
            "description": "Specifies whether OpenSearch Monitoring component is to be deployed or not"
        },
        "PRODUCTION_MODE": {
            "$id": "#/properties/PRODUCTION_MODE",
            "type": "boolean",
            "title": "The PRODUCTION_MODE schema",
            "description": "Whether OpenSearch client ingress is to be enabled"
        },
        "SERVER_HOSTNAME": {
            "$id": "#/properties/SERVER_HOSTNAME",
            "type": "string",
            "title": "The SERVER_HOSTNAME schema",
            "description": "This parameter specifies OpenSearch client ingress host"
        },
        "INFRA_OPENSEARCH_FS_GROUP": {
            "$id": "#/properties/INFRA_OPENSEARCH_FS_GROUP",
            "type": "string",
            "title": "The INFRA_OPENSEARCH_FS_GROUP schema",
            "description": "This parameter specifies fs group for OpenSearch curator"
        }
    },
    "title": "The opensearch-service schema"
}