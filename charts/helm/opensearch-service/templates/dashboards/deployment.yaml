{{- if  not .Values.global.externalOpensearch.enabled }}
{{- if .Values.dashboards.enabled }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ template "opensearch.fullname" . }}-dashboards
  labels:
{{ include "opensearch.labels.standard" . | indent 4 }}
    role: dashboards
    name: {{ template "opensearch.fullname" . }}-dashboards
    {{- include "opensearch-service.defaultLabels" . | nindent 4 }}
    app.kubernetes.io/name: {{ template "opensearch.fullname" . }}-dashboards
    app.kubernetes.io/instance: {{ cat (printf "%s-dashboards"  (include "opensearch.fullname" .)) .Values.DELIMITER .Release.Namespace | nospace | trunc 63 }}
    app.kubernetes.io/technology: python
spec:
  replicas: {{ .Values.dashboards.replicas }}
  strategy:
    type: {{ .Values.dashboards.updateStrategy }}
  selector:
    matchLabels:
{{ include "opensearch.labels.selector" . | indent 6 }}
      role: dashboards
  template:
    metadata:
      labels:
        {{- with .Values.global.customLabels }}
        {{- toYaml . | nindent 8 -}}
        {{- end }}
{{ include "opensearch.labels.standard" . | indent 8 }}
        role: dashboards
        {{- range $key, $value := .Values.dashboards.labels }}
        {{ $key }}: {{ $value | quote }}
        {{- end }}
        name: {{ template "opensearch.fullname" . }}-dashboards
        app.kubernetes.io/name: {{ template "opensearch.fullname" . }}-dashboards
      annotations:
        {{- range $key, $value := .Values.dashboards.podAnnotations }}
        {{ $key }}: {{ $value | quote }}
        {{- end }}
        {{- /* This forces a restart if the configmap has changed */}}
        {{- if .Values.dashboards.config }}
        configchecksum: {{ include (print .Template.BasePath "/dashboards/configuration.yaml") . | sha256sum | trunc 63 }}
        {{- end }}
    spec:
      {{- if .Values.dashboards.priorityClassName }}
      priorityClassName: {{ .Values.dashboards.priorityClassName }}
      {{- end }}
      securityContext:
        {{- include "opensearch-service.globalPodSecurityContext" . | nindent 8 }}
        {{- with .Values.dashboards.podSecurityContext }}
          {{- toYaml . | nindent 8 -}}
        {{- end }}
      serviceAccountName: {{ template "dashboards.serviceAccountName" . }}
      {{- if .Values.dashboards.hostAliases }}
      hostAliases: {{ toYaml .Values.dashboards.hostAliases | nindent 6 }}
      {{- end }}
      volumes:
        {{- range .Values.dashboards.secretMounts }}
        - name: {{ .name }}
          secret:
            secretName: {{ .secretName }}
        {{- end }}
        {{- if .Values.dashboards.config }}
        - name: config
          configMap:
            name: {{ template "opensearch.fullname" . }}-dashboards-config
        {{- end }}
        {{- if eq (include "opensearch.tlsEnabled" .) "true" }}
        - name: opensearch-certs
          secret:
            secretName: {{ template "opensearch.rest-cert-secret-name" . }}
        {{- end }}
        {{- if .Values.dashboards.extraVolumes }}
{{ toYaml .Values.dashboards.extraVolumes | indent 8 }}
        {{- end }}
      {{- with .Values.dashboards.nodeSelector }}
      nodeSelector:
{{ toYaml . | indent 8 }}
      {{- end }}
      {{- with .Values.dashboards.affinity }}
      affinity:
{{ toYaml . | indent 8 }}
      {{- end }}
      {{- with .Values.dashboards.tolerations }}
      tolerations:
{{ toYaml . | indent 8 }}
      {{- end }}
      {{- if .Values.dashboards.imagePullSecrets }}
      imagePullSecrets:
{{ toYaml .Values.dashboards.imagePullSecrets | indent 8 }}
      {{- end }}
      initContainers:
{{ toYaml .Values.dashboards.extraInitContainers | indent 8 }}
      containers:
        - name: {{ template "opensearch.fullname" . }}-dashboards
          securityContext:
            {{- include "opensearch-service.globalContainerSecurityContext" . | nindent 12 }}
          {{- with .Values.dashboards.securityContext }}
{{ toYaml . | indent 12 }}
          {{- end }}
          image: "{{ template "dashboards.image" . }}"
          imagePullPolicy: "{{ .Values.dashboards.imagePullPolicy | default "Always" }}"
          env:
            - name: OPENSEARCH_HOSTS
              {{- if .Values.dashboards.opensearchHosts }}
              value: "{{ .Values.dashboards.opensearchHosts }}"
              {{- else }}
              value: {{ printf "%s://%s-internal:9200" (ternary "https" "http" (eq (include "opensearch.tlsEnabled" .) "true")) (include "opensearch.fullname" .) }}
              {{- end }}
            - name: SERVER_HOST
              value: "{{ .Values.dashboards.serverHost }}"
            - name: OPENSEARCH_USERNAME
              valueFrom:
                secretKeyRef:
                  name: {{ template "opensearch.fullname" . }}-secret
                  key: username
            - name: OPENSEARCH_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ template "opensearch.fullname" . }}-secret
                  key: password
            {{- if .Values.dashboards.opensearchAccount.secret }}
            {{- if .Values.dashboards.opensearchAccount.keyPassphrase.enabled }}
            - name: KEY_PASSPHRASE
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.dashboards.opensearchAccount.secret }}
                  key: keypassphrase
            # 32-character random string to be used as cookie password by security plugin
            {{- end }}
            - name: COOKIE_PASS
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.dashboards.opensearchAccount.secret }}
                  key: cookie
            {{- end }}
            {{- if .Values.dashboards.extraEnvs }}
{{ toYaml .Values.dashboards.extraEnvs | indent 12 }}
            {{- end }}
          {{- if .Values.dashboards.envFrom }}
          envFrom:
{{ toYaml .Values.dashboards.envFrom | indent 10 }}
          {{- end }}
          ports:
            - containerPort: {{ .Values.dashboards.service.port }}
              name: {{ .Values.dashboards.service.httpPortName | default "http" }}
              protocol: TCP
          resources:
{{ toYaml .Values.dashboards.resources | indent 12 }}
          volumeMounts:
            {{- range .Values.dashboards.secretMounts }}
            - name: {{ .name }}
              mountPath: {{ .path }}
              {{- if .subPath }}
              subPath: {{ .subPath }}
              {{- end }}
            {{- end }}
            {{- range $path, $config := .Values.dashboards.config }}
            - name: config
              mountPath: /usr/share/opensearch-dashboards/config/{{ $path }}
              subPath: {{ $path }}
            {{- end }}
            {{- if eq (include "opensearch.tlsEnabled" .) "true" }}
            - name: opensearch-certs
              mountPath: /usr/share/opensearch-dashboards/certs/opensearch-root-ca.pem
              subPath: {{ template "opensearch.rest-root-ca-path" . }}
            {{- end }}
            {{- if .Values.dashboards.extraVolumeMounts }}
{{ toYaml .Values.dashboards.extraVolumeMounts | indent 10 }}
            {{- end }}
        {{- if .Values.dashboards.extraContainers }}
{{ toYaml .Values.dashboards.extraContainers | indent 6 }}
        {{- end }}
{{- end }}
{{- end }}