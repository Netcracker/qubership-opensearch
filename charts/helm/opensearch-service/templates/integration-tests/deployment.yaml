{{- if .Values.integrationTests.enabled }}
kind: Deployment
apiVersion: apps/v1
metadata:
  name: {{ template "opensearch.fullname" . }}-integration-tests
spec:
  selector:
    matchLabels:
      name: {{ template "opensearch.fullname" . }}-integration-tests
  strategy:
    type: RollingUpdate
  replicas: {{ template "opensearch.replicasForSingleService" . }}
  template:
    metadata:
      labels:
{{- with .Values.global.customLabels }}
  {{- toYaml . | nindent 8 -}}
{{- end }}
{{- with .Values.integrationTests.customLabels }}
  {{- toYaml . | nindent 8 -}}
{{- end }}
        name: {{ template "opensearch.fullname" . }}-integration-tests
    spec:
      serviceAccountName: {{ template "opensearch.fullname" . }}-integration-tests
      {{- if .Values.integrationTests.affinity }}
      affinity:
      {{ .Values.integrationTests.affinity | toJson }}
      {{- end }}
      securityContext:
        {{- include "opensearch-service.globalPodSecurityContext" . | nindent 8 }}
        {{- with .Values.integrationTests.securityContext }}
          {{- toYaml . | nindent 8 -}}
        {{- end }}
      {{- if .Values.integrationTests.priorityClassName }}
      priorityClassName: {{ .Values.integrationTests.priorityClassName | quote }}
      {{- end }}
      containers:
        - name: {{ template "opensearch.fullname" . }}-integration-tests
          image: {{ template "integration-tests.image" . }}
          imagePullPolicy: Always
          ports:
            - containerPort: 8080
              protocol: TCP
          env:
            - name: OPENSEARCH_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            - name: TAGS
              value: {{ .Values.integrationTests.tags }}
            {{- if and .Values.deployDescriptor .Values.opensearchIntegrationTests}}
            - name: MONITORED_IMAGES
              value: {{ include "opensearch-service.monitoredImages" . }}
            {{- end }}
            - name: OPENSEARCH_HOST
              value: {{ (.Values.global.externalOpensearch.enabled | ternary (include "external.opensearch-host" .) (include "opensearch.fullname" .)) }}
            - name: OPENSEARCH_PORT
              value: "{{ default 9200 (.Values.global.externalOpensearch.enabled | ternary (include "external.opensearch-port" .) .Values.integrationTests.opensearchPort) }}"
            - name: OPENSEARCH_PROTOCOL
              {{ if or (eq (include "external.tlsEnabled" .) "true") (eq (include "opensearch.tlsEnabled" .) "true") }}
              value: "https"
              {{ else }}
              value: "http"
              {{ end }}
              {{ if .Values.global.externalOpensearch.enabled }}
            - name: EXTERNAL_OPENSEARCH
              value: "true"
              {{ end }}
            - name: OPENSEARCH_USERNAME
              valueFrom:
                secretKeyRef:
                  key: username
                  name: {{ template "opensearch.fullname" . }}-secret
            - name: OPENSEARCH_PASSWORD
              valueFrom:
                secretKeyRef:
                  key: password
                  name: {{ template "opensearch.fullname" . }}-secret
            - name: OPENSEARCH_MASTER_NODES_NAME
              value: {{ template "master-nodes" . }}
            - name: IDENTITY_PROVIDER_URL
              value: "{{ .Values.integrationTests.identityProviderUrl }}"
            - name: IDENTITY_PROVIDER_REGISTRATION_TOKEN
              valueFrom:
                secretKeyRef:
                  name: {{ template "opensearch.fullname" . }}-integration-tests-secret
                  key: idp-registration-token
            - name: IDENTITY_PROVIDER_USERNAME
              valueFrom:
                secretKeyRef:
                  name: {{ template "opensearch.fullname" . }}-integration-tests-secret
                  key: idp-username
            - name: IDENTITY_PROVIDER_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ template "opensearch.fullname" . }}-integration-tests-secret
                  key: idp-password
            - name: PROMETHEUS_URL
              value: "{{ .Values.integrationTests.prometheusUrl }}"
            - name: PROMETHEUS_USER
              valueFrom:
                secretKeyRef:
                  name: {{ template "opensearch.fullname" . }}-integration-tests-secret
                  key: prometheus-user
            - name: PROMETHEUS_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ template "opensearch.fullname" . }}-integration-tests-secret
                  key: prometheus-password
            {{- if and (not .Values.global.externalOpensearch.enabled) .Values.monitoring.slowQueries.enabled }}
            - name: SLOW_QUERIES_INTERVAL_MINUTES
              value: "{{ default 5 .Values.monitoring.slowQueries.processingIntervalMinutes }}"
            {{- end }}
            {{- if eq (include "dbaas.enabled" .) "true" }}
            - name: DBAAS_ADAPTER_TYPE
              value: "opensearch"
            - name: OPENSEARCH_DBAAS_ADAPTER_HOST
              value: {{ template "dbaas-adapter.name" . }}
            - name: OPENSEARCH_DBAAS_ADAPTER_PORT
              value: "{{ template "dbaas-adapter.port" . }}"
            - name: OPENSEARCH_DBAAS_ADAPTER_PROTOCOL
              value: {{ template "dbaas-adapter.protocol" . }}
            - name: OPENSEARCH_DBAAS_ADAPTER_REPOSITORY
              value: {{ .Values.dbaasAdapter.opensearchRepo | default "snapshots" }}
            - name: OPENSEARCH_DBAAS_ADAPTER_USERNAME
              valueFrom:
                secretKeyRef:
                  key: username
                  name: {{ template "dbaas-adapter.name" . }}-secret
            - name: OPENSEARCH_DBAAS_ADAPTER_PASSWORD
              valueFrom:
                secretKeyRef:
                  key: password
                  name: {{ template "dbaas-adapter.name" . }}-secret
            - name: OPENSEARCH_DBAAS_ADAPTER_API_VERSION
              value: {{ .Values.dbaasAdapter.apiVersion | quote }}
            {{- end }}
            {{- if .Values.curator.enabled }}
            - name: OPENSEARCH_CURATOR_PROTOCOL
              value: {{ eq (include "curator.tlsEnabled" .) "true" | ternary "https" "http" }}
            - name: OPENSEARCH_CURATOR_HOST
              value: {{ template "opensearch.fullname" . }}-curator
            - name: OPENSEARCH_CURATOR_PORT
              value: "{{ template "curator.port" . }}"
            - name: OPENSEARCH_CURATOR_USERNAME
              valueFrom:
                secretKeyRef:
                  key: username
                  name: {{ template "opensearch.fullname" . }}-curator-secret
            - name: OPENSEARCH_CURATOR_PASSWORD
              valueFrom:
                secretKeyRef:
                  key: password
                  name: {{ template "opensearch.fullname" . }}-curator-secret
            {{- end }}
            {{- if and .Values.opensearch.snapshots.enabled .Values.opensearch.snapshots.s3.enabled }}
            - name: S3_ENABLED
              value: {{ .Values.opensearch.snapshots.s3.enabled | quote }}
            - name: S3_URL
              value: {{ .Values.opensearch.snapshots.s3.url | quote }}
            - name: S3_BUCKET
              value: {{ .Values.opensearch.snapshots.s3.bucket | quote }}
            - name: S3_KEY_ID
              valueFrom:
                secretKeyRef:
                  name: {{ template "opensearch.fullname" . }}-s3-secret
                  key: s3-key-id
            - name: S3_KEY_SECRET
              valueFrom:
                secretKeyRef:
                  name: {{ template "opensearch.fullname" . }}-s3-secret
                  key: s3-key-secret
            {{- else -}}
            - name: S3_ENABLED
              value: {{ .Values.opensearch.snapshots.s3.enabled | quote }}
            - name: S3_URL
            - name: S3_BUCKET
            - name: S3_KEY_ID
            - name: S3_KEY_SECRET
            {{- end }}
            {{- if .Values.integrationTests.statusWritingEnabled }}
            - name: STATUS_CUSTOM_RESOURCE_GROUP
              value: apps
            - name: STATUS_CUSTOM_RESOURCE_VERSION
              value: v1
            - name: STATUS_CUSTOM_RESOURCE_PLURAL
              value: deployments
            - name: STATUS_CUSTOM_RESOURCE_NAME
              value: {{ printf "%s-integration-tests" (include "opensearch.fullname" .) }}
            - name: STATUS_CUSTOM_RESOURCE_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            - name: STATUS_WRITING_ENABLED
              value: "{{ .Values.integrationTests.statusWritingEnabled }}"
            - name: ONLY_INTEGRATION_TESTS
              value: "false"
            - name: IS_SHORT_STATUS_MESSAGE
              value: "{{ .Values.integrationTests.isShortStatusMessage }}"
            {{- end }}
            - name: RANDOM_RUN_TRIGGER
              value: {{ randAlphaNum 10 | quote }}
          resources:
            requests:
              memory: {{ default "256Mi" .Values.integrationTests.resources.requests.memory }}
              cpu: {{ default "200m" .Values.integrationTests.resources.requests.cpu }}
            limits:
              memory: {{ default "256Mi" .Values.integrationTests.resources.limits.memory }}
              cpu: {{ default "400m" .Values.integrationTests.resources.limits.cpu }}
          securityContext:
            {{- include "opensearch-service.globalContainerSecurityContext" . | nindent 12 }}
          volumeMounts:
            - name: output
              mountPath: /opt/robot/output
            {{- if eq (include "opensearch.tlsEnabled" .) "true" }}
            - mountPath: /certs/opensearch/root-ca.pem
              name: opensearch-certs
              subPath: {{ template "opensearch.rest-root-ca-path" . }}
            {{- end }}
            {{- if eq (include "curator.tlsEnabled" .) "true" }}
            - mountPath: /certs/curator/root-ca.pem
              name: curator-certs
              subPath: "ca.crt"
            {{- end }}
            {{- if eq (include "dbaas-adapter.tlsEnabled" .) "true" }}
            - mountPath: /certs/dbaas-adapter/ca.crt
              name: dbaas-adapter-certs
              subPath: "ca.crt"
            {{- end }}
          terminationMessagePath: /dev/termination-log
      volumes:
        - name: output
          emptyDir: {}
        {{- if eq (include "opensearch.tlsEnabled" .) "true" }}
        - name: opensearch-certs
          secret:
            secretName: {{ template "opensearch.rest-cert-secret-name" . }}
        {{- end }}
        {{- if eq (include "curator.tlsEnabled" .) "true" }}
        - name: curator-certs
          secret:
            secretName: {{ template "curator.certSecretName" . }}
        {{- end }}
        {{- if eq (include "dbaas-adapter.tlsEnabled" .) "true" }}
        - name: dbaas-adapter-certs
          secret:
            secretName: {{ template "dbaas-adapter.tlsSecretName" . }}
        {{- end }}
  {{- end }}
