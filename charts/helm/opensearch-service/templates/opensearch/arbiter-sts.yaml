{{- if not .Values.global.externalOpensearch.enabled }}
{{- if .Values.opensearch.arbiter.enabled }}
apiVersion: apps/v1
kind: StatefulSet
metadata:
  labels:
{{ include "opensearch.labels.standard" . | indent 4 }}
    role: master
{{- if (eq (include "pod-scheduler-enabled" .) "true") }}
    arbiter: arbiter
{{- end }}
  name: {{ template "opensearch.fullname" . }}-arbiter
  namespace: {{ .Release.Namespace }}
spec:
  replicas: {{ (include "opensearch.arbiter.replicas" .) }}
  serviceName: {{ template "opensearch.fullname" . }}-discovery
  selector:
    matchLabels:
{{ include "opensearch.labels.selector" . | indent 6 }}
      role: master
{{- if (eq (include "pod-scheduler-enabled" .) "true") }}
      arbiter: arbiter
{{- end }}
  podManagementPolicy: Parallel
  updateStrategy:
    type: {{ include "arbiter.updateStrategy" . | quote }}
  template:
    metadata:
      labels:
{{- with .Values.global.customLabels }}
  {{- toYaml . | nindent 8 -}}
{{- end }}
{{- with .Values.opensearch.arbiter.customLabels }}
  {{- toYaml . | nindent 8 -}}
{{- end }}
{{ include "opensearch.labels.standard" . | indent 8 }}
        role: master
{{- if (eq (include "pod-scheduler-enabled" .) "true") }}
        arbiter: arbiter
{{- end }}
      annotations:
        "opensearch/config-checksum": {{ include (print $.Template.BasePath "/opensearch/config-secret.yaml") . | sha256sum }}
{{- if .Values.opensearch.arbiter.podAnnotations }}
{{ toYaml .Values.opensearch.arbiter.podAnnotations | indent 8 }}
{{- end }}
    spec:
      {{- if .Values.opensearch.arbiter.priorityClassName }}
      priorityClassName: {{ .Values.opensearch.arbiter.priorityClassName | quote }}
      {{- end }}
      {{- if and .Values.podScheduler.enabled (eq (include "arbiter-nodes-volumes-enabled" .) "true") }}
      schedulerName: {{ template "opensearch.fullname" . }}-pod-scheduler
      {{- end }}
      {{- if .Values.opensearch.arbiter.imagePullSecrets }}
      imagePullSecrets:
{{ toYaml .Values.opensearch.arbiter.imagePullSecrets | indent 8 }}
      {{- end }}
      serviceAccountName: {{ template "opensearch.serviceAccountName" . }}
    {{- with .Values.opensearch.arbiter.tolerations }}
      tolerations:
{{ toYaml . | indent 8 }}
    {{- end }}
    {{- with .Values.opensearch.arbiter.nodeSelector }}
      nodeSelector:
{{ toYaml . | indent 8 }}
    {{- end }}
    {{- with .Values.opensearch.arbiter.affinity }}
      affinity:
{{ toYaml . | indent 8 }}
    {{- end }}
      securityContext:
        {{- include "opensearch-service.globalPodSecurityContext" . | nindent 8 }}
        {{- with .Values.opensearch.securityContextCustom }}
          {{- toYaml . | nindent 8 -}}
        {{- end }}
        {{- if and (ne (.Values.INFRA_OPENSEARCH_FS_GROUP | toString) "<nil>") .Values.global.cloudIntegrationEnabled }}
        fsGroup: {{ .Values.INFRA_OPENSEARCH_FS_GROUP }}
        {{- end }}
      initContainers:
{{- if .Values.opensearch.sysctl.enabled }}
        - name: init-sysctl
          image: {{ template "busybox.image" . }}
          command:
            - sysctl
            - -w
            - vm.max_map_count={{ .Values.opensearch.maxMapCount }}
          securityContext:
            privileged: true
            runAsNonRoot: false
            runAsUser: 0
{{- end }}
{{- if .Values.opensearch.fixmount.enabled }}
        - name: fixmount
        {{- if .Values.opensearch.snapshots.enabled }}
          command: [ 'sh', '-c', 'chown -R 1000:1000 /usr/share/opensearch/data && chown -R 1000:1000 /usr/share/opensearch/snapshots' ]
        {{- else }}
          command: [ 'sh', '-c', 'chown -R 1000:1000 /usr/share/opensearch/data' ]
        {{- end }}
          image: {{ template "busybox.image" . }}
          securityContext:
            runAsNonRoot: false
            runAsUser: 0
        {{- if .Values.opensearch.fixmount.securityContext }}
{{ .Values.opensearch.fixmount.securityContext | toYaml | indent 12 | trim}}
        {{- end }}
          volumeMounts:
            - mountPath: /usr/share/opensearch/data
              name: pvc
              subPath: {{ .Values.opensearch.arbiter.persistence.subPath }}
            - mountPath: /usr/share/opensearch/snapshots
              name: snapshots-repository
{{- end }}
{{- if .Values.opensearch.extraInitContainers }}
{{ toYaml .Values.opensearch.extraInitContainers| indent 8 }}
{{- end }}
{{- if .Values.opensearch.arbiter.extraInitContainers }}
{{ toYaml .Values.opensearch.arbiter.extraInitContainers| indent 8 }}
{{- end }}
      containers:
        - name: opensearch
          env:
            - name: cluster.name
              value: {{ .Values.global.clusterName }}
            - name: cluster.initial_cluster_manager_nodes
              value: {{ template "initial-master-nodes" . }}
            - name: node.roles
              value: "cluster_manager"
            - name: network.host
              value: "0.0.0.0"
            {{- if .Values.opensearch.transportKeyPassphrase.enabled }}
            - name: TRANSPORT_KEY_PASSPHRASE
              value: {{ .Values.opensearch.transportKeyPassphrase.passPhrase }}
            {{- end }}
            {{- if .Values.opensearch.transportKeyPassphrase.enabled }}
            - name: SSL_KEY_PASSPHRASE
              value: {{ .Values.opensearch.sslKeyPassphrase.passPhrase }}
            {{- end }}
            - name: node.name
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: discovery.seed_hosts
              value: {{ template "opensearch.fullname" . }}-discovery
            - name: KUBERNETES_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            - name: PROCESSORS
              valueFrom:
                resourceFieldRef:
                  resource: limits.cpu
            - name: TLS_ENABLED
              value: "{{ include "opensearch.tlsEnabled" . }}"
            - name: OPENSEARCH_JAVA_OPTS
              value: {{ .Values.opensearch.arbiter.javaOpts }}
            - name: OPENSEARCH_SECURITY_CONFIG_PATH
              value: {{ .Values.opensearch.securityConfig.path }}
            - name: OPENSEARCH_CONFIG_PATH
              value: {{ .Values.opensearch.configDirectory }}
            - name: OPENSEARCH_USERNAME
              valueFrom:
                secretKeyRef:
                  key: username
                  name: {{ template "opensearch.fullname" . }}-secret
            - name: OPENSEARCH_PASSWORD
              valueFrom:
                secretKeyRef:
                  key: password
                  name: {{ template "opensearch.fullname" . }}-secret
            - name: DISABLE_PERFORMANCE_ANALYZER_AGENT_CLI
              value: "{{ not .Values.opensearch.performanceAnalyzerEnabled }}"
            - name: ALLOW_SECURITY_INITIALIZATION
              value: "false"
{{- if .Values.opensearch.extraEnvs }}
{{ toYaml .Values.opensearch.extraEnvs | indent 12 }}
{{- end }}
          resources:
{{ toYaml .Values.opensearch.arbiter.resources | indent 12 }}
          securityContext:
            {{- include "opensearch-service.globalContainerSecurityContext" . | nindent 12 }}
          readinessProbe:
        {{- if .Values.opensearch.arbiter.readinessProbe }}
{{ toYaml .Values.opensearch.arbiter.readinessProbe | indent 12 }}
        {{- else }}
{{ include "opensearch.readiness.probe" . | indent 12 }}
        {{- end }}
    {{- with .Values.opensearch.arbiter.livenessProbe}}
          livenessProbe:
{{ toYaml . | indent 12 }}
    {{- end }}
    {{- with .Values.opensearch.arbiter.startupProbe}}
          startupProbe:
{{ toYaml . | indent 12 }}
    {{- end }}
          image: {{ template "opensearch.image" . }}
          imagePullPolicy: {{ .Values.opensearch.imagePullPolicy | default "Always" | quote }}
          ports:
            - containerPort: 9300
              name: transport
            - containerPort: 9200
              name: http
            - containerPort: 9600
              name: metrics
            - containerPort: 9650
              name: rca
          volumeMounts:
            - mountPath: /usr/share/opensearch/data
              name: pvc
              subPath: {{ .Values.opensearch.arbiter.persistence.subPath }}
            - mountPath: /usr/share/opensearch/snapshots
              name: snapshots-repository
        {{- if .Values.opensearch.config }}
            - mountPath: {{ .Values.opensearch.configDirectory }}/opensearch.yml
              name: config
              subPath: opensearch.yml
        {{- end }}
        {{- if (include "opensearch.log4jConfig" .) }}
            - mountPath: {{ .Values.opensearch.configDirectory }}/log4j2.properties
              name: config
              subPath: log4j2.properties
        {{- end }}
            - mountPath: {{ .Values.opensearch.configDirectory }}/logging.yml
              name: config
              subPath: logging.yml
            - mountPath: {{ .Values.opensearch.configDirectory }}/jvm.options
              name: config
              subPath: jvm.options
            - mountPath: {{ .Values.opensearch.configDirectory }}/transport-crt.pem
              name: transport-certs
              subPath: {{ template "opensearch.transport-cert-path" . }}
            - mountPath: {{ .Values.opensearch.configDirectory }}/transport-key.pem
              name: transport-certs
              subPath: {{ template "opensearch.transport-key-path" . }}
            - mountPath: {{ .Values.opensearch.configDirectory }}/transport-root-ca.pem
              name: transport-certs
              subPath: {{ template "opensearch.transport-root-ca-path" . }}
            {{- if eq (include "opensearch.tlsEnabled" .) "true" }}
            - mountPath: {{ .Values.opensearch.configDirectory }}/rest-crt.pem
              name: rest-certs
              subPath: {{ template "opensearch.rest-cert-path" . }}
            - mountPath: {{ .Values.opensearch.configDirectory }}/rest-key.pem
              name: rest-certs
              subPath: {{ template "opensearch.rest-key-path" . }}
            - mountPath: {{ .Values.opensearch.configDirectory }}/rest-root-ca.pem
              name: rest-certs
              subPath: {{ template "opensearch.rest-root-ca-path" . }}
            {{- end }}
            - mountPath: {{ .Values.opensearch.configDirectory }}/admin-crt.pem
              name: admin-certs
              subPath: {{ template "opensearch.admin-cert-path" . }}
            - mountPath: {{ .Values.opensearch.configDirectory }}/admin-key.pem
              name: admin-certs
              subPath: {{ template "opensearch.admin-key-path" . }}
            - mountPath: {{ .Values.opensearch.configDirectory }}/admin-root-ca.pem
              name: admin-certs
              subPath: {{ template "opensearch.admin-root-ca-path" . }}
        {{- if .Values.opensearch.securityConfig.enabled }}
        {{- if and .Values.opensearch.securityConfig.config.securityConfigSecret .Values.opensearch.securityConfig.config.data  }}
            - mountPath: {{ .Values.opensearch.securityConfig.path }}
              name: security-config
        {{- else }}
            - mountPath: {{ .Values.opensearch.securityConfig.path }}/action_groups.yml
              name: action-groups
              subPath: action_groups.yml
            - mountPath: {{ .Values.opensearch.securityConfig.path }}/config.yml
              name: security-config
              subPath: config.yml
            - mountPath: {{ .Values.opensearch.securityConfig.path }}/roles.yml
              name: roles
              subPath: roles.yml
            - mountPath: {{ .Values.opensearch.securityConfig.path }}/roles_mapping.yml
              name: role-mapping
              subPath: roles_mapping.yml
            - mountPath: {{ .Values.opensearch.securityConfig.path }}/tenants.yml
              name: tenants
              subPath: tenants.yml
        {{- end }}
        {{- end }}
        {{- if and .Values.opensearch.snapshots.s3.enabled .Values.opensearch.snapshots.s3.gcs.secretName .Values.opensearch.snapshots.s3.gcs.secretKey }}
            - name: gcs
              mountPath: /usr/share/opensearch/gcs
        {{- end }}
{{- if .Values.opensearch.extraVolumeMounts }}
{{ toYaml .Values.opensearch.extraVolumeMounts | indent 12 }}
{{- end }}
{{- if .Values.opensearch.arbiter.extraContainers }}
{{ toYaml .Values.opensearch.arbiter.extraContainers | indent 8 }}
{{- end }}
      volumes:
        - name: config
          secret:
            secretName: {{ template "opensearch.fullname" . }}-config
        - name: transport-certs
          secret:
            secretName: {{ template "opensearch.transport-cert-secret-name" . }}
        {{- if eq (include "opensearch.tlsEnabled" .) "true" }}
        - name: rest-certs
          secret:
            secretName: {{ template "opensearch.rest-cert-secret-name" . }}
        {{- end }}
        - name: admin-certs
          secret:
            secretName: {{ template "opensearch.admin-cert-secret-name" . }}
      {{- if and .Values.opensearch.securityConfig.config.securityConfigSecret .Values.opensearch.securityConfig.config.data }}
        - name: security-config
          secret:
            secretName: {{ .Values.opensearch.securityConfig.config.securityConfigSecret }}
      {{- else }}
      {{- if .Values.opensearch.securityConfig.actionGroupsSecret }}
        - name: action-groups
          secret:
            secretName: {{ .Values.opensearch.securityConfig.actionGroupsSecret }}
      {{- else }}
        - name: action-groups
          secret:
            secretName: {{ template "opensearch.fullname" . }}-security-configuration
            items:
              - key: action_groups.yml
                path: action_groups.yml
      {{- end }}
      {{- if .Values.opensearch.securityConfig.configSecret }}
        - name: security-config
          secret:
            secretName: {{ .Values.opensearch.securityConfig.configSecret }}
      {{- else }}
        - name: security-config
          secret:
            secretName: {{ template "opensearch.fullname" . }}-security-configuration
            items:
              - key: config.yml
                path: config.yml
      {{- end }}
      {{- if .Values.opensearch.securityConfig.rolesSecret }}
        - name: roles
          secret:
            secretName: {{ .Values.opensearch.securityConfig.rolesSecret }}
      {{- else }}
        - name: roles
          secret:
            secretName: {{ template "opensearch.fullname" . }}-security-configuration
            items:
              - key: roles.yml
                path: roles.yml
      {{- end }}
      {{- if .Values.opensearch.securityConfig.rolesMappingSecret }}
        - name: role-mapping
          secret:
            secretName: {{ .Values.opensearch.securityConfig.rolesMappingSecret }}
      {{- else }}
        - name: role-mapping
          secret:
            secretName: {{ template "opensearch.fullname" . }}-security-configuration
            items:
              - key: roles_mapping.yml
                path: roles_mapping.yml
      {{- end -}}
      {{- if .Values.opensearch.securityConfig.tenantsSecret }}
        - name: tenants
          secret:
            secretName: {{ .Values.opensearch.securityConfig.tenantsSecret }}
        {{- else }}
        - name: tenants
          secret:
            secretName: {{ template "opensearch.fullname" . }}-security-configuration
            items:
              - key: tenants.yml
                path: tenants.yml
      {{- end }}
      {{- end }}
      {{- if not .Values.opensearch.arbiter.persistence.enabled }}
        - name: pvc
          emptyDir: {}
      {{- else }}
      {{- if .Values.opensearch.arbiter.persistence.existingClaim }}
        - name: pvc
          persistentVolumeClaim:
            claimName: {{ .Values.opensearch.arbiter.persistence.existingClaim }}
      {{- end }}
      {{- end }}
      {{- if or (not .Values.opensearch.snapshots.enabled) .Values.opensearch.snapshots.s3.enabled }}
        - name: snapshots-repository
          emptyDir: {}
      {{- else }}
        - name: snapshots-repository
          persistentVolumeClaim:
            claimName: {{ .Values.opensearch.snapshots.persistentVolumeClaim | default (printf "pvc-%s-snapshots" (include "opensearch.fullname" .))  }}
      {{- end }}
      {{- if and .Values.opensearch.snapshots.s3.enabled .Values.opensearch.snapshots.s3.gcs.secretName .Values.opensearch.snapshots.s3.gcs.secretKey }}
        - name: gcs
          secret:
            secretName: {{ .Values.opensearch.snapshots.s3.gcs.secretName }}
            items:
              - key: {{ .Values.opensearch.snapshots.s3.gcs.secretKey }}
                path: key.json
      {{- end }}
{{- if .Values.opensearch.extraVolumes }}
{{ toYaml .Values.opensearch.extraVolumes | indent 8 }}
{{- end }}
  {{- if and .Values.opensearch.arbiter.persistence.enabled (not .Values.opensearch.arbiter.persistence.existingClaim) }}
  volumeClaimTemplates:
    - metadata:
        name: pvc
        annotations:
        {{- range $key, $value := .Values.opensearch.arbiter.persistence.annotations }}
          {{ $key }}: {{ $value }}
        {{- end }}
      spec:
        accessModes:
      {{- range .Values.opensearch.arbiter.persistence.accessModes }}
          - {{ . | quote }}
      {{- end }}
        resources:
          requests:
            storage: {{ .Values.opensearch.arbiter.persistence.size | quote }}
    {{- if (include "opensearch.arbiter.storageClassName" .) }}
    {{- if (eq "-" (include "opensearch.arbiter.storageClassName" .)) }}
        storageClassName: ""
    {{- else }}
        storageClassName: "{{ (include "opensearch.arbiter.storageClassName" .) }}"
    {{- end }}
    {{- end }}
  {{- end }}
{{- end }}
{{- end }}
