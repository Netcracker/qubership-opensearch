{{- if eq (include "opensearch.useDataNodes" .) "true" }}
apiVersion: apps/v1
kind: StatefulSet
metadata:
  labels:
{{ include "opensearch.labels.standard" . | indent 4 }}
{{ include "opensearch-service.defaultLabels" . | indent 4 }}
    name: {{ template "opensearch.fullname" . }}-data
    app.kubernetes.io/name: {{ template "opensearch.fullname" . }}-data
    app.kubernetes.io/instance: {{ cat (printf "%s-data"  (include "opensearch.fullname" .)) .Values.DELIMITER .Release.Namespace | nospace | trunc 63 }}
    app.kubernetes.io/technology: java-others
    role: data
  name: {{ template "opensearch.fullname" . }}-data
  namespace: {{ .Release.Namespace }}
spec:
  serviceName: {{ template "opensearch.fullname" . }}-data-svc
  replicas: {{ (include "opensearch.data.replicas" .) }}
  selector:
    matchLabels:
{{ include "opensearch.labels.selector" . | indent 6 }}
      role: data
  podManagementPolicy: Parallel
  updateStrategy:
    type: {{ include "data.updateStrategy" . | quote }}
  template:
    metadata:
      labels:
{{- with .Values.global.customLabels }}
  {{- toYaml . | nindent 8 -}}
{{- end }}
{{- with .Values.opensearch.data.customLabels }}
  {{- toYaml . | nindent 8 -}}
{{- end }}
{{ include "opensearch.labels.standard" . | indent 8 }}
{{ include "opensearch-service.defaultLabels" . | indent 8 }}
        name: {{ template "opensearch.fullname" . }}-data
        app.kubernetes.io/name: {{ template "opensearch.fullname" . }}-data
        app.kubernetes.io/instance: {{ cat (printf "%s-data"  (include "opensearch.fullname" .)) .Values.DELIMITER .Release.Namespace | nospace | trunc 63 }}
        app.kubernetes.io/technology: java-others
        role: data
      annotations:
        "opensearch/config-checksum": {{ include (print $.Template.BasePath "/opensearch/config-secret.yaml") . | sha256sum }}
        "opensearch/trusted-certs-checksum": {{ include (print $.Template.BasePath "/opensearch/trusted-certs-secret.yaml") . | sha256sum }}
{{- if .Values.opensearch.data.podAnnotations }}
{{ toYaml .Values.opensearch.data.podAnnotations | indent 8 }}
{{- end }}
    spec:
      {{- if .Values.opensearch.data.priorityClassName }}
      priorityClassName: {{ .Values.opensearch.data.priorityClassName | quote }}
      {{- end }}
      {{- if and .Values.podScheduler.enabled (eq (include "data-nodes-volumes-enabled" .) "true") }}
      schedulerName: {{ template "opensearch.fullname" . }}-pod-scheduler
      {{- end }}
      {{- if .Values.opensearch.data.imagePullSecrets }}
      imagePullSecrets:
{{ toYaml .Values.opensearch.data.imagePullSecrets | indent 8 }}
      {{- end }}
    {{- with .Values.opensearch.data.tolerations }}
      tolerations:
{{ toYaml . | indent 8 }}
    {{- end }}
    {{- with .Values.opensearch.data.nodeSelector }}
      nodeSelector:
{{ toYaml . | indent 8 }}
    {{- end }}
      initContainers:
{{- if .Values.opensearch.sysctl.enabled }}
        - name: init-sysctl
          image: {{ template "busybox.image" . }}
          command:
            - sysctl
            - -w
            - vm.max_map_count={{ .Values.opensearch.maxMapCount }}
          securityContext:
            privileged: true
            runAsNonRoot: false
            runAsUser: 0
{{- end }}
{{- if .Values.opensearch.fixmount.enabled }}
        - name: fixmount
        {{- if .Values.opensearch.snapshots.enabled }}
          command: [ 'sh', '-c', 'chown -R 1000:1000 /usr/share/opensearch/data && chown -R 1000:1000 /usr/share/opensearch/snapshots' ]
        {{- else }}
          command: [ 'sh', '-c', 'chown -R 1000:1000 /usr/share/opensearch/data' ]
        {{- end }}
          image: {{ template "busybox.image" . }}
          securityContext:
            runAsNonRoot: false
            runAsUser: 0
        {{- if .Values.opensearch.fixmount.securityContext }}
        {{ .Values.opensearch.fixmount.securityContext | toYaml | indent 10}}
        {{- end }}
          volumeMounts:
            - mountPath: /usr/share/opensearch/data
              name: pvc
              subPath: {{ .Values.opensearch.data.persistence.subPath }}
            - mountPath: /usr/share/opensearch/snapshots
              name: snapshots-repository
{{- end }}
{{- if .Values.opensearch.extraInitContainers }}
{{ toYaml .Values.opensearch.extraInitContainers| indent 6 }}
{{- end }}
    {{- with .Values.opensearch.data.affinity }}
      affinity:
{{ toYaml . | indent 8 }}
    {{- end }}
      serviceAccountName: {{ template "opensearch.serviceAccountName" . }}
      securityContext:
        {{- include "opensearch-service.globalPodSecurityContext" . | nindent 8 }}
        {{- with .Values.opensearch.securityContextCustom }}
          {{- toYaml . | nindent 8 -}}
        {{- end }}
        {{- if and (ne (.Values.INFRA_OPENSEARCH_FS_GROUP | toString) "<nil>") .Values.global.cloudIntegrationEnabled }}
        fsGroup: {{ .Values.INFRA_OPENSEARCH_FS_GROUP }}
        {{- end }}
      containers:
        - name: opensearch
          env:
            - name: cluster.name
              value: {{ .Values.global.clusterName }}
            - name: node.roles
              value: "data"
            - name: network.host
              value: "0.0.0.0"
            - name: node.name
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: discovery.seed_hosts
              value: {{ .Values.opensearch.discoveryOverride | default (printf "%s-discovery" (include "opensearch.fullname" .)) | quote }}
            - name: KUBERNETES_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            - name: PROCESSORS
              valueFrom:
                resourceFieldRef:
                  resource: limits.cpu
            - name: TLS_ENABLED
              value: "{{ include "opensearch.tlsEnabled" . }}"
            - name: OPENSEARCH_JAVA_OPTS
              value: {{ .Values.opensearch.data.javaOpts }}
            - name: DISABLE_PERFORMANCE_ANALYZER_AGENT_CLI
              value: "{{ not .Values.opensearch.performanceAnalyzerEnabled }}"
            - name: ALLOW_SECURITY_INITIALIZATION
              value: "false"
{{- if .Values.opensearch.extraEnvs }}
{{ toYaml .Values.opensearch.extraEnvs | indent 8 }}
{{- end }}
          image: {{ template "opensearch.image" . }}
          imagePullPolicy: {{ .Values.opensearch.imagePullPolicy | default "Always" | quote }}
          # only publish the transport port
          ports:
            - containerPort: 9300
              name: transport
          resources:
{{ toYaml .Values.opensearch.data.resources | indent 12 }}
          securityContext:
            {{- include "opensearch-service.globalContainerSecurityContext" . | nindent 12 }}
          readinessProbe:
        {{- if .Values.opensearch.data.readinessProbe }}
{{ toYaml .Values.opensearch.data.readinessProbe | indent 10 }}
        {{- else }}
            tcpSocket:
              port: transport
            initialDelaySeconds: 60
            periodSeconds: 20
            failureThreshold: 5
        {{- end }}
    {{- with .Values.opensearch.data.livenessProbe}}
          livenessProbe:
{{ toYaml . | indent 12 }}
    {{- end }}
    {{- with .Values.opensearch.data.startupProbe}}
          startupProbe:
{{ toYaml . | indent 12 }}
    {{- end }}
          volumeMounts:
            - mountPath: /usr/share/opensearch/data
              name: pvc
              subPath: {{ .Values.opensearch.data.persistence.subPath }}
            - mountPath: /usr/share/opensearch/snapshots
              name: snapshots-repository
        {{- if .Values.opensearch.audit }}
            - mountPath: {{ .Values.opensearch.configDirectory }}/opensearch-security/audit.yml
              name: config
              subPath: audit.yml
        {{- end }}
        {{- if .Values.opensearch.config }}
            - mountPath: {{ .Values.opensearch.configDirectory }}/opensearch.yml
              name: config
              subPath: opensearch.yml
        {{- end }}
        {{- if (include "opensearch.log4jConfig" .) }}
            - mountPath: {{ .Values.opensearch.configDirectory }}/log4j2.properties
              name: config
              subPath: log4j2.properties
        {{- end }}
            - mountPath: {{ .Values.opensearch.configDirectory }}/trustcerts
              name: trusted-certs
            - mountPath: {{ .Values.opensearch.configDirectory }}/logging.yml
              name: config
              subPath: logging.yml
            - mountPath: {{ .Values.opensearch.configDirectory }}/jvm.options
              name: config
              subPath: jvm.options
            - mountPath: {{ .Values.opensearch.configDirectory }}/transport-crt.pem
              name: transport-certs
              subPath: {{ template "opensearch.cert-path" . }}
            - mountPath: {{ .Values.opensearch.configDirectory }}/transport-key.pem
              name: transport-certs
              subPath: {{ template "opensearch.key-path" . }}
            - mountPath: {{ .Values.opensearch.configDirectory }}/transport-root-ca.pem
              name: transport-certs
              subPath: {{ template "opensearch.root-ca-path" . }}
            {{- if eq (include "opensearch.tlsEnabled" .) "true" }}
            - mountPath: {{ .Values.opensearch.configDirectory }}/rest-crt.pem
              name: rest-certs
              subPath: {{ template "opensearch.cert-path" . }}
            - mountPath: {{ .Values.opensearch.configDirectory }}/rest-key.pem
              name: rest-certs
              subPath: {{ template "opensearch.key-path" . }}
            - mountPath: {{ .Values.opensearch.configDirectory }}/rest-root-ca.pem
              name: rest-certs
              subPath: {{ template "opensearch.root-ca-path" . }}
            {{- end }}
            - mountPath: {{ .Values.opensearch.configDirectory }}/admin-crt.pem
              name: admin-certs
              subPath: {{ template "opensearch.cert-path" . }}
            - mountPath: {{ .Values.opensearch.configDirectory }}/admin-key.pem
              name: admin-certs
              subPath: {{ template "opensearch.key-path" . }}
            - mountPath: {{ .Values.opensearch.configDirectory }}/admin-root-ca.pem
              name: admin-certs
              subPath: {{ template "opensearch.root-ca-path" . }}
{{- if .Values.opensearch.extraVolumeMounts }}
{{ toYaml .Values.opensearch.extraVolumeMounts | indent 8 }}
{{- end }}
      volumes:
        - name: config
          secret:
            secretName: {{ template "opensearch.fullname" . }}-config
        - name: transport-certs
          secret:
            secretName: {{ template "opensearch.transport-cert-secret-name" . }}
        - name: trusted-certs
          secret:
            secretName: {{ template "opensearch.fullname" . }}-trusted-certs
        {{- if eq (include "opensearch.tlsEnabled" .) "true" }}
        - name: rest-certs
          secret:
            secretName: {{ template "opensearch.rest-cert-secret-name" . }}
        {{- end }}
        - name: admin-certs
          secret:
            secretName: {{ template "opensearch.admin-cert-secret-name" . }}
      {{- if not .Values.opensearch.data.persistence.enabled }}
        - name: "pvc"
          emptyDir: {}
      {{- else }}
      {{- if .Values.opensearch.data.persistence.existingClaim }}
        - name: "pvc"
          persistentVolumeClaim:
            claimName: {{ .Values.opensearch.data.persistence.existingClaim }}
      {{- end }}
      {{- end }}
      {{- if or (not .Values.opensearch.snapshots.enabled) .Values.opensearch.snapshots.s3.enabled }}
        - name: "snapshots-repository"
          emptyDir: {}
      {{- else }}
        - name: "snapshots-repository"
          persistentVolumeClaim:
            claimName: {{ .Values.opensearch.snapshots.persistentVolumeClaim | default (printf "pvc-%s-snapshots" (include "opensearch.fullname" .))  }}
      {{- end }}
{{- if .Values.opensearch.extraVolumes }}
{{ toYaml .Values.opensearch.extraVolumes | indent 6 }}
{{- end }}
  {{- if and .Values.opensearch.data.persistence.enabled (not .Values.opensearch.data.persistence.existingClaim) }}
  volumeClaimTemplates:
    - metadata:
        name: pvc
        annotations:
        {{- range $key, $value := .Values.opensearch.data.persistence.annotations }}
          {{ $key }}: {{ $value }}
        {{- end }}
      spec:
        accessModes:
      {{- range .Values.opensearch.data.persistence.accessModes }}
          - {{ . | quote }}
      {{- end }}
        resources:
          requests:
            storage: {{ .Values.opensearch.data.persistence.size | quote }}
    {{- if (include "opensearch.data.storageClassName" .) }}
    {{- if (eq "-" (include "opensearch.data.storageClassName" .)) }}
        storageClassName: ""
    {{- else }}
        storageClassName: "{{ (include "opensearch.data.storageClassName" .) }}"
    {{- end }}
    {{- end }}
  {{- end }}
{{- end }}
