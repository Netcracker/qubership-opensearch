{{- $secretName := include "curator.certSecretName" . }}
{{- $install := and (eq (include "curator.tlsEnabled" .) "true") ( or .Values.global.tls.generateCerts.enabled (eq (include "curator.certificatesSpecified" .) "true")) }}
{{- if and $install (ne (include "certProvider" .) "cert-manager") (not (lookup "v1" "Secret" .Release.Namespace $secretName)) }}
apiVersion: v1
kind: Secret
type: kubernetes.io/tls
metadata:
  name: {{ $secretName }}
  namespace: {{ .Release.Namespace }}
  annotations:
    "helm.sh/resource-policy": keep
data:
{{- if not .Values.global.tls.generateCerts.enabled }}
  {{- if .Values.curator.tls.certificates.crt }}
  tls.crt: {{ .Values.curator.tls.certificates.crt | quote }}
  {{- end }}
  {{- if .Values.curator.tls.certificates.key }}
  tls.key: {{ .Values.curator.tls.certificates.key | quote }}
  {{- end }}
  {{- if .Values.curator.tls.certificates.ca }}
  ca.crt: {{ .Values.curator.tls.certificates.ca | quote }}
  {{- end }}
{{- else }}
{{ include "curator.generateCerts" . | nindent 2 }}
{{- end }}
{{- end }}