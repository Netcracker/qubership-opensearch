{{- if .Values.curator.enabled }}
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
{{ include "opensearch.labels.standard" . | indent 4 }}
{{ include "opensearch-service.defaultLabels" . | indent 4 }}
    component: opensearch-curator
    name: {{ template "opensearch.fullname" . }}-curator
    app.kubernetes.io/name: {{ template "opensearch.fullname" . }}-curator
    app.kubernetes.io/instance: {{ cat (printf "%s-curator"  (include "opensearch.fullname" .)) .Values.DELIMITER .Release.Namespace | nospace | trunc 63 }}
    app.kubernetes.io/technology: python
  name: {{ template "opensearch.fullname" . }}-curator
spec:
  replicas: {{ template "opensearch.replicasForSingleService" . }}
  selector:
    matchLabels:
{{ include "opensearch.labels.selector" . | indent 6 }}
      name: {{ template "opensearch.fullname" . }}-curator
      component: opensearch-curator
  template:
    metadata:
      labels:
{{- with .Values.global.customLabels }}
  {{- toYaml . | nindent 8 -}}
{{- end }}
{{- with .Values.curator.customLabels }}
  {{- toYaml . | nindent 8 -}}
{{- end }}
{{ include "opensearch.labels.standard" . | indent 8 }}
        name: {{ template "opensearch.fullname" . }}-curator
        component: opensearch-curator
        app.kubernetes.io/name: {{ template "opensearch.fullname" . }}-curator
    spec:
      containers:
        - env:
            - name: NAMESPACE
              value: {{ .Release.Namespace }}
            - name: ES_HOST
              value: {{ default (printf "%s-internal:9200" (include "opensearch.fullname" .)) (.Values.global.externalOpensearch.enabled | ternary (printf "%s:%s" (include "external.opensearch-host" .) (include "external.opensearch-port" .)) .Values.curator.opensearchHost) }}
            - name: ES_USERNAME
              valueFrom:
                secretKeyRef:
                  key: username
                  name: {{ template "opensearch.fullname" . }}-secret
            - name: ES_PASSWORD
              valueFrom:
                secretKeyRef:
                  key: password
                  name: {{ template "opensearch.fullname" . }}-secret
            - name: ES_AUTH
              value: "$(ES_USERNAME):$(ES_PASSWORD)"
            - name: TLS_HTTP_ENABLED
              value: "{{ or (eq (include "external.tlsEnabled" .) "true") (eq (include "opensearch.tlsEnabled" .) "true") }}"
            - name: TLS_ENABLED
              value: "{{ template "curator.tlsEnabled" . }}"
            - name: SNAPSHOT_REPOSITORY_NAME
              value: {{ .Values.curator.snapshotRepositoryName | default "snapshots" }}
          {{- if eq (include "dbaas.enabled" .) "true" }}
            - name: DBAAS_ADAPTER_ADDRESS
              value: {{ .Values.dbaasAdapter.dbaasAdapterAddress | default (include "dbaas-adapter.address" .) }}
            - name: DBAAS_AGGREGATOR_REGISTRATION_ADDRESS
              value: {{ include "dbaas.registrationUrl" . | default (printf "%s://dbaas-aggregator.dbaas:%s" (include "dbaas-adapter.protocol" .) (include "dbaas-adapter.port" .)) }}
            - name: DBAAS_AGGREGATOR_PHYSICAL_DATABASE_IDENTIFIER
              value: {{ .Values.dbaasAdapter.dbaasAggregatorPhysicalDatabaseIdentifier | default .Release.Namespace }}
            - name: DBAAS_ADAPTER_USERNAME
              valueFrom:
                secretKeyRef:
                  key: username
                  name: {{ template "dbaas-adapter.name" . }}-secret
            - name: DBAAS_ADAPTER_PASSWORD
              valueFrom:
                secretKeyRef:
                  key: password
                  name: {{ template "dbaas-adapter.name" . }}-secret
            - name: DBAAS_AGGREGATOR_REGISTRATION_USERNAME
              valueFrom:
                secretKeyRef:
                  key: registration-auth-username
                  name: {{ template "dbaas-adapter.name" . }}-secret
            - name: DBAAS_AGGREGATOR_REGISTRATION_PASSWORD
              valueFrom:
                secretKeyRef:
                  key: registration-auth-password
                  name: {{ template "dbaas-adapter.name" . }}-secret
          {{- end -}}
          {{- if .Values.curator.backupSchedule }}
            - name: BACKUP_SCHEDULE
              value: {{ .Values.curator.backupSchedule }}
          {{- end }}
          {{- if .Values.curator.evictionPolicy }}
            - name: EVICTION_POLICY
              value: {{ .Values.curator.evictionPolicy }}
          {{- end }}
          {{- if and .Values.opensearch.snapshots.enabled .Values.opensearch.snapshots.s3.enabled }}
            - name: S3_ENABLED
              value: {{ .Values.opensearch.snapshots.s3.enabled | quote }}
            - name: S3_URL
              value: {{ .Values.opensearch.snapshots.s3.url | quote }}
            - name: S3_BUCKET
              value: {{ .Values.opensearch.snapshots.s3.bucket | quote }}
            - name: S3_KEY_ID
              valueFrom:
                secretKeyRef:
                  name: {{ template "opensearch.fullname" . }}-s3-secret
                  key: s3-key-id
            - name: S3_KEY_SECRET
              valueFrom:
                secretKeyRef:
                  name: {{ template "opensearch.fullname" . }}-s3-secret
                  key: s3-key-secret
          {{- end }}
            - name: BACKUP_DAEMON_API_CREDENTIALS_USERNAME
              valueFrom:
                secretKeyRef:
                  name: {{ template "opensearch.fullname" . }}-curator-secret
                  key: username
            - name: BACKUP_DAEMON_API_CREDENTIALS_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ template "opensearch.fullname" . }}-curator-secret
                  key: password
          image: {{ template "curator.image" . }}
          imagePullPolicy: {{ .Values.curator.imagePullPolicy | default "Always" | quote }}
          livenessProbe:
            tcpSocket:
              port: {{ template "curator.port" . }}
            failureThreshold: 5
            initialDelaySeconds: 30
            periodSeconds: 5
            successThreshold: 1
            timeoutSeconds: 5
          readinessProbe:
            httpGet:
              path: /health
              port: {{ template "curator.port" . }}
              scheme: {{ eq (include "curator.tlsEnabled" .) "true" | ternary "HTTPS" "HTTP" }}
            failureThreshold: 5
            initialDelaySeconds: 10
            periodSeconds: 5
            successThreshold: 1
            timeoutSeconds: 5
          resources:
            requests:
              memory: {{ default "256Mi" .Values.curator.resources.requests.memory }}
              cpu: {{ default "200m" .Values.curator.resources.requests.cpu }}
            limits:
              memory: {{ default "256Mi" .Values.curator.resources.limits.memory }}
              cpu: {{ default "200m" .Values.curator.resources.limits.cpu }}
          securityContext:
            {{- include "opensearch-service.globalContainerSecurityContext" . | nindent 12 }}
          name: {{ template "opensearch.fullname" . }}-curator
          volumeMounts:
            - mountPath: /backup-storage
              name: backup-storage
            {{- if eq (include "opensearch.tlsEnabled" .) "true" }}
            - mountPath: /trusted-certs/root-ca.pem
              name: opensearch-certs
              subPath: {{ template "opensearch.root-ca-path" . }}
            {{- end }}
            {{ if eq (include "curator.tlsEnabled" .) "true" }}
            - mountPath: /tls
              name: certs
            {{- end }}
            {{- if and .Values.opensearch.snapshots.s3.enabled .Values.opensearch.snapshots.s3.gcs.secretName .Values.opensearch.snapshots.s3.gcs.secretKey }}
            - name: gcs
              mountPath: /usr/share/opensearch/gcs
            {{- end }}
          ports:
            - protocol: TCP
              containerPort: {{ template "curator.port" . }}
        - env:
            - name: CLOUD_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            - name: ELASTICSEARCH_HOST
              value: {{ default (printf "%s-internal:9200" (include "opensearch.fullname" .)) (.Values.global.externalOpensearch.enabled | ternary (printf "%s:%s" (include "external.opensearch-host" .) (include "external.opensearch-port" .)) .Values.curator.opensearchHost) }}
            - name: ES_USERNAME
              valueFrom:
                secretKeyRef:
                  key: username
                  name: {{ template "opensearch.fullname" . }}-secret
            - name: ES_PASSWORD
              valueFrom:
                secretKeyRef:
                  key: password
                  name: {{ template "opensearch.fullname" . }}-secret
            - name: ES_AUTH
              value: "$(ES_USERNAME):$(ES_PASSWORD)"
            - name: TLS_HTTP_ENABLED
              value: "{{ or (eq (include "external.tlsEnabled" .) "true") (eq (include "opensearch.tlsEnabled" .) "true") }}"
            - name: INDICES_CLEANER_SCHEDULER_UNIT
              value: {{ .Values.curator.indicesCleanerSchedulerUnit | default "days" }}
            - name: INDICES_CLEANER_SCHEDULER_UNIT_COUNT
              value: "{{ .Values.curator.indicesCleanerSchedulerUnitCount | default 1 }}"
            - name: INDICES_CLEANER_CONFIGURATION_KEY
              value: {{ .Values.curator.indicesCleanerConfigurationKey | default "patterns_to_delete" }}
          image: {{ template "indices-cleaner.image" . }}
          imagePullPolicy: {{ .Values.curator.imagePullPolicy | default "Always" | quote }}
          livenessProbe:
            exec:
              command:
                - /bin/sh
                - '-c'
                - ps aux | grep "python3 indices_cleaner.py"
            initialDelaySeconds: 30
            timeoutSeconds: 5
            periodSeconds: 10
            successThreshold: 1
            failureThreshold: 5
          name: {{ template "opensearch.fullname" . }}-indices-cleaner
          resources:
            requests:
              memory: {{ default "256Mi" .Values.curator.resources.requests.memory }}
              cpu: {{ default "200m" .Values.curator.resources.requests.cpu }}
            limits:
              memory: {{ default "256Mi" .Values.curator.resources.limits.memory }}
              cpu: {{ default "200m" .Values.curator.resources.limits.cpu }}
          securityContext:
            {{- include "opensearch-service.globalContainerSecurityContext" . | nindent 12 }}
          volumeMounts:
            - mountPath: /opt/elasticsearch-indices-cleaner/cleaner.yml
              name: config
              subPath: cleaner.yml
            {{- if eq (include "opensearch.tlsEnabled" .) "true" }}
            - mountPath: /trusted-certs/root-ca.pem
              name: opensearch-certs
              subPath: {{ template "opensearch.root-ca-path" . }}
            {{- end }}
      volumes:
        {{- if or (not .Values.opensearch.snapshots.enabled) .Values.opensearch.snapshots.s3.enabled }}
        - name: backup-storage
          emptyDir: {}
        {{- else }}
        - name: backup-storage
          persistentVolumeClaim:
            claimName: {{ .Values.opensearch.snapshots.persistentVolumeClaim | default (printf "pvc-%s-snapshots" (include "opensearch.fullname" .))  }}
        {{- end }}
        - name: config
          configMap:
            name: {{ template "opensearch.fullname" . }}-indices-cleaner-configuration
            items:
              - path: cleaner.yml
                key: config
        {{- if eq (include "opensearch.tlsEnabled" .) "true" }}
        - name: opensearch-certs
          secret:
            secretName: {{ template "opensearch.rest-cert-secret-name" . }}
        {{- end }}
        {{ if eq (include "curator.tlsEnabled" .) "true" }}
        - name: certs
          secret:
            secretName: {{ template "curator.certSecretName" . }}
        {{- end }}
        {{- if and .Values.opensearch.snapshots.s3.enabled .Values.opensearch.snapshots.s3.gcs.secretName .Values.opensearch.snapshots.s3.gcs.secretKey }}
        - name: gcs
          secret:
            secretName: {{ .Values.opensearch.snapshots.s3.gcs.secretName }}
            items:
              - key: {{ .Values.opensearch.snapshots.s3.gcs.secretKey }}
                path: key.json
        {{- end }}
      {{- if .Values.curator.priorityClassName }}
      priorityClassName: {{ .Values.curator.priorityClassName | quote }}
      {{- end }}
    {{- with .Values.curator.nodeSelector }}
      nodeSelector:
{{ toYaml . | indent 8 }}
    {{- end }}
      securityContext:
        {{- include "opensearch-service.globalPodSecurityContext" . | nindent 8 }}
        {{- with .Values.curator.securityContext }}
          {{- toYaml . | nindent 8 -}}
        {{- end }}
        {{- if and (ne (.Values.INFRA_OPENSEARCH_FS_GROUP | toString) "<nil>") .Values.global.cloudIntegrationEnabled }}
        fsGroup: {{ .Values.INFRA_OPENSEARCH_FS_GROUP }}
        {{- end }}
    {{- with .Values.curator.affinity }}
      affinity:
{{ toYaml . | indent 8 }}
    {{- end }}
    {{- with .Values.curator.tolerations }}
      tolerations:
{{ toYaml . | indent 8 }}
    {{- end }}
{{ end }}
