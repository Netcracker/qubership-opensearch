{{- if .Values.dbaasAdapter.enabled }}
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
{{ include "opensearch.labels.standard" . | indent 4 }}
    name: {{ template "dbaas-adapter.name" . }}
    component: dbaas-opensearch-adapter
  name: {{ template "dbaas-adapter.name" . }}
spec:
  replicas: {{ template "opensearch.replicasForSingleService" . }}
  selector:
    matchLabels:
{{ include "opensearch.labels.selector" . | indent 6 }}
      name: {{ template "dbaas-adapter.name" . }}
      component: dbaas-opensearch-adapter
  template:
    metadata:
      labels:
{{- with .Values.global.customLabels }}
  {{- toYaml . | nindent 8 -}}
{{- end }}
{{- with .Values.dbaasAdapter.customLabels }}
  {{- toYaml . | nindent 8 -}}
{{- end }}
{{ include "opensearch.labels.standard" . | indent 8 }}
        name: {{ template "dbaas-adapter.name" . }}
        component: dbaas-opensearch-adapter
    spec:
      containers:
        - env:
            - name: DBAAS_ADAPTER_ADDRESS
              value: {{ .Values.dbaasAdapter.dbaasAdapterAddress | default (printf "http://%s.%s:8080" (include "dbaas-adapter.name" .) .Release.Namespace) }}
            - name: DBAAS_ADAPTER_USERNAME
              valueFrom:
                secretKeyRef:
                  key: username
                  name: {{ template "dbaas-adapter.name" . }}-secret
            - name: DBAAS_ADAPTER_PASSWORD
              valueFrom:
                secretKeyRef:
                  key: password
                  name: {{ template "dbaas-adapter.name" . }}-secret
            - name: API_VERSION
              value: {{ .Values.dbaasAdapter.apiVersion | quote }}
            - name: DBAAS_AGGREGATOR_REGISTRATION_ADDRESS
              value: {{ .Values.dbaasAdapter.dbaasAggregatorRegistrationAddress | default "http://dbaas-aggregator.dbaas:8080" }}
            - name: DBAAS_AGGREGATOR_PHYSICAL_DATABASE_IDENTIFIER
              value: {{ .Values.dbaasAdapter.dbaasAggregatorPhysicalDatabaseIdentifier | default .Release.Namespace }}
            - name: DBAAS_AGGREGATOR_REGISTRATION_USERNAME
              valueFrom:
                secretKeyRef:
                  key: registration-auth-username
                  name: {{ template "dbaas-adapter.name" . }}-secret
            - name: DBAAS_AGGREGATOR_REGISTRATION_PASSWORD
              valueFrom:
                secretKeyRef:
                  key: registration-auth-password
                  name: {{ template "dbaas-adapter.name" . }}-secret
            - name: OPENSEARCH_HOST
              value: {{ default (printf "%s.%s" (include "opensearch.fullname" .) .Release.Namespace) (.Values.global.externalOpensearch.enabled | ternary (include "external.opensearch-host" .) .Values.elasticsearchDbaasAdapter.opensearchHost) }}
            - name: OPENSEARCH_PORT
              value: "{{ default 9200 (.Values.global.externalOpensearch.enabled | ternary (include "external.opensearch-port" .) .Values.dbaasAdapter.opensearchPort) }}"
            - name: OPENSEARCH_PROTOCOL
              value: {{ template "dbaas-adapter.opensearch-protocol" . }}
            - name: OPENSEARCH_REPO
              value: {{ .Values.dbaasAdapter.opensearchRepo | default "snapshots" }}
            - name: OPENSEARCH_REPO_ROOT
              value: {{ .Values.dbaasAdapter.opensearchRepoRoot | default "/usr/share/opensearch" }}
            - name: OPENSEARCH_USERNAME
              valueFrom:
                secretKeyRef:
                  key: username
                  name: {{ template "opensearch.fullname" . }}-secret
            - name: OPENSEARCH_PASSWORD
              valueFrom:
                secretKeyRef:
                  key: password
                  name: {{ template "opensearch.fullname" . }}-secret
            - name: LABELS_FILE_LOCATION_NAME
              value: "dbaas.physical_databases.registration.labels.json"
            - name: LABELS_FILE_LOCATION_DIR
              value: "/app/config/"
          image: {{ template "dbaas-adapter.image" . }}
          imagePullPolicy: {{ .Values.dbaasAdapter.imagePullPolicy | default "Always" | quote }}
          livenessProbe:
            tcpSocket:
              port: 8080
            initialDelaySeconds: 60
            timeoutSeconds: 5
            periodSeconds: 10
            successThreshold: 1
            failureThreshold: 3
          readinessProbe:
            httpGet:
              port: 8080
              path: "/health"
            initialDelaySeconds: 60
            timeoutSeconds: 5
            periodSeconds: 10
            successThreshold: 1
            failureThreshold: 3
          resources:
{{ toYaml .Values.dbaasAdapter.resources | indent 12 }}
          name: {{ template "dbaas-adapter.name" . }}
          volumeMounts:
            - mountPath: "/app/config/"
              name: dbaas-adapter-configs
            {{- if eq (include "opensearch.tlsEnabled" .) "true" }}
            - mountPath: /trusted-certs/root-ca.pem
              name: opensearch-certs
              subPath: {{ template "opensearch.rest-root-ca-path" . }}
            {{- end }}
          ports:
            - protocol: TCP
              containerPort: 8080
      volumes:
        - name: dbaas-adapter-configs
          configMap:
            name: {{ template "dbaas-adapter.name" . }}-configs
        {{- if eq (include "opensearch.tlsEnabled" .) "true" }}
        - name: opensearch-certs
          secret:
            secretName: {{ template "opensearch.rest-cert-secret-name" . }}
        {{- end }}
    {{- with .Values.dbaasAdapter.nodeSelector }}
      nodeSelector:
{{ toYaml . | indent 8 }}
    {{- end }}
    {{- with .Values.dbaasAdapter.securityContext }}
      securityContext:
{{ toYaml . | indent 8 }}
    {{- end }}
    {{- with .Values.dbaasAdapter.affinity }}
      affinity:
{{ toYaml . | indent 8 }}
    {{- end }}
    {{- with .Values.dbaasAdapter.tolerations }}
      tolerations:
{{ toYaml . | indent 8 }}
    {{- end }}
{{ end }}
